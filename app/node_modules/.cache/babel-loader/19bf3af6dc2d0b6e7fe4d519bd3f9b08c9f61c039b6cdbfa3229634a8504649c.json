{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { p as props, d as defaults } from './componentEl-eebaee58.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes, p as paddingPropTypes } from './spacing-59630a80.js';\nimport { a as addBorderClasses, b as borderPropTypes } from './border-f9778fe0.js';\nfunction GroupItem({\n  children,\n  componentEl: Component,\n  flex,\n  margin,\n  padding,\n  className,\n  fullWidth,\n  align,\n  justify,\n  grow,\n  shrink,\n  border,\n  // eslint-disable-next-line react/prop-types\n  style,\n  ...otherProps\n}) {\n  let cssClasses = ['st_grp__item'];\n  if (fullWidth) cssClasses.push('st_width--full');\n  if (flex) cssClasses.push('st_grp__item--flex');\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  if (align) cssClasses.push(`st_alignself--${align}`);\n  if (justify) cssClasses.push(`st_justifyself--${justify}`);\n  const styleProp = style || {};\n  styleProp['--st-flexgrow'] = grow;\n  styleProp['--st-flexshrink'] = shrink;\n  cssClasses = addBorderClasses(border, cssClasses);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' '),\n    style: styleProp\n  }, otherProps), children);\n}\nGroupItem.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** padding for component, if any */\n  padding: paddingPropTypes,\n  /** whether item should take up 100% of available width */\n  fullWidth: PropTypes.bool,\n  /** item takes up rest of available space */\n  flex: PropTypes.bool,\n  /** align-self CSS property */\n  align: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'baseline', 'stretch']),\n  /** justify-self CSS property */\n  justify: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'baseline', 'stretch']),\n  /** flex-grow css property */\n  grow: PropTypes.number,\n  /** flex-shrink css property */\n  shrink: PropTypes.number,\n  /** whether column should show a border to the left or right */\n  border: borderPropTypes\n};\nGroupItem.defaultProps = {\n  componentEl: defaults,\n  className: null,\n  margin: null,\n  padding: null,\n  fullWidth: false,\n  flex: false,\n  align: null,\n  justify: null,\n  grow: 0,\n  shrink: 0,\n  border: null\n};\nGroupItem.displayName = 'Group.Item';\nfunction Group({\n  children,\n  componentEl: Component,\n  align,\n  valign,\n  direction,\n  margin,\n  inline,\n  className,\n  gap,\n  colgap,\n  rowgap,\n  wrap,\n  fullWidth,\n  fullHeight,\n  border,\n  ...otherProps\n}) {\n  let cssClasses = ['st_grp', `st_grp--${direction}`, `st_grp--a-${align}`, `st_grp--v-${valign}`];\n  cssClasses = addBorderClasses(border, cssClasses);\n  if (gap && !rowgap && !colgap) cssClasses.push(`st_grp--g-${gap}`);\n  if (rowgap) cssClasses.push(`st_grp--gr-${rowgap}`);\n  if (colgap) cssClasses.push(`st_grp--gc-${colgap}`);\n  if (fullWidth) cssClasses.push('st_width--full');\n  if (fullHeight) cssClasses.push('st_height--full');\n  if (inline) cssClasses.push('st_grp--inline');\n  if (wrap) cssClasses.push('st_grp--wrap');\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nGroup.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** whether to display flex inline */\n  inline: PropTypes.bool,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** direction of items. Row = horizontal, Column = vertical */\n  direction: PropTypes.oneOf(['row', 'column', 'row-reverse', 'column-reverse']),\n  /** how to align items horizontally */\n  align: PropTypes.oneOf(['center', 'start', 'end', 'stretch', 'space-between', 'initial']),\n  /** space between items, if any */\n  gap: PropTypes.oneOf(['xs', 'sm', 'smd', 'md', 'mlg', 'lg', 'xl', 'none']),\n  /** space between columns, if not set via `gap` */\n  colgap: PropTypes.oneOf(['xs', 'sm', 'smd', 'md', 'mlg', 'lg', 'xl', 'none']),\n  /** space between rows, if not set via `gap` */\n  rowgap: PropTypes.oneOf(['xs', 'sm', 'smd', 'md', 'mlg', 'lg', 'xl', 'none']),\n  /** how to align items vertically */\n  valign: PropTypes.oneOf(['baseline', 'center', 'start', 'end', 'stretch', 'initial']),\n  /** only used in row mode. Whether to wrap if not enough horizontal space */\n  wrap: PropTypes.bool,\n  /** whether component takes up 100% of available width */\n  fullWidth: PropTypes.bool,\n  /** whether component takes up 100% of available height */\n  fullHeight: PropTypes.bool,\n  /** optional standard border around component */\n  border: borderPropTypes\n};\nGroup.defaultProps = {\n  componentEl: defaults,\n  inline: false,\n  className: null,\n  margin: null,\n  direction: 'row',\n  align: 'start',\n  valign: 'center',\n  gap: 'mlg',\n  wrap: true,\n  colgap: null,\n  rowgap: null,\n  fullWidth: null,\n  fullHeight: null,\n  border: null\n};\nGroup.Item = GroupItem;\nexport { Group as G };","map":{"version":3,"names":["_extends","React","PropTypes","p","props","d","defaults","a","addClassNames","c","classNamePropTypes","addSpacingClasses","m","marginPropTypes","paddingPropTypes","addBorderClasses","b","borderPropTypes","GroupItem","children","componentEl","Component","flex","margin","padding","className","fullWidth","align","justify","grow","shrink","border","style","otherProps","cssClasses","push","styleProp","createElement","join","propTypes","bool","oneOf","number","defaultProps","displayName","Group","valign","direction","inline","gap","colgap","rowgap","wrap","fullHeight","Item","G"],"sources":["/Users/mike/node_modules/@screentone/core/es/Group-3717a816.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { p as props, d as defaults } from './componentEl-eebaee58.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes, p as paddingPropTypes } from './spacing-59630a80.js';\nimport { a as addBorderClasses, b as borderPropTypes } from './border-f9778fe0.js';\n\nfunction GroupItem({\n  children,\n  componentEl: Component,\n  flex,\n  margin,\n  padding,\n  className,\n  fullWidth,\n  align,\n  justify,\n  grow,\n  shrink,\n  border,\n  // eslint-disable-next-line react/prop-types\n  style,\n  ...otherProps\n}) {\n  let cssClasses = ['st_grp__item'];\n  if (fullWidth) cssClasses.push('st_width--full');\n  if (flex) cssClasses.push('st_grp__item--flex');\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  if (align) cssClasses.push(`st_alignself--${align}`);\n  if (justify) cssClasses.push(`st_justifyself--${justify}`);\n  const styleProp = style || {};\n  styleProp['--st-flexgrow'] = grow;\n  styleProp['--st-flexshrink'] = shrink;\n  cssClasses = addBorderClasses(border, cssClasses);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' '),\n    style: styleProp\n  }, otherProps), children);\n}\nGroupItem.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** padding for component, if any */\n  padding: paddingPropTypes,\n  /** whether item should take up 100% of available width */\n  fullWidth: PropTypes.bool,\n  /** item takes up rest of available space */\n  flex: PropTypes.bool,\n  /** align-self CSS property */\n  align: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'baseline', 'stretch']),\n  /** justify-self CSS property */\n  justify: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'baseline', 'stretch']),\n  /** flex-grow css property */\n  grow: PropTypes.number,\n  /** flex-shrink css property */\n  shrink: PropTypes.number,\n  /** whether column should show a border to the left or right */\n  border: borderPropTypes\n};\nGroupItem.defaultProps = {\n  componentEl: defaults,\n  className: null,\n  margin: null,\n  padding: null,\n  fullWidth: false,\n  flex: false,\n  align: null,\n  justify: null,\n  grow: 0,\n  shrink: 0,\n  border: null\n};\nGroupItem.displayName = 'Group.Item';\n\nfunction Group({\n  children,\n  componentEl: Component,\n  align,\n  valign,\n  direction,\n  margin,\n  inline,\n  className,\n  gap,\n  colgap,\n  rowgap,\n  wrap,\n  fullWidth,\n  fullHeight,\n  border,\n  ...otherProps\n}) {\n  let cssClasses = ['st_grp', `st_grp--${direction}`, `st_grp--a-${align}`, `st_grp--v-${valign}`];\n  cssClasses = addBorderClasses(border, cssClasses);\n  if (gap && !rowgap && !colgap) cssClasses.push(`st_grp--g-${gap}`);\n  if (rowgap) cssClasses.push(`st_grp--gr-${rowgap}`);\n  if (colgap) cssClasses.push(`st_grp--gc-${colgap}`);\n  if (fullWidth) cssClasses.push('st_width--full');\n  if (fullHeight) cssClasses.push('st_height--full');\n  if (inline) cssClasses.push('st_grp--inline');\n  if (wrap) cssClasses.push('st_grp--wrap');\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nGroup.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** whether to display flex inline */\n  inline: PropTypes.bool,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** direction of items. Row = horizontal, Column = vertical */\n  direction: PropTypes.oneOf(['row', 'column', 'row-reverse', 'column-reverse']),\n  /** how to align items horizontally */\n  align: PropTypes.oneOf(['center', 'start', 'end', 'stretch', 'space-between', 'initial']),\n  /** space between items, if any */\n  gap: PropTypes.oneOf(['xs', 'sm', 'smd', 'md', 'mlg', 'lg', 'xl', 'none']),\n  /** space between columns, if not set via `gap` */\n  colgap: PropTypes.oneOf(['xs', 'sm', 'smd', 'md', 'mlg', 'lg', 'xl', 'none']),\n  /** space between rows, if not set via `gap` */\n  rowgap: PropTypes.oneOf(['xs', 'sm', 'smd', 'md', 'mlg', 'lg', 'xl', 'none']),\n  /** how to align items vertically */\n  valign: PropTypes.oneOf(['baseline', 'center', 'start', 'end', 'stretch', 'initial']),\n  /** only used in row mode. Whether to wrap if not enough horizontal space */\n  wrap: PropTypes.bool,\n  /** whether component takes up 100% of available width */\n  fullWidth: PropTypes.bool,\n  /** whether component takes up 100% of available height */\n  fullHeight: PropTypes.bool,\n  /** optional standard border around component */\n  border: borderPropTypes\n};\nGroup.defaultProps = {\n  componentEl: defaults,\n  inline: false,\n  className: null,\n  margin: null,\n  direction: 'row',\n  align: 'start',\n  valign: 'center',\n  gap: 'mlg',\n  wrap: true,\n  colgap: null,\n  rowgap: null,\n  fullWidth: null,\n  fullHeight: null,\n  border: null\n};\nGroup.Item = GroupItem;\n\nexport { Group as G };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}