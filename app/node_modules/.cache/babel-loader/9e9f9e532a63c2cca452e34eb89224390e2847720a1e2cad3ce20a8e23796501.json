{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { C as ConditionalFocusTrap } from './ConditionalFocusTrap-851f4cf3.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\n\n/**\nComponent to display an Overlay\n*/\nfunction Overlay({\n  className,\n  onDismiss,\n  children,\n  status,\n  componentRef,\n  renderNode,\n  focusTrap,\n  ...otherProps\n}) {\n  const cssClasses = ['st_overlay', `st_overlay--${status}`];\n  let OverlayClasses = ['st_overlay__content'];\n  OverlayClasses = addClassNames(className, OverlayClasses);\n  const contentRef = useRef(null);\n\n  // handle when X is clicked to manually close Overlay\n  const handleDismiss = useCallback(() => {\n    if (onDismiss) onDismiss();\n  }, [onDismiss]);\n\n  // close when user clicks on scrim\n  const listenClick = useCallback(e => {\n    if (contentRef.current && !contentRef.current.contains(e.target)) {\n      handleDismiss();\n    }\n  }, [handleDismiss, contentRef]);\n  const listenKeyboard = useCallback(e => {\n    if (e.key === 'Escape' || e.keyCode === 27) {\n      handleDismiss();\n    }\n  }, [handleDismiss]);\n\n  // listen for Esc key\n  useEffect(() => {\n    window.addEventListener('keydown', listenKeyboard);\n    return () => window.removeEventListener('keydown', listenKeyboard);\n  }, [listenKeyboard]);\n\n  /* eslint-disable */\n  // need to disable some a11y rules around clicking the scrim to close modal\n  // the key event is attached to window already\n  // eslint-disable jsx-a11y/click-events-have-key-events jsx-a11y/no-static-element-interactions\n  const content = /*#__PURE__*/React.createElement(ConditionalFocusTrap, {\n    focusTrap: focusTrap,\n    focusTrapOptions: {\n      fallbackFocus: `.${OverlayClasses.join('.')}`\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cssClasses.join(' '),\n    ref: componentRef,\n    onClick: listenClick,\n    \"aria-label\": \"Press Esc to Close\"\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: OverlayClasses.join(' ')\n  }, otherProps, {\n    role: \"dialog\",\n    ref: contentRef,\n    tabIndex: -1\n  }), children)));\n  /* eslint-enable */\n\n  if (status === 'initial' || status === 'closed') return null;\n  if (!renderNode) return content;\n  return /*#__PURE__*/ReactDOM.createPortal(content, renderNode);\n}\nOverlay.propTypes = {\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** callback when Overlay is dismissed, either via the X icon, or by pressing Esc */\n  onDismiss: PropTypes.func,\n  /** node where Overlay should be rendered */\n  renderNode: PropTypes.any,\n  /** status of Overlay, generally should be open or closed */\n  status: PropTypes.oneOf(['initial', 'beforeopen', 'opening', 'closing', 'closed', 'open']),\n  /** ref for element */\n  componentRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /** whether to trap focus when Dialog is open, for accessibility */\n  focusTrap: PropTypes.bool\n};\nOverlay.defaultProps = {\n  className: null,\n  onDismiss: () => null,\n  renderNode: null,\n  status: 'initial',\n  componentRef: null,\n  focusTrap: true\n};\nOverlay.displayName = 'Overlay';\nexport { Overlay as O };","map":{"version":3,"names":["_extends","React","useRef","useCallback","useEffect","ReactDOM","PropTypes","C","ConditionalFocusTrap","a","addClassNames","c","classNamePropTypes","Overlay","className","onDismiss","children","status","componentRef","renderNode","focusTrap","otherProps","cssClasses","OverlayClasses","contentRef","handleDismiss","listenClick","e","current","contains","target","listenKeyboard","key","keyCode","window","addEventListener","removeEventListener","content","createElement","focusTrapOptions","fallbackFocus","join","ref","onClick","role","tabIndex","createPortal","propTypes","func","any","oneOf","oneOfType","shape","bool","defaultProps","displayName","O"],"sources":["/Users/mike/node_modules/@screentone/core/es/Overlay-637ef48d.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/extends';\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { C as ConditionalFocusTrap } from './ConditionalFocusTrap-851f4cf3.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\n\n/**\nComponent to display an Overlay\n*/\nfunction Overlay({\n  className,\n  onDismiss,\n  children,\n  status,\n  componentRef,\n  renderNode,\n  focusTrap,\n  ...otherProps\n}) {\n  const cssClasses = ['st_overlay', `st_overlay--${status}`];\n  let OverlayClasses = ['st_overlay__content'];\n  OverlayClasses = addClassNames(className, OverlayClasses);\n  const contentRef = useRef(null);\n\n  // handle when X is clicked to manually close Overlay\n  const handleDismiss = useCallback(() => {\n    if (onDismiss) onDismiss();\n  }, [onDismiss]);\n\n  // close when user clicks on scrim\n  const listenClick = useCallback(e => {\n    if (contentRef.current && !contentRef.current.contains(e.target)) {\n      handleDismiss();\n    }\n  }, [handleDismiss, contentRef]);\n  const listenKeyboard = useCallback(e => {\n    if (e.key === 'Escape' || e.keyCode === 27) {\n      handleDismiss();\n    }\n  }, [handleDismiss]);\n\n  // listen for Esc key\n  useEffect(() => {\n    window.addEventListener('keydown', listenKeyboard);\n    return () => window.removeEventListener('keydown', listenKeyboard);\n  }, [listenKeyboard]);\n\n  /* eslint-disable */\n  // need to disable some a11y rules around clicking the scrim to close modal\n  // the key event is attached to window already\n  // eslint-disable jsx-a11y/click-events-have-key-events jsx-a11y/no-static-element-interactions\n  const content = /*#__PURE__*/React.createElement(ConditionalFocusTrap, {\n    focusTrap: focusTrap,\n    focusTrapOptions: {\n      fallbackFocus: `.${OverlayClasses.join('.')}`\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cssClasses.join(' '),\n    ref: componentRef,\n    onClick: listenClick,\n    \"aria-label\": \"Press Esc to Close\"\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: OverlayClasses.join(' ')\n  }, otherProps, {\n    role: \"dialog\",\n    ref: contentRef,\n    tabIndex: -1\n  }), children)));\n  /* eslint-enable */\n\n  if (status === 'initial' || status === 'closed') return null;\n  if (!renderNode) return content;\n  return /*#__PURE__*/ReactDOM.createPortal(content, renderNode);\n}\nOverlay.propTypes = {\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** callback when Overlay is dismissed, either via the X icon, or by pressing Esc */\n  onDismiss: PropTypes.func,\n  /** node where Overlay should be rendered */\n  renderNode: PropTypes.any,\n  /** status of Overlay, generally should be open or closed */\n  status: PropTypes.oneOf(['initial', 'beforeopen', 'opening', 'closing', 'closed', 'open']),\n  /** ref for element */\n  componentRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /** whether to trap focus when Dialog is open, for accessibility */\n  focusTrap: PropTypes.bool\n};\nOverlay.defaultProps = {\n  className: null,\n  onDismiss: () => null,\n  renderNode: null,\n  status: 'initial',\n  componentRef: null,\n  focusTrap: true\n};\nOverlay.displayName = 'Overlay';\n\nexport { Overlay as O };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}