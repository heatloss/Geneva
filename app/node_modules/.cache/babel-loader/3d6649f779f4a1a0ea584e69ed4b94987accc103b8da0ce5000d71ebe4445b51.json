{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { p as props, d as defaults } from './componentEl-eebaee58.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes } from './spacing-59630a80.js';\nimport { T as Token } from './Token-42ee7744.js';\n\n/*\nGeneric component for a single toggle item, to be used in the context of Tab\n*/\nfunction TabItem({\n  componentEl: Component,\n  onChange,\n  className,\n  count,\n  icon,\n  iconColor,\n  selected,\n  children,\n  disabled,\n  value,\n  ...otherProps\n}) {\n  function localChangeHandler() {\n    if (!selected && !disabled) onChange(value);\n  }\n  const cssClasses = ['st_tab'];\n  if (className) cssClasses.push(className);\n  const componentProps = {};\n  if (selected) cssClasses.push('st_tab--selected');\n  if (disabled) {\n    componentProps['aria-disabled'] = 'true';\n    cssClasses.push('st_tab--disabled');\n    if (Component === 'button') componentProps.disabled = true;\n  }\n  if (Component === 'button') componentProps.disabled = selected;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    onClick: localChangeHandler,\n    className: cssClasses.join(' '),\n    role: \"tab\"\n  }, componentProps, otherProps), children, icon && /*#__PURE__*/React.createElement(Token, {\n    icon: icon,\n    margin: {\n      left: 'sm'\n    },\n    color: iconColor\n  }), typeof count === 'number' && !Number.isNaN(count) && /*#__PURE__*/React.createElement(Token, {\n    margin: {\n      left: 'sm'\n    },\n    color: selected ? 'blurple' : 'gray'\n  }, count));\n}\nTabItem.propTypes = {\n  /** additional CSS classes for outermost element, if any */\n  className: PropTypes.string,\n  /** callback when tab is clicked, and is not currently selected */\n  onChange: PropTypes.func,\n  /** component or DOM element to use for rendering outermost tag */\n  componentEl: props,\n  /* optional number */\n  count: PropTypes.number,\n  /** optional icon. A screentone icon component, e.g. IconStar */\n  icon: PropTypes.any,\n  /** optional icon color */\n  iconColor: PropTypes.oneOf(['gray', 'lava', 'blurple', 'emerald', 'tangerine']),\n  /** whether tab is currently selected */\n  selected: PropTypes.bool,\n  /** value of tab, useful when tab is clicked */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** whether control is disabled */\n  disabled: PropTypes.bool\n};\n\n// default props\nTabItem.defaultProps = {\n  className: null,\n  onChange: null,\n  count: null,\n  componentEl: 'button',\n  icon: null,\n  iconColor: 'gray',\n  selected: false,\n  value: undefined,\n  disabled: false\n};\n\n/*\nGeneric component for Tabs\nAccepts one or more Tab.Item component inside\nDoes not do any state management! See Storybook for examples for state management\n*/\nfunction Tabs({\n  componentEl: Component,\n  className,\n  onChange,\n  children,\n  margin,\n  value,\n  ...otherProps\n}) {\n  let childIndex = 0;\n  const childrenWithProps = React.Children.map(children, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    const childValue = typeof child.props.value === 'undefined' ? childIndex : child.props.value;\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, {\n      selected,\n      onChange,\n      value: childValue\n    });\n  });\n  let cssClasses = ['st_tabs'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n\n  // Role's of tablist, tab, etc. should only be added if the tabs correspond to panels\n  //   - https://getbootstrap.com/docs/5.0/navs-tabs/#regarding-accessibility\n  //   - So, it should not be added unless a full-blown tabs with tab panels component is built\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), childrenWithProps);\n}\n\n// proptypes definitions\nTabs.propTypes = {\n  /** event handler when tab is clicked */\n  onChange: PropTypes.func,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** currently selected Tab, either the index number of the actual value of tab */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\n// default props\nTabs.defaultProps = {\n  onChange: null,\n  className: null,\n  margin: null,\n  componentEl: defaults,\n  value: null\n};\nTabs.Item = TabItem;\nTabs.Item.displayName = 'Tabs.Item';\nexport { Tabs as T };","map":{"version":3,"names":["_extends","PropTypes","React","p","props","d","defaults","a","addClassNames","c","classNamePropTypes","addSpacingClasses","m","marginPropTypes","T","Token","TabItem","componentEl","Component","onChange","className","count","icon","iconColor","selected","children","disabled","value","otherProps","localChangeHandler","cssClasses","push","componentProps","createElement","onClick","join","role","margin","left","color","Number","isNaN","propTypes","string","func","number","any","oneOf","bool","oneOfType","defaultProps","undefined","Tabs","childIndex","childrenWithProps","Children","map","child","isValidElement","childValue","cloneElement","Item","displayName"],"sources":["/Users/mike/node_modules/@screentone/core/es/Tabs-5b9693fe.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/extends';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { p as props, d as defaults } from './componentEl-eebaee58.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes } from './spacing-59630a80.js';\nimport { T as Token } from './Token-42ee7744.js';\n\n/*\nGeneric component for a single toggle item, to be used in the context of Tab\n*/\nfunction TabItem({\n  componentEl: Component,\n  onChange,\n  className,\n  count,\n  icon,\n  iconColor,\n  selected,\n  children,\n  disabled,\n  value,\n  ...otherProps\n}) {\n  function localChangeHandler() {\n    if (!selected && !disabled) onChange(value);\n  }\n  const cssClasses = ['st_tab'];\n  if (className) cssClasses.push(className);\n  const componentProps = {};\n  if (selected) cssClasses.push('st_tab--selected');\n  if (disabled) {\n    componentProps['aria-disabled'] = 'true';\n    cssClasses.push('st_tab--disabled');\n    if (Component === 'button') componentProps.disabled = true;\n  }\n  if (Component === 'button') componentProps.disabled = selected;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    onClick: localChangeHandler,\n    className: cssClasses.join(' '),\n    role: \"tab\"\n  }, componentProps, otherProps), children, icon && /*#__PURE__*/React.createElement(Token, {\n    icon: icon,\n    margin: {\n      left: 'sm'\n    },\n    color: iconColor\n  }), typeof count === 'number' && !Number.isNaN(count) && /*#__PURE__*/React.createElement(Token, {\n    margin: {\n      left: 'sm'\n    },\n    color: selected ? 'blurple' : 'gray'\n  }, count));\n}\nTabItem.propTypes = {\n  /** additional CSS classes for outermost element, if any */\n  className: PropTypes.string,\n  /** callback when tab is clicked, and is not currently selected */\n  onChange: PropTypes.func,\n  /** component or DOM element to use for rendering outermost tag */\n  componentEl: props,\n  /* optional number */\n  count: PropTypes.number,\n  /** optional icon. A screentone icon component, e.g. IconStar */\n  icon: PropTypes.any,\n  /** optional icon color */\n  iconColor: PropTypes.oneOf(['gray', 'lava', 'blurple', 'emerald', 'tangerine']),\n  /** whether tab is currently selected */\n  selected: PropTypes.bool,\n  /** value of tab, useful when tab is clicked */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** whether control is disabled */\n  disabled: PropTypes.bool\n};\n\n// default props\nTabItem.defaultProps = {\n  className: null,\n  onChange: null,\n  count: null,\n  componentEl: 'button',\n  icon: null,\n  iconColor: 'gray',\n  selected: false,\n  value: undefined,\n  disabled: false\n};\n\n/*\nGeneric component for Tabs\nAccepts one or more Tab.Item component inside\nDoes not do any state management! See Storybook for examples for state management\n*/\nfunction Tabs({\n  componentEl: Component,\n  className,\n  onChange,\n  children,\n  margin,\n  value,\n  ...otherProps\n}) {\n  let childIndex = 0;\n  const childrenWithProps = React.Children.map(children, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    const childValue = typeof child.props.value === 'undefined' ? childIndex : child.props.value;\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, {\n      selected,\n      onChange,\n      value: childValue\n    });\n  });\n  let cssClasses = ['st_tabs'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n\n  // Role's of tablist, tab, etc. should only be added if the tabs correspond to panels\n  //   - https://getbootstrap.com/docs/5.0/navs-tabs/#regarding-accessibility\n  //   - So, it should not be added unless a full-blown tabs with tab panels component is built\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), childrenWithProps);\n}\n\n// proptypes definitions\nTabs.propTypes = {\n  /** event handler when tab is clicked */\n  onChange: PropTypes.func,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** currently selected Tab, either the index number of the actual value of tab */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\n// default props\nTabs.defaultProps = {\n  onChange: null,\n  className: null,\n  margin: null,\n  componentEl: defaults,\n  value: null\n};\nTabs.Item = TabItem;\nTabs.Item.displayName = 'Tabs.Item';\n\nexport { Tabs as T };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}