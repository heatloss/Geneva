{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { c as classNamePropTypes, a as addClassNames } from './classNames-56c6ff01.js';\nimport IconCross from './IconCross.js';\nimport { p as props, d as defaults } from './componentEl-eebaee58.js';\nimport { p as paddingPropTypes } from './spacing-59630a80.js';\nimport { B as Box } from './Box-e6bd433f.js';\nimport { C as ConditionalFocusTrap } from './ConditionalFocusTrap-851f4cf3.js';\n\n/**\nComponent to display a Dialog close button\n*/\nfunction DialogContent({\n  children,\n  padding,\n  ...otherProps\n}) {\n  return /*#__PURE__*/React.createElement(Box.Content, _extends({\n    padding: padding,\n    margin: {\n      all: 'none'\n    }\n  }, otherProps), children);\n}\nDialogContent.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** padding for contents. Setting this overrides defaults and does not extend them */\n  padding: paddingPropTypes\n};\nDialogContent.defaultProps = {\n  componentEl: defaults,\n  className: null,\n  padding: {\n    horizontal: 'mlg',\n    top: 'md',\n    bottom: 'mlg'\n  }\n};\nDialogContent.displayName = 'Dialog.Content';\n\n/**\nComponent to display actions at the bottom of a Dialog\n*/\nfunction DialogActions({\n  componentEl: Component,\n  className,\n  children,\n  ...otherProps\n}) {\n  let cssClasses = ['st_dialog__actions'];\n  cssClasses = addClassNames(className, cssClasses);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nDialogActions.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes\n};\nDialogActions.defaultProps = {\n  componentEl: defaults,\n  className: null\n};\nDialogActions.displayName = 'Dialog.Actions';\n\n/**\nComponent to display a Dialog close button\n*/\nfunction DialogTitle({\n  componentEl,\n  className,\n  padding,\n  children,\n  ...otherProps\n}) {\n  return /*#__PURE__*/React.createElement(Box.Title, _extends({\n    padding: padding,\n    margin: {\n      all: 'none'\n    }\n  }, otherProps), children);\n}\nDialogTitle.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** padding for title. Setting this overrides defaults and does not extend them */\n  padding: paddingPropTypes\n};\nDialogTitle.defaultProps = {\n  componentEl: defaults,\n  className: null,\n  padding: {\n    vertical: 'smd',\n    left: 'mlg',\n    right: 'xl'\n  }\n};\nDialogTitle.displayName = 'Dialog.Title';\n\n/**\nComponent to display a Dialog\n*/\nfunction Dialog({\n  className,\n  onDismiss,\n  children,\n  status,\n  size,\n  componentRef,\n  renderNode,\n  focusTrap,\n  overflow,\n  ...otherProps\n}) {\n  const cssClasses = ['st_dialog', `st_dialog--${status}`];\n  let dialogClasses = ['st_dialog__content', `st_dialog__content--${size}`];\n  dialogClasses = addClassNames(className, dialogClasses);\n  if (overflow) dialogClasses.push(`st_overflow--${overflow}`);\n  const contentRef = useRef(null);\n\n  // handle when X is clicked to manually close Dialog\n  const handleDismiss = useCallback(() => {\n    if (onDismiss) onDismiss();\n  }, [onDismiss]);\n\n  // close when user clicks on scrim\n  const listenClick = useCallback(e => {\n    if (contentRef.current && !contentRef.current.contains(e.target)) {\n      handleDismiss();\n    }\n  }, [handleDismiss, contentRef]);\n  const listenKeyboard = useCallback(e => {\n    if (e.key === 'Escape' || e.keyCode === 27) {\n      handleDismiss();\n    }\n  }, [handleDismiss]);\n\n  // listen for Esc key\n  useEffect(() => {\n    window.addEventListener('keydown', listenKeyboard);\n    return () => window.removeEventListener('keydown', listenKeyboard);\n  }, [listenKeyboard]);\n\n  /* eslint-disable */\n  // need to disable some a11y rules around clicking the scrim to close modal\n  // the key event is attached to window already\n  // eslint-disable jsx-a11y/click-events-have-key-events jsx-a11y/no-static-element-interactions\n  const content = /*#__PURE__*/React.createElement(ConditionalFocusTrap, {\n    focusTrap: focusTrap\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-modal\": \"true\",\n    className: cssClasses.join(' '),\n    ref: componentRef,\n    onPointerDown: listenClick\n  }, /*#__PURE__*/React.createElement(Box, _extends({\n    className: dialogClasses.join(' ')\n  }, otherProps, {\n    padding: {\n      all: 'none'\n    },\n    margin: null,\n    role: \"dialog\",\n    componentRef: contentRef\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"st_dialog__closewrap\"\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"aria-label\": \"dismiss\",\n    size: \"md\",\n    className: \"st_dialog__close\",\n    onClick: handleDismiss\n  }, /*#__PURE__*/React.createElement(IconCross, {\n    alt: \"dismiss\"\n  }))), children)));\n  /* eslint-enable */\n\n  if (status === 'initial' || status === 'closed') return null;\n  if (!renderNode) return content;\n  return /*#__PURE__*/ReactDOM.createPortal(content, renderNode);\n}\nDialog.propTypes = {\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** callback when Dialog is dismissed, either via the X icon, or by pressing Esc */\n  onDismiss: PropTypes.func,\n  /** node where Dialog should be rendered */\n  renderNode: PropTypes.any,\n  /** status of Dialog, generally should be open or closed */\n  status: PropTypes.oneOf(['initial', 'beforeopen', 'opening', 'closing', 'closed', 'open']),\n  /** size of Dialog */\n  size: PropTypes.oneOf(['fluid', 'sm', 'md', 'lg', 'xl']),\n  /** ref for element */\n  componentRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /** whether to trap focus when Dialog is open, for accessibility */\n  focusTrap: PropTypes.bool,\n  /** overflow behavior when dialog contents are larger than the available viewport space */\n  overflow: PropTypes.oneOf(['auto', 'visible', 'hidden', 'scroll'])\n};\nDialog.defaultProps = {\n  className: null,\n  onDismiss: () => null,\n  renderNode: null,\n  status: 'initial',\n  componentRef: null,\n  size: 'md',\n  focusTrap: true,\n  overflow: 'auto'\n};\nDialog.displayName = 'Dialog';\nDialog.Title = DialogTitle;\nDialog.Content = DialogContent;\nDialog.Actions = DialogActions;\nexport { Dialog as D };","map":{"version":3,"names":["_extends","React","useRef","useCallback","useEffect","ReactDOM","PropTypes","c","classNamePropTypes","a","addClassNames","IconCross","p","props","d","defaults","paddingPropTypes","B","Box","C","ConditionalFocusTrap","DialogContent","children","padding","otherProps","createElement","Content","margin","all","propTypes","componentEl","className","defaultProps","horizontal","top","bottom","displayName","DialogActions","Component","cssClasses","join","DialogTitle","Title","vertical","left","right","Dialog","onDismiss","status","size","componentRef","renderNode","focusTrap","overflow","dialogClasses","push","contentRef","handleDismiss","listenClick","e","current","contains","target","listenKeyboard","key","keyCode","window","addEventListener","removeEventListener","content","ref","onPointerDown","role","type","onClick","alt","createPortal","func","any","oneOf","oneOfType","shape","bool","Actions","D"],"sources":["/Users/mike/node_modules/@screentone/core/es/Dialog-58992eb4.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/extends';\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { c as classNamePropTypes, a as addClassNames } from './classNames-56c6ff01.js';\nimport IconCross from './IconCross.js';\nimport { p as props, d as defaults } from './componentEl-eebaee58.js';\nimport { p as paddingPropTypes } from './spacing-59630a80.js';\nimport { B as Box } from './Box-e6bd433f.js';\nimport { C as ConditionalFocusTrap } from './ConditionalFocusTrap-851f4cf3.js';\n\n/**\nComponent to display a Dialog close button\n*/\nfunction DialogContent({\n  children,\n  padding,\n  ...otherProps\n}) {\n  return /*#__PURE__*/React.createElement(Box.Content, _extends({\n    padding: padding,\n    margin: {\n      all: 'none'\n    }\n  }, otherProps), children);\n}\nDialogContent.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** padding for contents. Setting this overrides defaults and does not extend them */\n  padding: paddingPropTypes\n};\nDialogContent.defaultProps = {\n  componentEl: defaults,\n  className: null,\n  padding: {\n    horizontal: 'mlg',\n    top: 'md',\n    bottom: 'mlg'\n  }\n};\nDialogContent.displayName = 'Dialog.Content';\n\n/**\nComponent to display actions at the bottom of a Dialog\n*/\nfunction DialogActions({\n  componentEl: Component,\n  className,\n  children,\n  ...otherProps\n}) {\n  let cssClasses = ['st_dialog__actions'];\n  cssClasses = addClassNames(className, cssClasses);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nDialogActions.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes\n};\nDialogActions.defaultProps = {\n  componentEl: defaults,\n  className: null\n};\nDialogActions.displayName = 'Dialog.Actions';\n\n/**\nComponent to display a Dialog close button\n*/\nfunction DialogTitle({\n  componentEl,\n  className,\n  padding,\n  children,\n  ...otherProps\n}) {\n  return /*#__PURE__*/React.createElement(Box.Title, _extends({\n    padding: padding,\n    margin: {\n      all: 'none'\n    }\n  }, otherProps), children);\n}\nDialogTitle.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** padding for title. Setting this overrides defaults and does not extend them */\n  padding: paddingPropTypes\n};\nDialogTitle.defaultProps = {\n  componentEl: defaults,\n  className: null,\n  padding: {\n    vertical: 'smd',\n    left: 'mlg',\n    right: 'xl'\n  }\n};\nDialogTitle.displayName = 'Dialog.Title';\n\n/**\nComponent to display a Dialog\n*/\nfunction Dialog({\n  className,\n  onDismiss,\n  children,\n  status,\n  size,\n  componentRef,\n  renderNode,\n  focusTrap,\n  overflow,\n  ...otherProps\n}) {\n  const cssClasses = ['st_dialog', `st_dialog--${status}`];\n  let dialogClasses = ['st_dialog__content', `st_dialog__content--${size}`];\n  dialogClasses = addClassNames(className, dialogClasses);\n  if (overflow) dialogClasses.push(`st_overflow--${overflow}`);\n  const contentRef = useRef(null);\n\n  // handle when X is clicked to manually close Dialog\n  const handleDismiss = useCallback(() => {\n    if (onDismiss) onDismiss();\n  }, [onDismiss]);\n\n  // close when user clicks on scrim\n  const listenClick = useCallback(e => {\n    if (contentRef.current && !contentRef.current.contains(e.target)) {\n      handleDismiss();\n    }\n  }, [handleDismiss, contentRef]);\n  const listenKeyboard = useCallback(e => {\n    if (e.key === 'Escape' || e.keyCode === 27) {\n      handleDismiss();\n    }\n  }, [handleDismiss]);\n\n  // listen for Esc key\n  useEffect(() => {\n    window.addEventListener('keydown', listenKeyboard);\n    return () => window.removeEventListener('keydown', listenKeyboard);\n  }, [listenKeyboard]);\n\n  /* eslint-disable */\n  // need to disable some a11y rules around clicking the scrim to close modal\n  // the key event is attached to window already\n  // eslint-disable jsx-a11y/click-events-have-key-events jsx-a11y/no-static-element-interactions\n  const content = /*#__PURE__*/React.createElement(ConditionalFocusTrap, {\n    focusTrap: focusTrap\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-modal\": \"true\",\n    className: cssClasses.join(' '),\n    ref: componentRef,\n    onPointerDown: listenClick\n  }, /*#__PURE__*/React.createElement(Box, _extends({\n    className: dialogClasses.join(' ')\n  }, otherProps, {\n    padding: {\n      all: 'none'\n    },\n    margin: null,\n    role: \"dialog\",\n    componentRef: contentRef\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"st_dialog__closewrap\"\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"aria-label\": \"dismiss\",\n    size: \"md\",\n    className: \"st_dialog__close\",\n    onClick: handleDismiss\n  }, /*#__PURE__*/React.createElement(IconCross, {\n    alt: \"dismiss\"\n  }))), children)));\n  /* eslint-enable */\n\n  if (status === 'initial' || status === 'closed') return null;\n  if (!renderNode) return content;\n  return /*#__PURE__*/ReactDOM.createPortal(content, renderNode);\n}\nDialog.propTypes = {\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** callback when Dialog is dismissed, either via the X icon, or by pressing Esc */\n  onDismiss: PropTypes.func,\n  /** node where Dialog should be rendered */\n  renderNode: PropTypes.any,\n  /** status of Dialog, generally should be open or closed */\n  status: PropTypes.oneOf(['initial', 'beforeopen', 'opening', 'closing', 'closed', 'open']),\n  /** size of Dialog */\n  size: PropTypes.oneOf(['fluid', 'sm', 'md', 'lg', 'xl']),\n  /** ref for element */\n  componentRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /** whether to trap focus when Dialog is open, for accessibility */\n  focusTrap: PropTypes.bool,\n  /** overflow behavior when dialog contents are larger than the available viewport space */\n  overflow: PropTypes.oneOf(['auto', 'visible', 'hidden', 'scroll'])\n};\nDialog.defaultProps = {\n  className: null,\n  onDismiss: () => null,\n  renderNode: null,\n  status: 'initial',\n  componentRef: null,\n  size: 'md',\n  focusTrap: true,\n  overflow: 'auto'\n};\nDialog.displayName = 'Dialog';\nDialog.Title = DialogTitle;\nDialog.Content = DialogContent;\nDialog.Actions = DialogActions;\n\nexport { Dialog as D };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}