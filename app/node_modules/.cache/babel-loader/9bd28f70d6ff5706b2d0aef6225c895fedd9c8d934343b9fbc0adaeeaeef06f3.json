{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes, p as paddingPropTypes } from './spacing-59630a80.js';\nimport { g as getZIndex, z as zIndexProps } from './zIndex-5f32f26b.js';\nimport { B as Button } from './Button-82c175e0.js';\nimport { p as props } from './componentEl-eebaee58.js';\nimport { B as Box } from './Box-e6bd433f.js';\nimport useDropdownState from './useDropdownState.js';\n\n/**\nDropdown trigger component, for more control\n*/\nfunction DropdownTrigger({\n  componentEl: Component,\n  className,\n  margin,\n  children,\n  padding,\n  onClick,\n  open,\n  fullHeight,\n  fullWidth,\n  ...otherProps\n}) {\n  let cssClasses = ['st_dropdown__trigger'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  if (fullHeight) cssClasses.push('st_height--full');\n  if (fullWidth) cssClasses.push('st_width--full');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' '),\n    onClick: onClick,\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": !!open\n  }, otherProps), children);\n}\nDropdownTrigger.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for box, if any */\n  margin: marginPropTypes,\n  /** whether dropdown is open */\n  open: PropTypes.bool,\n  /** padding for content */\n  padding: paddingPropTypes,\n  /** event listener for when trigger button is clicked */\n  onClick: PropTypes.func,\n  /** whether button takes up all available horizontal space */\n  fullWidth: PropTypes.bool,\n  /** whether button takes up all available vertical space */\n  fullHeight: PropTypes.bool\n};\nDropdownTrigger.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: null,\n  open: null,\n  padding: null,\n  onClick: null,\n  fullWidth: false,\n  fullHeight: false\n};\nDropdownTrigger.displayName = 'Dropdown.Trigger';\n\n/**\nDropdown content component, for more control\n*/\nfunction DropdownContent({\n  arrow,\n  className,\n  margin,\n  children,\n  position,\n  padding,\n  open,\n  zIndex,\n  ...otherProps\n}) {\n  if (!open) return null;\n  let cssClasses = ['st_dropdown__content', `st_dropdown__content--${position}`];\n  if (zIndex) cssClasses.push(getZIndex(zIndex));\n  if (arrow) cssClasses.push(`st_box--arrow st_box--arrow-${arrow}`);\n  cssClasses = addClassNames(className, cssClasses);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    className: cssClasses.join(' '),\n    padding: padding,\n    margin: margin\n  }, otherProps), children);\n}\nDropdownContent.propTypes = {\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for box, if any */\n  margin: marginPropTypes,\n  /** position of dropdown content */\n  position: PropTypes.oneOf(['left', 'right', 'left-flush', 'right-flush', 'none', 'none-horizontal', 'center']),\n  /** display a pointy arrow on one of the side */\n  arrow: PropTypes.oneOf(['top', 'top-left', 'top-right']),\n  /** padding for content */\n  padding: paddingPropTypes,\n  /** whether dropdown is open */\n  open: PropTypes.bool,\n  /** z-index for dropdown when it's open. One of `minor`, `mid`, `mad`, `major`, `top` */\n  zIndex: zIndexProps\n};\nDropdownContent.defaultProps = {\n  arrow: null,\n  className: null,\n  margin: null,\n  position: null,\n  padding: null,\n  open: null,\n  zIndex: 'minor'\n};\nDropdownContent.displayName = 'Dropdown.Content';\n\n/**\nDropdown without state, for when it needs to be controlled from outside\n*/\nfunction DropdownDumb({\n  arrow,\n  className,\n  margin,\n  componentRef,\n  open,\n  color,\n  trigger,\n  children,\n  position,\n  disabled,\n  padding,\n  onToggle,\n  zIndex,\n  fullHeight,\n  ...otherProps\n}) {\n  let cssClasses = ['st_dropdown'];\n  if (open) cssClasses.push('st_dropdown--open');\n  if (fullHeight) cssClasses.push('st_height--full');\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  if (trigger) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: cssClasses.join(' ')\n    }, otherProps, {\n      ref: componentRef\n    }), /*#__PURE__*/React.createElement(DropdownTrigger, {\n      componentEl: Button,\n      tertiary: true,\n      color: color,\n      onClick: onToggle,\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": !!open,\n      disabled: disabled,\n      active: !!open\n    }, trigger), open && /*#__PURE__*/React.createElement(DropdownContent, {\n      arrow: arrow,\n      open: open,\n      position: position,\n      padding: padding,\n      zIndex: zIndex\n    }, children));\n  }\n\n  // if trigger prop is missing, we are in subcomponent land\n  // attach props to Dropdown.Trigger and Dropdown.Content\n  // which should both exist for this mode to work\n  const requiredComponents = ['Dropdown.Trigger', 'Dropdown.Content'];\n  const childrenWithProps = React.Children.map(children, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    const cloneParams = {};\n    if (child.type.displayName === 'Dropdown.Trigger') {\n      cloneParams.open = open;\n      cloneParams.disabled = child.props.disabled || disabled;\n      cloneParams.onClick = onToggle;\n      requiredComponents.splice(requiredComponents.indexOf(child.type.displayName), 1);\n    }\n    if (child.type.displayName === 'Dropdown.Content') {\n      cloneParams.open = open;\n      cloneParams.padding = child.props.padding || padding;\n      cloneParams.position = child.props.position || position;\n      requiredComponents.splice(requiredComponents.indexOf(child.type.displayName), 1);\n    }\n    return /*#__PURE__*/React.cloneElement(child, cloneParams);\n  });\n  if (requiredComponents.length > 0) {\n    // eslint-disable-next-line no-console\n    console.warn(`\n      The Dropdown component can't render because instances of ${requiredComponents.join(', ')} are missing in the children\n    `);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cssClasses.join(' ')\n  }, otherProps, {\n    ref: componentRef\n  }), childrenWithProps);\n}\nDropdownDumb.propTypes = {\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for box, if any */\n  margin: marginPropTypes,\n  /** whether dropdown is open */\n  open: PropTypes.bool,\n  /** label for dropdown trigger.\n  Omit to have full control via Dropdown.Trigger + Dropdown.Content */\n  trigger: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /** position of dropdown content */\n  position: PropTypes.oneOf(['left', 'right', 'left-flush', 'right-flush', 'none', 'none-horizontal', 'center']),\n  /** display a pointy arrow on one of the side */\n  arrow: PropTypes.oneOf(['top-left', 'top-right', 'top']),\n  /** color of dropdown trigger */\n  color: PropTypes.oneOf(['blurple', 'gray']),\n  /** padding for content. Overrides default */\n  padding: paddingPropTypes,\n  /** whether control should be disabled */\n  disabled: PropTypes.bool,\n  /** event listener for when dropdown is toggled; passes open state as parameter */\n  onToggle: PropTypes.func,\n  /** ref for dropdown component */\n  componentRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /** z-index for dropdown when it's open. One of `minor`, `mid`, `mad`, `major`, `top` */\n  zIndex: zIndexProps,\n  /** whether container element should have height 100% */\n  fullHeight: PropTypes.bool\n};\nDropdownDumb.defaultProps = {\n  arrow: null,\n  className: null,\n  margin: null,\n  open: false,\n  position: 'left',\n  color: 'blurple',\n  padding: {\n    vertical: 'smd',\n    horizontal: 'md'\n  },\n  trigger: null,\n  disabled: false,\n  onToggle: () => null,\n  componentRef: null,\n  zIndex: 'minor',\n  fullHeight: false\n};\n\n/**\nSmart dropdown, that handles its own state management\n*/\nfunction DropdownSmart({\n  open: openProp,\n  children,\n  onToggle,\n  ...otherProps\n}) {\n  const {\n    open,\n    componentRef,\n    toggleDropdown\n  } = useDropdownState({\n    open: openProp,\n    onToggle\n  });\n  return /*#__PURE__*/React.createElement(DropdownDumb, _extends({\n    open: open,\n    \"aria-expanded\": !!open\n  }, otherProps, {\n    componentRef: componentRef,\n    onToggle: toggleDropdown\n  }), children);\n}\nDropdownSmart.propTypes = {\n  /** whether dropdown is open on initial render */\n  open: PropTypes.bool,\n  /** event listener for when dropdown is toggled; passes open state as parameter */\n  onToggle: PropTypes.func\n};\nDropdownSmart.defaultProps = {\n  onToggle: () => null,\n  open: false\n};\nfunction Dropdown({\n  arrow,\n  className,\n  margin,\n  open,\n  defaultOpen,\n  color,\n  trigger,\n  children,\n  position,\n  disabled,\n  padding,\n  onToggle,\n  zIndex,\n  fullHeight,\n  ...otherProps\n}) {\n  const allProps = {\n    arrow,\n    className,\n    margin,\n    color,\n    trigger,\n    position,\n    disabled,\n    onToggle,\n    padding,\n    children,\n    zIndex,\n    fullHeight,\n    ...otherProps\n  };\n  if (open === null) {\n    return /*#__PURE__*/React.createElement(DropdownSmart, _extends({\n      open: defaultOpen\n    }, allProps));\n  }\n  return /*#__PURE__*/React.createElement(DropdownDumb, _extends({\n    open: open\n  }, allProps));\n}\nDropdown.propTypes = {\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for box, if any */\n  margin: marginPropTypes,\n  /** whether dropdown is open. Use for uncontrolled dropdown */\n  open: PropTypes.bool,\n  /** whether dropdown is initially open. Use for controlled component */\n  defaultOpen: PropTypes.bool,\n  /** label for dropdown trigger */\n  trigger: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /** position of dropdown content */\n  position: PropTypes.oneOf(['left', 'right', 'left-flush', 'right-flush', 'none', 'none-horizontal', 'center']),\n  /** display a pointy arrow on one of the side */\n  arrow: PropTypes.oneOf(['top-left', 'top-right', 'top']),\n  /** color of dropdown trigger */\n  color: PropTypes.oneOf(['blurple', 'gray']),\n  /** padding for content. Setting this overrides defaults and does not extend them */\n  padding: paddingPropTypes,\n  /** whether control should be disabled */\n  disabled: PropTypes.bool,\n  /** event listener for when dropdown is toggled; passes open state when uncontrolled */\n  onToggle: PropTypes.func,\n  /** z-index for dropdown when it's open. One of `minor`, `mid`, `mad`, `major`, `top` */\n  zIndex: zIndexProps,\n  /** whether container element should have height: 100% */\n  fullHeight: PropTypes.bool\n};\nDropdown.defaultProps = {\n  arrow: null,\n  className: null,\n  margin: null,\n  open: null,\n  defaultOpen: null,\n  position: 'left',\n  color: 'blurple',\n  padding: {\n    vertical: 'smd',\n    horizontal: 'md'\n  },\n  disabled: false,\n  onToggle: () => null,\n  trigger: null,\n  zIndex: 'minor',\n  fullHeight: false\n};\nDropdown.Trigger = DropdownTrigger;\nDropdown.Content = DropdownContent;\nexport { Dropdown as D };","map":{"version":3,"names":["_extends","React","PropTypes","a","addClassNames","c","classNamePropTypes","addSpacingClasses","m","marginPropTypes","p","paddingPropTypes","g","getZIndex","z","zIndexProps","B","Button","props","Box","useDropdownState","DropdownTrigger","componentEl","Component","className","margin","children","padding","onClick","open","fullHeight","fullWidth","otherProps","cssClasses","push","createElement","join","propTypes","bool","func","defaultProps","displayName","DropdownContent","arrow","position","zIndex","oneOf","DropdownDumb","componentRef","color","trigger","disabled","onToggle","ref","tertiary","active","requiredComponents","childrenWithProps","Children","map","child","isValidElement","cloneParams","type","splice","indexOf","cloneElement","length","console","warn","oneOfType","string","node","shape","current","any","vertical","horizontal","DropdownSmart","openProp","toggleDropdown","Dropdown","defaultOpen","allProps","Trigger","Content","D"],"sources":["/Users/mike/node_modules/@screentone/core/es/Dropdown-99d95789.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes, p as paddingPropTypes } from './spacing-59630a80.js';\nimport { g as getZIndex, z as zIndexProps } from './zIndex-5f32f26b.js';\nimport { B as Button } from './Button-82c175e0.js';\nimport { p as props } from './componentEl-eebaee58.js';\nimport { B as Box } from './Box-e6bd433f.js';\nimport useDropdownState from './useDropdownState.js';\n\n/**\nDropdown trigger component, for more control\n*/\nfunction DropdownTrigger({\n  componentEl: Component,\n  className,\n  margin,\n  children,\n  padding,\n  onClick,\n  open,\n  fullHeight,\n  fullWidth,\n  ...otherProps\n}) {\n  let cssClasses = ['st_dropdown__trigger'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  if (fullHeight) cssClasses.push('st_height--full');\n  if (fullWidth) cssClasses.push('st_width--full');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' '),\n    onClick: onClick,\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": !!open\n  }, otherProps), children);\n}\nDropdownTrigger.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for box, if any */\n  margin: marginPropTypes,\n  /** whether dropdown is open */\n  open: PropTypes.bool,\n  /** padding for content */\n  padding: paddingPropTypes,\n  /** event listener for when trigger button is clicked */\n  onClick: PropTypes.func,\n  /** whether button takes up all available horizontal space */\n  fullWidth: PropTypes.bool,\n  /** whether button takes up all available vertical space */\n  fullHeight: PropTypes.bool\n};\nDropdownTrigger.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: null,\n  open: null,\n  padding: null,\n  onClick: null,\n  fullWidth: false,\n  fullHeight: false\n};\nDropdownTrigger.displayName = 'Dropdown.Trigger';\n\n/**\nDropdown content component, for more control\n*/\nfunction DropdownContent({\n  arrow,\n  className,\n  margin,\n  children,\n  position,\n  padding,\n  open,\n  zIndex,\n  ...otherProps\n}) {\n  if (!open) return null;\n  let cssClasses = ['st_dropdown__content', `st_dropdown__content--${position}`];\n  if (zIndex) cssClasses.push(getZIndex(zIndex));\n  if (arrow) cssClasses.push(`st_box--arrow st_box--arrow-${arrow}`);\n  cssClasses = addClassNames(className, cssClasses);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    className: cssClasses.join(' '),\n    padding: padding,\n    margin: margin\n  }, otherProps), children);\n}\nDropdownContent.propTypes = {\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for box, if any */\n  margin: marginPropTypes,\n  /** position of dropdown content */\n  position: PropTypes.oneOf(['left', 'right', 'left-flush', 'right-flush', 'none', 'none-horizontal', 'center']),\n  /** display a pointy arrow on one of the side */\n  arrow: PropTypes.oneOf(['top', 'top-left', 'top-right']),\n  /** padding for content */\n  padding: paddingPropTypes,\n  /** whether dropdown is open */\n  open: PropTypes.bool,\n  /** z-index for dropdown when it's open. One of `minor`, `mid`, `mad`, `major`, `top` */\n  zIndex: zIndexProps\n};\nDropdownContent.defaultProps = {\n  arrow: null,\n  className: null,\n  margin: null,\n  position: null,\n  padding: null,\n  open: null,\n  zIndex: 'minor'\n};\nDropdownContent.displayName = 'Dropdown.Content';\n\n/**\nDropdown without state, for when it needs to be controlled from outside\n*/\nfunction DropdownDumb({\n  arrow,\n  className,\n  margin,\n  componentRef,\n  open,\n  color,\n  trigger,\n  children,\n  position,\n  disabled,\n  padding,\n  onToggle,\n  zIndex,\n  fullHeight,\n  ...otherProps\n}) {\n  let cssClasses = ['st_dropdown'];\n  if (open) cssClasses.push('st_dropdown--open');\n  if (fullHeight) cssClasses.push('st_height--full');\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  if (trigger) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: cssClasses.join(' ')\n    }, otherProps, {\n      ref: componentRef\n    }), /*#__PURE__*/React.createElement(DropdownTrigger, {\n      componentEl: Button,\n      tertiary: true,\n      color: color,\n      onClick: onToggle,\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": !!open,\n      disabled: disabled,\n      active: !!open\n    }, trigger), open && /*#__PURE__*/React.createElement(DropdownContent, {\n      arrow: arrow,\n      open: open,\n      position: position,\n      padding: padding,\n      zIndex: zIndex\n    }, children));\n  }\n\n  // if trigger prop is missing, we are in subcomponent land\n  // attach props to Dropdown.Trigger and Dropdown.Content\n  // which should both exist for this mode to work\n  const requiredComponents = ['Dropdown.Trigger', 'Dropdown.Content'];\n  const childrenWithProps = React.Children.map(children, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    const cloneParams = {};\n    if (child.type.displayName === 'Dropdown.Trigger') {\n      cloneParams.open = open;\n      cloneParams.disabled = child.props.disabled || disabled;\n      cloneParams.onClick = onToggle;\n      requiredComponents.splice(requiredComponents.indexOf(child.type.displayName), 1);\n    }\n    if (child.type.displayName === 'Dropdown.Content') {\n      cloneParams.open = open;\n      cloneParams.padding = child.props.padding || padding;\n      cloneParams.position = child.props.position || position;\n      requiredComponents.splice(requiredComponents.indexOf(child.type.displayName), 1);\n    }\n    return /*#__PURE__*/React.cloneElement(child, cloneParams);\n  });\n  if (requiredComponents.length > 0) {\n    // eslint-disable-next-line no-console\n    console.warn(`\n      The Dropdown component can't render because instances of ${requiredComponents.join(', ')} are missing in the children\n    `);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cssClasses.join(' ')\n  }, otherProps, {\n    ref: componentRef\n  }), childrenWithProps);\n}\nDropdownDumb.propTypes = {\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for box, if any */\n  margin: marginPropTypes,\n  /** whether dropdown is open */\n  open: PropTypes.bool,\n  /** label for dropdown trigger.\n  Omit to have full control via Dropdown.Trigger + Dropdown.Content */\n  trigger: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /** position of dropdown content */\n  position: PropTypes.oneOf(['left', 'right', 'left-flush', 'right-flush', 'none', 'none-horizontal', 'center']),\n  /** display a pointy arrow on one of the side */\n  arrow: PropTypes.oneOf(['top-left', 'top-right', 'top']),\n  /** color of dropdown trigger */\n  color: PropTypes.oneOf(['blurple', 'gray']),\n  /** padding for content. Overrides default */\n  padding: paddingPropTypes,\n  /** whether control should be disabled */\n  disabled: PropTypes.bool,\n  /** event listener for when dropdown is toggled; passes open state as parameter */\n  onToggle: PropTypes.func,\n  /** ref for dropdown component */\n  componentRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /** z-index for dropdown when it's open. One of `minor`, `mid`, `mad`, `major`, `top` */\n  zIndex: zIndexProps,\n  /** whether container element should have height 100% */\n  fullHeight: PropTypes.bool\n};\nDropdownDumb.defaultProps = {\n  arrow: null,\n  className: null,\n  margin: null,\n  open: false,\n  position: 'left',\n  color: 'blurple',\n  padding: {\n    vertical: 'smd',\n    horizontal: 'md'\n  },\n  trigger: null,\n  disabled: false,\n  onToggle: () => null,\n  componentRef: null,\n  zIndex: 'minor',\n  fullHeight: false\n};\n\n/**\nSmart dropdown, that handles its own state management\n*/\nfunction DropdownSmart({\n  open: openProp,\n  children,\n  onToggle,\n  ...otherProps\n}) {\n  const {\n    open,\n    componentRef,\n    toggleDropdown\n  } = useDropdownState({\n    open: openProp,\n    onToggle\n  });\n  return /*#__PURE__*/React.createElement(DropdownDumb, _extends({\n    open: open,\n    \"aria-expanded\": !!open\n  }, otherProps, {\n    componentRef: componentRef,\n    onToggle: toggleDropdown\n  }), children);\n}\nDropdownSmart.propTypes = {\n  /** whether dropdown is open on initial render */\n  open: PropTypes.bool,\n  /** event listener for when dropdown is toggled; passes open state as parameter */\n  onToggle: PropTypes.func\n};\nDropdownSmart.defaultProps = {\n  onToggle: () => null,\n  open: false\n};\n\nfunction Dropdown({\n  arrow,\n  className,\n  margin,\n  open,\n  defaultOpen,\n  color,\n  trigger,\n  children,\n  position,\n  disabled,\n  padding,\n  onToggle,\n  zIndex,\n  fullHeight,\n  ...otherProps\n}) {\n  const allProps = {\n    arrow,\n    className,\n    margin,\n    color,\n    trigger,\n    position,\n    disabled,\n    onToggle,\n    padding,\n    children,\n    zIndex,\n    fullHeight,\n    ...otherProps\n  };\n  if (open === null) {\n    return /*#__PURE__*/React.createElement(DropdownSmart, _extends({\n      open: defaultOpen\n    }, allProps));\n  }\n  return /*#__PURE__*/React.createElement(DropdownDumb, _extends({\n    open: open\n  }, allProps));\n}\nDropdown.propTypes = {\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for box, if any */\n  margin: marginPropTypes,\n  /** whether dropdown is open. Use for uncontrolled dropdown */\n  open: PropTypes.bool,\n  /** whether dropdown is initially open. Use for controlled component */\n  defaultOpen: PropTypes.bool,\n  /** label for dropdown trigger */\n  trigger: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /** position of dropdown content */\n  position: PropTypes.oneOf(['left', 'right', 'left-flush', 'right-flush', 'none', 'none-horizontal', 'center']),\n  /** display a pointy arrow on one of the side */\n  arrow: PropTypes.oneOf(['top-left', 'top-right', 'top']),\n  /** color of dropdown trigger */\n  color: PropTypes.oneOf(['blurple', 'gray']),\n  /** padding for content. Setting this overrides defaults and does not extend them */\n  padding: paddingPropTypes,\n  /** whether control should be disabled */\n  disabled: PropTypes.bool,\n  /** event listener for when dropdown is toggled; passes open state when uncontrolled */\n  onToggle: PropTypes.func,\n  /** z-index for dropdown when it's open. One of `minor`, `mid`, `mad`, `major`, `top` */\n  zIndex: zIndexProps,\n  /** whether container element should have height: 100% */\n  fullHeight: PropTypes.bool\n};\nDropdown.defaultProps = {\n  arrow: null,\n  className: null,\n  margin: null,\n  open: null,\n  defaultOpen: null,\n  position: 'left',\n  color: 'blurple',\n  padding: {\n    vertical: 'smd',\n    horizontal: 'md'\n  },\n  disabled: false,\n  onToggle: () => null,\n  trigger: null,\n  zIndex: 'minor',\n  fullHeight: false\n};\nDropdown.Trigger = DropdownTrigger;\nDropdown.Content = DropdownContent;\n\nexport { Dropdown as D };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}