{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport IconCross from './IconCross.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes } from './spacing-59630a80.js';\nfunction Toast({\n  autoDismiss,\n  autoDismissTime,\n  children,\n  className,\n  dismissButtonText,\n  margin,\n  onDismiss,\n  position,\n  renderNode,\n  ...otherProps\n}) {\n  let cssClasses = ['st_toast', `st_toast st_toast--${position}`];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  const dismissTimer = useRef(false);\n\n  // set timer for autodismiss\n  useEffect(() => {\n    if (autoDismiss) {\n      dismissTimer.current = setTimeout(() => {\n        if (onDismiss) onDismiss();\n      }, autoDismissTime * 1000);\n      return () => dismissTimer.current && clearTimeout(dismissTimer.current);\n    }\n    return undefined;\n  }, [autoDismiss, onDismiss, autoDismissTime]);\n\n  // handle when X is clicked to manually close Modal\n  const handleDismiss = useCallback(() => {\n    clearTimeout(dismissTimer.current);\n    if (onDismiss) onDismiss();\n  }, [onDismiss]);\n  const content = /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cssClasses.join(' '),\n    role: \"status\",\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\"\n  }, otherProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"st_toast__content\"\n  }, children), onDismiss && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"st_toast__dismiss\",\n    onClick: handleDismiss,\n    type: \"button\",\n    \"aria-label\": \"Close\"\n  }, dismissButtonText || /*#__PURE__*/React.createElement(IconCross, {\n    alt: \"dismiss\",\n    size: \"mlg\"\n  })));\n  if (!renderNode) return content;\n  return /*#__PURE__*/ReactDOM.createPortal(content, renderNode);\n}\nToast.propTypes = {\n  /** whether to fire onDismiss automatically after X seconds */\n  autoDismiss: PropTypes.bool,\n  /** how many seconds to wait before firing onDismiss automatically */\n  autoDismissTime: PropTypes.number,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** text content for dismiss button, if any */\n  dismissButtonText: PropTypes.string,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** callback when Toast is dismissed, either via the button, or after timeout */\n  onDismiss: PropTypes.func,\n  /** position of toast on bottom of page */\n  position: PropTypes.oneOf(['left', 'center', 'right']),\n  /** node where toast should be rendered */\n  renderNode: PropTypes.any\n};\nToast.defaultProps = {\n  autoDismiss: false,\n  autoDismissTime: 3,\n  className: null,\n  dismissButtonText: null,\n  margin: null,\n  onDismiss: null,\n  position: 'right',\n  renderNode: null\n};\nexport { Toast as T };","map":{"version":3,"names":["_extends","React","useRef","useEffect","useCallback","ReactDOM","PropTypes","IconCross","a","addClassNames","c","classNamePropTypes","addSpacingClasses","m","marginPropTypes","Toast","autoDismiss","autoDismissTime","children","className","dismissButtonText","margin","onDismiss","position","renderNode","otherProps","cssClasses","dismissTimer","current","setTimeout","clearTimeout","undefined","handleDismiss","content","createElement","join","role","onClick","type","alt","size","createPortal","propTypes","bool","number","string","func","oneOf","any","defaultProps","T"],"sources":["/Users/mike/node_modules/@screentone/core/es/Toast-7e710313.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/extends';\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport IconCross from './IconCross.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes } from './spacing-59630a80.js';\n\nfunction Toast({\n  autoDismiss,\n  autoDismissTime,\n  children,\n  className,\n  dismissButtonText,\n  margin,\n  onDismiss,\n  position,\n  renderNode,\n  ...otherProps\n}) {\n  let cssClasses = ['st_toast', `st_toast st_toast--${position}`];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  const dismissTimer = useRef(false);\n\n  // set timer for autodismiss\n  useEffect(() => {\n    if (autoDismiss) {\n      dismissTimer.current = setTimeout(() => {\n        if (onDismiss) onDismiss();\n      }, autoDismissTime * 1000);\n      return () => dismissTimer.current && clearTimeout(dismissTimer.current);\n    }\n    return undefined;\n  }, [autoDismiss, onDismiss, autoDismissTime]);\n\n  // handle when X is clicked to manually close Modal\n  const handleDismiss = useCallback(() => {\n    clearTimeout(dismissTimer.current);\n    if (onDismiss) onDismiss();\n  }, [onDismiss]);\n  const content = /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cssClasses.join(' '),\n    role: \"status\",\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\"\n  }, otherProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"st_toast__content\"\n  }, children), onDismiss && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"st_toast__dismiss\",\n    onClick: handleDismiss,\n    type: \"button\",\n    \"aria-label\": \"Close\"\n  }, dismissButtonText || /*#__PURE__*/React.createElement(IconCross, {\n    alt: \"dismiss\",\n    size: \"mlg\"\n  })));\n  if (!renderNode) return content;\n  return /*#__PURE__*/ReactDOM.createPortal(content, renderNode);\n}\nToast.propTypes = {\n  /** whether to fire onDismiss automatically after X seconds */\n  autoDismiss: PropTypes.bool,\n  /** how many seconds to wait before firing onDismiss automatically */\n  autoDismissTime: PropTypes.number,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** text content for dismiss button, if any */\n  dismissButtonText: PropTypes.string,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** callback when Toast is dismissed, either via the button, or after timeout */\n  onDismiss: PropTypes.func,\n  /** position of toast on bottom of page */\n  position: PropTypes.oneOf(['left', 'center', 'right']),\n  /** node where toast should be rendered */\n  renderNode: PropTypes.any\n};\nToast.defaultProps = {\n  autoDismiss: false,\n  autoDismissTime: 3,\n  className: null,\n  dismissButtonText: null,\n  margin: null,\n  onDismiss: null,\n  position: 'right',\n  renderNode: null\n};\n\nexport { Toast as T };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}