{"ast":null,"code":"import { useState, useRef, useCallback, useEffect } from 'react';\nimport { d as disableScroll, e as enableScroll } from './body-583bcd76.js';\n\n/**\nDialog Hooks, like the file name says\nHandles management of open/close state\nAdding/removing CSS classes to body/html\n*/\n\nfunction useAnimatedModalState(params = {}) {\n  const {\n    status: initialStatus,\n    onToggle\n  } = params;\n  const [status, setStatus] = useState(initialStatus || 'initial');\n  const bodyElem = useRef();\n  const htmlElem = useRef();\n  const componentRef = useRef();\n  const afterOpen = useCallback(() => {\n    if (componentRef.current) {\n      componentRef.current.removeEventListener('transitionend', afterOpen);\n    }\n    setStatus('open');\n  }, [componentRef, setStatus]);\n  const afterClose = useCallback(() => {\n    if (componentRef.current) {\n      componentRef.current.removeEventListener('transitionend', afterClose);\n    }\n    setStatus('closed');\n  }, [componentRef, setStatus]);\n  const clearListeners = useCallback(() => {\n    if (componentRef.current) {\n      componentRef.current.removeEventListener('transitionend', afterOpen);\n      componentRef.current.removeEventListener('transitionend', afterClose);\n    }\n  }, [componentRef, afterOpen, afterClose]);\n  const addBodyClasses = useCallback(() => {\n    if (bodyElem && bodyElem.current) {\n      disableScroll(bodyElem.current);\n    }\n    if (htmlElem && htmlElem.current) {\n      disableScroll(htmlElem.current);\n    }\n  }, [bodyElem, htmlElem]);\n  const removeBodyClasses = useCallback(() => {\n    if (bodyElem && bodyElem.current) {\n      enableScroll(bodyElem.current);\n    }\n    if (htmlElem && htmlElem.current) {\n      enableScroll(htmlElem.current);\n    }\n  }, [bodyElem, htmlElem]);\n  const animateOpen = useCallback(() => {\n    if (componentRef.current) {\n      componentRef.current.addEventListener('transitionend', afterOpen);\n    }\n    setStatus('opening');\n  }, [componentRef, afterOpen]);\n  const openModal = useCallback(() => {\n    if (status === 'open') return;\n    clearListeners();\n    addBodyClasses();\n    setStatus('beforeopen');\n    setTimeout(animateOpen, 100);\n    if (typeof onToggle === 'function') onToggle(true);\n  }, [status, clearListeners, addBodyClasses, animateOpen, onToggle]);\n  const closeModal = useCallback(() => {\n    if (status === 'closed') return;\n    removeBodyClasses();\n    setStatus('closing');\n    if (componentRef.current) {\n      componentRef.current.addEventListener('transitionend', afterClose);\n    }\n    if (typeof onToggle === 'function') onToggle(true);\n  }, [status, removeBodyClasses, afterClose, onToggle]);\n  useEffect(() => {\n    bodyElem.current = document.body;\n    htmlElem.current = document.documentElement;\n    return function cleanup() {\n      clearListeners();\n      removeBodyClasses();\n    };\n  }, [clearListeners, removeBodyClasses]);\n  return {\n    open: !['initial', 'closed'].includes(status),\n    status,\n    componentRef,\n    openModal,\n    closeModal\n  };\n}\nexport { useAnimatedModalState as default };","map":{"version":3,"names":["useState","useRef","useCallback","useEffect","d","disableScroll","e","enableScroll","useAnimatedModalState","params","status","initialStatus","onToggle","setStatus","bodyElem","htmlElem","componentRef","afterOpen","current","removeEventListener","afterClose","clearListeners","addBodyClasses","removeBodyClasses","animateOpen","addEventListener","openModal","setTimeout","closeModal","document","body","documentElement","cleanup","open","includes","default"],"sources":["/Users/mike/node_modules/@screentone/core/es/useAnimatedModalState.js"],"sourcesContent":["import { useState, useRef, useCallback, useEffect } from 'react';\nimport { d as disableScroll, e as enableScroll } from './body-583bcd76.js';\n\n/**\nDialog Hooks, like the file name says\nHandles management of open/close state\nAdding/removing CSS classes to body/html\n*/\n\nfunction useAnimatedModalState(params = {}) {\n  const {\n    status: initialStatus,\n    onToggle\n  } = params;\n  const [status, setStatus] = useState(initialStatus || 'initial');\n  const bodyElem = useRef();\n  const htmlElem = useRef();\n  const componentRef = useRef();\n  const afterOpen = useCallback(() => {\n    if (componentRef.current) {\n      componentRef.current.removeEventListener('transitionend', afterOpen);\n    }\n    setStatus('open');\n  }, [componentRef, setStatus]);\n  const afterClose = useCallback(() => {\n    if (componentRef.current) {\n      componentRef.current.removeEventListener('transitionend', afterClose);\n    }\n    setStatus('closed');\n  }, [componentRef, setStatus]);\n  const clearListeners = useCallback(() => {\n    if (componentRef.current) {\n      componentRef.current.removeEventListener('transitionend', afterOpen);\n      componentRef.current.removeEventListener('transitionend', afterClose);\n    }\n  }, [componentRef, afterOpen, afterClose]);\n  const addBodyClasses = useCallback(() => {\n    if (bodyElem && bodyElem.current) {\n      disableScroll(bodyElem.current);\n    }\n    if (htmlElem && htmlElem.current) {\n      disableScroll(htmlElem.current);\n    }\n  }, [bodyElem, htmlElem]);\n  const removeBodyClasses = useCallback(() => {\n    if (bodyElem && bodyElem.current) {\n      enableScroll(bodyElem.current);\n    }\n    if (htmlElem && htmlElem.current) {\n      enableScroll(htmlElem.current);\n    }\n  }, [bodyElem, htmlElem]);\n  const animateOpen = useCallback(() => {\n    if (componentRef.current) {\n      componentRef.current.addEventListener('transitionend', afterOpen);\n    }\n    setStatus('opening');\n  }, [componentRef, afterOpen]);\n  const openModal = useCallback(() => {\n    if (status === 'open') return;\n    clearListeners();\n    addBodyClasses();\n    setStatus('beforeopen');\n    setTimeout(animateOpen, 100);\n    if (typeof onToggle === 'function') onToggle(true);\n  }, [status, clearListeners, addBodyClasses, animateOpen, onToggle]);\n  const closeModal = useCallback(() => {\n    if (status === 'closed') return;\n    removeBodyClasses();\n    setStatus('closing');\n    if (componentRef.current) {\n      componentRef.current.addEventListener('transitionend', afterClose);\n    }\n    if (typeof onToggle === 'function') onToggle(true);\n  }, [status, removeBodyClasses, afterClose, onToggle]);\n  useEffect(() => {\n    bodyElem.current = document.body;\n    htmlElem.current = document.documentElement;\n    return function cleanup() {\n      clearListeners();\n      removeBodyClasses();\n    };\n  }, [clearListeners, removeBodyClasses]);\n  return {\n    open: !['initial', 'closed'].includes(status),\n    status,\n    componentRef,\n    openModal,\n    closeModal\n  };\n}\n\nexport { useAnimatedModalState as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}