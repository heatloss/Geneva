{"ast":null,"code":"import React$1 from 'react';\nimport PropTypes$1 from 'prop-types';\nimport ReactDOM$1 from 'react-dom';\nimport { a as getAugmentedNamespace } from './_commonjsHelpers-49473ade.js';\n\n/*!\n* tabbable 5.3.3\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\nvar candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]:not(slot)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])', 'details>summary:first-of-type', 'details'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  return element.getRootNode();\n} : function (element) {\n  return element.ownerDocument;\n};\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\n\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidatesScope\n * @property {Element} scope contains inner candidates\n * @property {Element[]} candidates\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidatesScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidatesScope>}\n */\n\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scope: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      } // iterate over shadow content if possible\n\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n      var validShadowRoot = !options.shadowRootFilter || options.shadowRootFilter(element);\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scope: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\nvar getTabindex = function getTabindex(node, isScope) {\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    //\n    // isScope is positive for custom element with shadow root or slot that by default\n    // have tabIndex -1, but need to be sorted by document order in order for their\n    // content to be inserted in the correct position\n    if ((isScope || /^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || node.isContentEditable) && isNaN(parseInt(node.getAttribute('tabindex'), 10))) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  } // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n\n  var nodeRootHost = getRootNode(node).host;\n  var nodeIsAttached = (nodeRootHost === null || nodeRootHost === void 0 ? void 0 : nodeRootHost.ownerDocument.contains(nodeRootHost)) || node.ownerDocument.contains(node);\n  if (!displayCheck || displayCheck === 'full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    } // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (nodeIsAttached) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    } // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  } // visible, as far as we can tell, or per current `displayCheck` mode\n\n  return false;\n}; // form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\n\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement; // check if `node` is contained in a disabled <fieldset>\n\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i); // when the first <legend> (in document order) is found\n\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        } // the disabled <fieldset> containing `node` has no <legend>\n\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  } // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabindex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  } // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n\n  return false;\n};\n/**\n * @param {Array.<Element|CandidatesScope>} candidates\n * @returns Element[]\n */\n\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scope;\n    var element = isScope ? item.scope : item;\n    var candidateTabindex = getTabindex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(el, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(el, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable$1 = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\nvar index_esm = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  focusable: focusable,\n  isFocusable: isFocusable$1,\n  isTabbable: isTabbable,\n  tabbable: tabbable\n});\n\n/*!\n* focus-trap 6.9.4\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty$1(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty$1(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar activeFocusTraps = function () {\n  var trapQueue = [];\n  return {\n    activateTrap: function activateTrap(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n    deactivateTrap: function deactivateTrap(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n}();\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n}; // Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\n\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n\n  return idx;\n};\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\n\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\nvar createFocusTrap$1 = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   firstTabbableNode: HTMLElement|null,\n    //   lastTabbableNode: HTMLElement|null,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n\n  var findContainerIndex = function findContainerIndex(element) {\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) ||\n      // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n      optionValue = optionValue.apply(void 0, params);\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      } // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus'); // false explicitly indicates we want no initialFocus at all\n\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined) {\n      // option not specified: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode; // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions); // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes\n\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        firstTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[0] : null,\n        lastTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : null,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          // NOTE: If tabindex is positive (in order to manipulate the tab order separate\n          //  from the DOM order), this __will not work__ because the list of focusableNodes,\n          //  while it contains tabbable nodes, does not sort its nodes in any order other\n          //  than DOM order, because it can't: Where would you place focusable (but not\n          //  tabbable) nodes in that order? They have no order, because they aren't tabbale...\n          // Support for positive tabindex is already broken and hard to manage (possibly\n          //  not supportable, TBD), so this isn't going to make things worse than they\n          //  already are, and at least makes things better for the majority of cases where\n          //  tabindex is either 0/unset or negative.\n          // FYI, positive tabindex issue: https://github.com/focus-trap/focus-trap/issues/375\n          var nodeIdx = focusableNodes.findIndex(function (n) {\n            return n === node;\n          });\n          if (nodeIdx < 0) {\n            return undefined;\n          }\n          if (forward) {\n            return focusableNodes.slice(nodeIdx + 1).find(function (n) {\n              return isTabbable(n, config.tabbableOptions);\n            });\n          }\n          return focusableNodes.slice(0, nodeIdx).reverse().find(function (n) {\n            return isTabbable(n, config.tabbableOptions);\n          });\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    }); // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n  };\n  var tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === doc.activeElement) {\n      return;\n    }\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  }; // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // if, on deactivation, we should return focus to the node originally-focused\n        //  when the trap was activated (or the configured `setReturnFocus` node),\n        //  then assume it's also OK to return focus to the outside node that was\n        //  just clicked, causing deactivation, as long as that node is focusable;\n        //  if it isn't focusable, then return focus to the original node focused\n        //  on activation (or the configured `setReturnFocus` node)\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked, whether it's focusable or not; by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node)\n        returnFocus: config.returnFocusOnDeactivate && !isFocusable$1(target, config.tabbableOptions)\n      });\n      return;\n    } // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    } // otherwise, prevent the click\n\n    e.preventDefault();\n  }; // In case focus escapes the trap for some strange reason, pull it back in.\n\n  var checkFocusIn = function checkFocusIn(e) {\n    var target = getActualTarget(e);\n    var targetContained = findContainerIndex(target) >= 0; // In Firefox when you Tab out of an iframe the Document is briefly focused.\n\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  }; // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n\n  var checkTab = function checkTab(e) {\n    var target = getActualTarget(e);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back in to...\n        if (e.shiftKey) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (e.shiftKey) {\n        // REVERSE\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref2) {\n          var firstTabbableNode = _ref2.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable$1(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        }\n      } else {\n        // FORWARD\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var lastTabbableNode = _ref3.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable$1(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = _destinationGroup.firstTabbableNode;\n        }\n      }\n    } else {\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    if (destinationNode) {\n      e.preventDefault();\n      tryFocus(destinationNode);\n    } // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  var checkKey = function checkKey(e) {\n    if (isEscapeEvent(e) && valueOrHandler(config.escapeDeactivates, e) !== false) {\n      e.preventDefault();\n      trap.deactivate();\n      return;\n    }\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }; //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    } // There can be only one listening focus trap at a time\n\n    activeFocusTraps.activateTrap(trap); // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  }; //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      if (onActivate) {\n        onActivate();\n      }\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        if (onPostActivate) {\n          onPostActivate();\n        }\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      activeFocusTraps.deactivateTrap(trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      if (onDeactivate) {\n        onDeactivate();\n      }\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          if (onPostDeactivate) {\n            onPostDeactivate();\n          }\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n      state.paused = true;\n      removeListeners();\n      return this;\n    },\n    unpause: function unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      return this;\n    }\n  }; // initialize container elements\n\n  trap.updateContainerElements(elements);\n  return trap;\n};\nvar focusTrap_esm = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createFocusTrap: createFocusTrap$1\n});\nvar require$$3 = /*@__PURE__*/getAugmentedNamespace(focusTrap_esm);\nvar require$$4 = /*@__PURE__*/getAugmentedNamespace(index_esm);\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar React = React$1;\nvar ReactDOM = ReactDOM$1;\nvar PropTypes = PropTypes$1;\nvar _require = require$$3,\n  createFocusTrap = _require.createFocusTrap;\nvar _require2 = require$$4,\n  isFocusable = _require2.isFocusable; // TODO: These issues are related to older React features which we'll likely need\n//  to fix in order to move the code forward to the next major version of React.\n//  @see https://github.com/davidtheclark/focus-trap-react/issues/77\n\n/* eslint-disable react/no-find-dom-node */\n\nvar FocusTrap$1 = /*#__PURE__*/function (_React$Component) {\n  _inherits(FocusTrap, _React$Component);\n  var _super = _createSuper(FocusTrap);\n  function FocusTrap(props) {\n    var _this;\n    _classCallCheck(this, FocusTrap);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"getNodeForOption\", function (optionName) {\n      var _this$internalOptions;\n\n      // use internal options first, falling back to original options\n      var optionValue = (_this$internalOptions = this.internalOptions[optionName]) !== null && _this$internalOptions !== void 0 ? _this$internalOptions : this.originalOptions[optionName];\n      if (typeof optionValue === 'function') {\n        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          params[_key - 1] = arguments[_key];\n        }\n        optionValue = optionValue.apply(void 0, params);\n      }\n      if (optionValue === true) {\n        optionValue = undefined; // use default value\n      }\n\n      if (!optionValue) {\n        if (optionValue === undefined || optionValue === false) {\n          return optionValue;\n        } // else, empty string (invalid), null (invalid), 0 (invalid)\n\n        throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n      }\n      var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n      if (typeof optionValue === 'string') {\n        var _this$getDocument;\n        node = (_this$getDocument = this.getDocument()) === null || _this$getDocument === void 0 ? void 0 : _this$getDocument.querySelector(optionValue); // resolve to node, or null if fails\n\n        if (!node) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n      }\n      return node;\n    });\n    _this.handleDeactivate = _this.handleDeactivate.bind(_assertThisInitialized(_this));\n    _this.handlePostDeactivate = _this.handlePostDeactivate.bind(_assertThisInitialized(_this));\n    _this.handleClickOutsideDeactivates = _this.handleClickOutsideDeactivates.bind(_assertThisInitialized(_this)); // focus-trap options used internally when creating the trap\n\n    _this.internalOptions = {\n      // We need to hijack the returnFocusOnDeactivate option,\n      // because React can move focus into the element before we arrived at\n      // this lifecycle hook (e.g. with autoFocus inputs). So the component\n      // captures the previouslyFocusedElement in componentWillMount,\n      // then (optionally) returns focus to it in componentWillUnmount.\n      returnFocusOnDeactivate: false,\n      // the rest of these are also related to deactivation of the trap, and we\n      //  need to use them and control them as well\n      checkCanReturnFocus: null,\n      onDeactivate: _this.handleDeactivate,\n      onPostDeactivate: _this.handlePostDeactivate,\n      // we need to special-case this setting as well so that we can know if we should\n      //  NOT return focus if the trap gets auto-deactivated as the result of an\n      //  outside click (otherwise, we'll always think we should return focus because\n      //  of how we manage that flag internally here)\n      clickOutsideDeactivates: _this.handleClickOutsideDeactivates\n    }; // original options provided by the consumer\n\n    _this.originalOptions = {\n      // because of the above `internalOptions`, we maintain our own flag for\n      //  this option, and default it to `true` because that's focus-trap's default\n      returnFocusOnDeactivate: true,\n      // because of the above `internalOptions`, we keep these separate since\n      //  they're part of the deactivation process which we configure (internally) to\n      //  be shared between focus-trap and focus-trap-react\n      onDeactivate: null,\n      onPostDeactivate: null,\n      checkCanReturnFocus: null,\n      // the user's setting, defaulted to false since focus-trap defaults this to false\n      clickOutsideDeactivates: false\n    };\n    var focusTrapOptions = props.focusTrapOptions;\n    for (var optionName in focusTrapOptions) {\n      if (!Object.prototype.hasOwnProperty.call(focusTrapOptions, optionName)) {\n        continue;\n      }\n      if (optionName === 'returnFocusOnDeactivate' || optionName === 'onDeactivate' || optionName === 'onPostDeactivate' || optionName === 'checkCanReturnFocus' || optionName === 'clickOutsideDeactivates') {\n        _this.originalOptions[optionName] = focusTrapOptions[optionName];\n        continue; // exclude from internalOptions\n      }\n\n      _this.internalOptions[optionName] = focusTrapOptions[optionName];\n    } // if set, `{ target: Node, allowDeactivation: boolean }` where `target` is the outside\n    //  node that was clicked, and `allowDeactivation` is the result of the consumer's\n    //  option (stored in `this.originalOptions.clickOutsideDeactivates`, which may be a\n    //  function) whether to allow or deny auto-deactivation on click on this outside node\n\n    _this.outsideClick = null; // elements from which to create the focus trap on mount; if a child is used\n    //  instead of the `containerElements` prop, we'll get the child's related\n    //  element when the trap renders and then is declared 'mounted'\n\n    _this.focusTrapElements = props.containerElements || []; // now we remember what the currently focused element is, not relying on focus-trap\n\n    _this.updatePreviousElement();\n    return _this;\n  }\n  /**\n   * Gets the configured document.\n   * @returns {Document|undefined} Configured document, falling back to the main\n   *  document, if it exists. During SSR, `undefined` is returned since the\n   *  document doesn't exist.\n   */\n\n  _createClass(FocusTrap, [{\n    key: \"getDocument\",\n    value: function getDocument() {\n      // SSR: careful to check if `document` exists before accessing it as a variable\n      return this.props.focusTrapOptions.document || (typeof document !== 'undefined' ? document : undefined);\n    }\n    /**\n     * Gets the node for the given option, which is expected to be an option that\n     *  can be either a DOM node, a string that is a selector to get a node, `false`\n     *  (if a node is explicitly NOT given), or a function that returns any of these\n     *  values.\n     * @param {string} optionName\n     * @returns {undefined | false | HTMLElement | SVGElement} Returns\n     *  `undefined` if the option is not specified; `false` if the option\n     *  resolved to `false` (node explicitly not given); otherwise, the resolved\n     *  DOM node.\n     * @throws {Error} If the option is set, not `false`, and is not, or does not\n     *  resolve to a node.\n     */\n  }, {\n    key: \"getReturnFocusNode\",\n    value: function getReturnFocusNode() {\n      var node = this.getNodeForOption('setReturnFocus', this.previouslyFocusedElement);\n      return node ? node : node === false ? false : this.previouslyFocusedElement;\n    }\n    /** Update the previously focused element with the currently focused element. */\n  }, {\n    key: \"updatePreviousElement\",\n    value: function updatePreviousElement() {\n      var currentDocument = this.getDocument();\n      if (currentDocument) {\n        this.previouslyFocusedElement = currentDocument.activeElement;\n      }\n    }\n  }, {\n    key: \"deactivateTrap\",\n    value: function deactivateTrap() {\n      // NOTE: it's possible the focus trap has already been deactivated without our knowing it,\n      //  especially if the user set the `clickOutsideDeactivates: true` option on the trap,\n      //  and the mouse was clicked on some element outside the trap; at that point, focus-trap\n      //  will initiate its auto-deactivation process, which will call our own\n      //  handleDeactivate(), which will call into this method\n      if (!this.focusTrap || !this.focusTrap.active) {\n        return;\n      }\n      this.focusTrap.deactivate({\n        // NOTE: we never let the trap return the focus since we do that ourselves\n        returnFocus: false,\n        // we'll call this in our own post deactivate handler so make sure the trap doesn't\n        //  do it prematurely\n        checkCanReturnFocus: null,\n        // let it call the user's original deactivate handler, if any, instead of\n        //  our own which calls back into this function\n        onDeactivate: this.originalOptions.onDeactivate // NOTE: for post deactivate, don't specify anything so that it calls the\n        //  onPostDeactivate handler specified on `this.internalOptions`\n        //  which will always be our own `handlePostDeactivate()` handler, which\n        //  will finish things off by calling the user's provided onPostDeactivate\n        //  handler, if any, at the right time\n        // onPostDeactivate: NOTHING\n      });\n    }\n  }, {\n    key: \"handleClickOutsideDeactivates\",\n    value: function handleClickOutsideDeactivates(event) {\n      // use consumer's option (or call their handler) as the permission or denial\n      var allowDeactivation = typeof this.originalOptions.clickOutsideDeactivates === 'function' ? this.originalOptions.clickOutsideDeactivates.call(null, event) // call out of context\n      : this.originalOptions.clickOutsideDeactivates; // boolean\n\n      if (allowDeactivation) {\n        // capture the outside target that was clicked so we can use it in the deactivation\n        //  process since the consumer allowed it to cause auto-deactivation\n        this.outsideClick = {\n          target: event.target,\n          allowDeactivation: allowDeactivation\n        };\n      }\n      return allowDeactivation;\n    }\n  }, {\n    key: \"handleDeactivate\",\n    value: function handleDeactivate() {\n      if (this.originalOptions.onDeactivate) {\n        this.originalOptions.onDeactivate.call(null); // call user's handler out of context\n      }\n\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"handlePostDeactivate\",\n    value: function handlePostDeactivate() {\n      var _this2 = this;\n      var finishDeactivation = function finishDeactivation() {\n        var returnFocusNode = _this2.getReturnFocusNode();\n        var canReturnFocus = !!(\n        // did the consumer allow it?\n        _this2.originalOptions.returnFocusOnDeactivate &&\n        // can we actually focus the node?\n        returnFocusNode !== null && returnFocusNode !== void 0 && returnFocusNode.focus && (\n        // was there an outside click that allowed deactivation?\n        !_this2.outsideClick ||\n        // did the consumer allow deactivation when the outside node was clicked?\n        _this2.outsideClick.allowDeactivation &&\n        // is the outside node NOT focusable (implying that it did NOT receive focus\n        //  as a result of the click-through) -- in which case do NOT restore focus\n        //  to `returnFocusNode` because focus should remain on the outside node\n        !isFocusable(_this2.outsideClick.target, _this2.internalOptions.tabbableOptions)) // if no, the restore focus to `returnFocusNode` at this point\n        );\n\n        var _this2$internalOption = _this2.internalOptions.preventScroll,\n          preventScroll = _this2$internalOption === void 0 ? false : _this2$internalOption;\n        if (canReturnFocus) {\n          // return focus to the element that had focus when the trap was activated\n          returnFocusNode.focus({\n            preventScroll: preventScroll\n          });\n        }\n        if (_this2.originalOptions.onPostDeactivate) {\n          _this2.originalOptions.onPostDeactivate.call(null); // don't call it in context of \"this\"\n        }\n\n        _this2.outsideClick = null; // reset: no longer needed\n      };\n\n      if (this.originalOptions.checkCanReturnFocus) {\n        this.originalOptions.checkCanReturnFocus.call(null, this.getReturnFocusNode()) // call out of context\n        .then(finishDeactivation, finishDeactivation);\n      } else {\n        finishDeactivation();\n      }\n    }\n  }, {\n    key: \"setupFocusTrap\",\n    value: function setupFocusTrap() {\n      if (!this.focusTrap) {\n        var focusTrapElementDOMNodes = this.focusTrapElements.map(\n        // NOTE: `findDOMNode()` does not support CSS selectors; it'll just return\n        //  a new text node with the text wrapped in it instead of treating the\n        //  string as a selector and resolving it to a node in the DOM\n        ReactDOM.findDOMNode);\n        var nodesExist = focusTrapElementDOMNodes.some(Boolean);\n        if (nodesExist) {\n          // eslint-disable-next-line react/prop-types -- _createFocusTrap is an internal prop\n          this.focusTrap = this.props._createFocusTrap(focusTrapElementDOMNodes, this.internalOptions);\n          if (this.props.active) {\n            this.focusTrap.activate();\n          }\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.setupFocusTrap();\n      } // else, wait for later activation in case the `focusTrapOptions` will be updated\n      //  again before the trap is activated (e.g. if waiting to know what the document\n      //  object will be, so the Trap must be rendered, but the consumer is waiting to\n      //  activate until they have obtained the document from a ref)\n      //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.focusTrap) {\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrap.updateContainerElements(this.props.containerElements);\n        }\n        var hasActivated = !prevProps.active && this.props.active;\n        var hasDeactivated = prevProps.active && !this.props.active;\n        var hasPaused = !prevProps.paused && this.props.paused;\n        var hasUnpaused = prevProps.paused && !this.props.paused;\n        if (hasActivated) {\n          this.updatePreviousElement();\n          this.focusTrap.activate();\n        }\n        if (hasDeactivated) {\n          this.deactivateTrap();\n          return; // un/pause does nothing on an inactive trap\n        }\n\n        if (hasPaused) {\n          this.focusTrap.pause();\n        }\n        if (hasUnpaused) {\n          this.focusTrap.unpause();\n        }\n      } else {\n        // NOTE: if we're in `componentDidUpdate` and we don't have a trap yet,\n        //  it either means it shouldn't be active, or it should be but none of\n        //  of given `containerElements` were present in the DOM the last time\n        //  we tried to create the trap\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrapElements = this.props.containerElements;\n        } // don't create the trap unless it should be active in case the consumer\n        //  is still updating `focusTrapOptions`\n        //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n\n        if (this.props.active) {\n          this.updatePreviousElement();\n          this.setupFocusTrap();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var child = this.props.children ? React.Children.only(this.props.children) : undefined;\n      if (child) {\n        if (child.type && child.type === React.Fragment) {\n          throw new Error('A focus-trap cannot use a Fragment as its child container. Try replacing it with a <div> element.');\n        }\n        var composedRefCallback = function composedRefCallback(element) {\n          var containerElements = _this3.props.containerElements;\n          if (child) {\n            if (typeof child.ref === 'function') {\n              child.ref(element);\n            } else if (child.ref) {\n              child.ref.current = element;\n            }\n          }\n          _this3.focusTrapElements = containerElements ? containerElements : [element];\n        };\n        var childWithRef = React.cloneElement(child, {\n          ref: composedRefCallback\n        });\n        return childWithRef;\n      }\n      return null;\n    }\n  }]);\n  return FocusTrap;\n}(React.Component); // support server-side rendering where `Element` will not be defined\n\nvar ElementType = typeof Element === 'undefined' ? Function : Element;\nFocusTrap$1.propTypes = {\n  active: PropTypes.bool,\n  paused: PropTypes.bool,\n  focusTrapOptions: PropTypes.shape({\n    document: PropTypes.object,\n    onActivate: PropTypes.func,\n    onPostActivate: PropTypes.func,\n    checkCanFocusTrap: PropTypes.func,\n    onDeactivate: PropTypes.func,\n    onPostDeactivate: PropTypes.func,\n    checkCanReturnFocus: PropTypes.func,\n    initialFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    fallbackFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string,\n    // NOTE: does not support `false` as value (or return value from function)\n    PropTypes.func]),\n    escapeDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    clickOutsideDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    returnFocusOnDeactivate: PropTypes.bool,\n    setReturnFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    allowOutsideClick: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    preventScroll: PropTypes.bool,\n    tabbableOptions: PropTypes.shape({\n      displayCheck: PropTypes.oneOf(['full', 'non-zero-area', 'none']),\n      getShadowRoot: PropTypes.oneOfType([PropTypes.bool, PropTypes.func])\n    })\n  }),\n  containerElements: PropTypes.arrayOf(PropTypes.instanceOf(ElementType)),\n  children: PropTypes.oneOfType([PropTypes.element,\n  // React element\n  PropTypes.instanceOf(ElementType) // DOM element\n  ]) // NOTE: _createFocusTrap is internal, for testing purposes only, so we don't\n  //  specify it here. It's expected to be set to the function returned from\n  //  require('focus-trap'), or one with a compatible interface.\n};\n\nFocusTrap$1.defaultProps = {\n  active: true,\n  paused: false,\n  focusTrapOptions: {},\n  _createFocusTrap: createFocusTrap\n};\nvar focusTrapReact = FocusTrap$1;\n\n// not using this one bc it has issues with Storybook snapshot tests\n// import FocusLock from 'react-focus-lock';\n\n/**\nComponent to trap focus, just a wrapper for focus-trap-react\nUnstable, because we're still figuring out all the use cases\n*/\nfunction FocusTrap({\n  children,\n  ...otherProps\n}) {\n  return /*#__PURE__*/React$1.createElement(focusTrapReact, otherProps, children);\n}\nFocusTrap.propTypes = {\n  /**\n   * override the element that receives initial focus.\n   * Make sure the fallback element can be focused programmatically\n   * */\n  initialFocus: PropTypes$1.any\n};\nFocusTrap.defaultProps = {\n  initialFocus: false\n};\nFocusTrap.defaultProps = {\n  initialFocus: false\n};\n\n/**\n * Conditionally wraps a component in an instance of <FocusTrap>\n * Here for convenience, since it's used in multiple places\n */\nfunction ConditionalFocusTrap({\n  focusTrap,\n  children,\n  ...otherProps\n}) {\n  return focusTrap ? /*#__PURE__*/React$1.createElement(FocusTrap, otherProps, children) : children;\n}\nConditionalFocusTrap.propTypes = {\n  /** whether to wrap children in `FocusTrap` component */\n  focusTrap: PropTypes$1.bool\n};\nConditionalFocusTrap.defaultProps = {\n  focusTrap: false\n};\nexport { ConditionalFocusTrap as C };","map":{"version":3,"names":["React$1","PropTypes$1","ReactDOM$1","a","getAugmentedNamespace","candidateSelectors","candidateSelector","join","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","ownerDocument","getCandidates","el","includeContainer","filter","candidates","Array","slice","apply","querySelectorAll","call","unshift","getCandidatesIteratively","elements","options","elementsToCheck","from","length","shift","tagName","assigned","assignedElements","content","children","nestedCandidates","flatten","push","scope","validCandidate","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","_nestedCandidates","getTabindex","node","isScope","tabIndex","test","isContentEditable","isNaN","parseInt","getAttribute","sortOrderedTabbables","b","documentOrder","isInput","isHiddenInput","type","isDetailsWithSummary","r","some","child","getCheckedRadio","nodes","form","i","checked","isTabbableRadio","name","radioScope","queryRadios","radioSet","window","CSS","escape","err","console","error","message","isRadio","isNonTabbableRadio","isZeroArea","_node$getBoundingClie","getBoundingClientRect","width","height","isHidden","_ref","displayCheck","getComputedStyle","visibility","isDirectSummary","nodeUnderDetails","parentElement","nodeRootHost","host","nodeIsAttached","contains","originalNode","rootNode","assignedSlot","getClientRects","isDisabledFromFieldset","parentNode","disabled","item","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","forEach","candidateTabindex","sort","reduce","acc","sortable","concat","tabbable","bind","focusable","isTabbable","Error","focusableCandidateSelector","isFocusable$1","isFocusable","index_esm","Object","freeze","__proto__","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","_objectSpread2","target","arguments","source","key","_defineProperty$1","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","activeFocusTraps","trapQueue","activateTrap","trap","activeTrap","pause","trapIndex","indexOf","splice","deactivateTrap","unpause","isSelectableInput","toLowerCase","select","isEscapeEvent","e","keyCode","isTabEvent","delay","fn","setTimeout","findIndex","arr","idx","every","valueOrHandler","_len","params","_key","getActualTarget","event","composedPath","createFocusTrap$1","createFocusTrap","userOptions","doc","document","config","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","containerGroups","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","delayInitialFocusTimer","undefined","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","container","tabbableNodes","find","getNodeForOption","optionValue","_len2","_key2","querySelector","getInitialFocusNode","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","tabbableOptions","focusableNodes","lastTabbableNode","nextTabbableNode","forward","nodeIdx","n","reverse","group","tryFocus","focus","preventScroll","getReturnFocusNode","previousActiveElement","checkPointerDown","clickOutsideDeactivates","deactivate","returnFocus","allowOutsideClick","preventDefault","checkFocusIn","targetContained","Document","stopImmediatePropagation","checkTab","destinationNode","containerIndex","containerGroup","shiftKey","startOfGroupIndex","_ref2","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref3","_destinationGroupIndex","_destinationGroup","checkKey","checkClick","addListeners","addEventListener","capture","passive","removeListeners","removeEventListener","activate","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","then","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","clearTimeout","finishDeactivation","updateContainerElements","containerElements","elementsAsArray","Boolean","focusTrap_esm","require$$3","require$$4","_typeof","Symbol","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","valueOf","getPrototypeOf","_defineProperty","React","ReactDOM","PropTypes","_require","_require2","FocusTrap$1","_React$Component","FocusTrap","_super","_this","_this$internalOptions","internalOptions","originalOptions","_this$getDocument","getDocument","handleDeactivate","handlePostDeactivate","handleClickOutsideDeactivates","focusTrapOptions","hasOwnProperty","outsideClick","focusTrapElements","updatePreviousElement","previouslyFocusedElement","currentDocument","focusTrap","allowDeactivation","_this2","returnFocusNode","canReturnFocus","_this2$internalOption","setupFocusTrap","focusTrapElementDOMNodes","findDOMNode","nodesExist","_createFocusTrap","componentDidMount","componentDidUpdate","prevProps","hasActivated","hasDeactivated","hasPaused","hasUnpaused","componentWillUnmount","render","_this3","Children","only","Fragment","composedRefCallback","ref","current","childWithRef","cloneElement","Component","ElementType","Function","propTypes","bool","shape","func","initialFocus","oneOfType","instanceOf","string","fallbackFocus","setReturnFocus","oneOf","arrayOf","defaultProps","focusTrapReact","otherProps","createElement","any","ConditionalFocusTrap","C"],"sources":["/Users/mike/node_modules/@screentone/core/es/ConditionalFocusTrap-851f4cf3.js"],"sourcesContent":["import React$1 from 'react';\nimport PropTypes$1 from 'prop-types';\nimport ReactDOM$1 from 'react-dom';\nimport { a as getAugmentedNamespace } from './_commonjsHelpers-49473ade.js';\n\n/*!\n* tabbable 5.3.3\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\nvar candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]:not(slot)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])', 'details>summary:first-of-type', 'details'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  return element.getRootNode();\n} : function (element) {\n  return element.ownerDocument;\n};\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\n\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidatesScope\n * @property {Element} scope contains inner candidates\n * @property {Element[]} candidates\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidatesScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidatesScope>}\n */\n\n\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scope: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      } // iterate over shadow content if possible\n\n\n      var shadowRoot = element.shadowRoot || // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n      var validShadowRoot = !options.shadowRootFilter || options.shadowRootFilter(element);\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scope: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n\n  return candidates;\n};\n\nvar getTabindex = function getTabindex(node, isScope) {\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    //\n    // isScope is positive for custom element with shadow root or slot that by default\n    // have tabIndex -1, but need to be sorted by document order in order for their\n    // content to be inserted in the correct position\n    if ((isScope || /^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || node.isContentEditable) && isNaN(parseInt(node.getAttribute('tabindex'), 10))) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\n\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\n\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\n\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n\n  var radioScope = node.form || getRootNode(node);\n\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n\n  var radioSet;\n\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n      width = _node$getBoundingClie.width,\n      height = _node$getBoundingClie.height;\n\n  return width === 0 && height === 0;\n};\n\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n      getShadowRoot = _ref.getShadowRoot;\n\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  } // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n\n\n  var nodeRootHost = getRootNode(node).host;\n  var nodeIsAttached = (nodeRootHost === null || nodeRootHost === void 0 ? void 0 : nodeRootHost.ownerDocument.contains(nodeRootHost)) || node.ownerDocument.contains(node);\n\n  if (!displayCheck || displayCheck === 'full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    } // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n\n    if (nodeIsAttached) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    } // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  } // visible, as far as we can tell, or per current `displayCheck` mode\n\n\n  return false;\n}; // form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\n\n\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement; // check if `node` is contained in a disabled <fieldset>\n\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i); // when the first <legend> (in document order) is found\n\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        } // the disabled <fieldset> containing `node` has no <legend>\n\n\n        return true;\n      }\n\n      parentNode = parentNode.parentElement;\n    }\n  } // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n\n\n  return false;\n};\n\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled || isHiddenInput(node) || isHidden(node, options) || // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n\n  return true;\n};\n\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabindex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n\n  return true;\n};\n\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  } // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n\n\n  return false;\n};\n/**\n * @param {Array.<Element|CandidatesScope>} candidates\n * @returns Element[]\n */\n\n\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scope;\n    var element = isScope ? item.scope : item;\n    var candidateTabindex = getTabindex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\n\nvar tabbable = function tabbable(el, options) {\n  options = options || {};\n  var candidates;\n\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n\n  return sortByOrder(candidates);\n};\n\nvar focusable = function focusable(el, options) {\n  options = options || {};\n  var candidates;\n\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n\n  return candidates;\n};\n\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\n\nvar isFocusable$1 = function isFocusable(node, options) {\n  options = options || {};\n\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nvar index_esm = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  focusable: focusable,\n  isFocusable: isFocusable$1,\n  isTabbable: isTabbable,\n  tabbable: tabbable\n});\n\n/*!\n* focus-trap 6.9.4\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty$1(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty$1(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar activeFocusTraps = function () {\n  var trapQueue = [];\n  return {\n    activateTrap: function activateTrap(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n    deactivateTrap: function deactivateTrap(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n}();\n\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\n\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\n\nvar isTabEvent = function isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n};\n\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n}; // Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\n\n\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n  return idx;\n};\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\n\n\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\n\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\nvar createFocusTrap$1 = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true\n  }, userOptions);\n\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   firstTabbableNode: HTMLElement|null,\n    //   lastTabbableNode: HTMLElement|null,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n\n\n  var findContainerIndex = function findContainerIndex(element) {\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n          tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n\n\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n\n      optionValue = optionValue.apply(void 0, params);\n    }\n\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      } // else, empty string (invalid), null (invalid), 0 (invalid)\n\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n\n    return node;\n  };\n\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus'); // false explicitly indicates we want no initialFocus at all\n\n    if (node === false) {\n      return false;\n    }\n\n    if (node === undefined) {\n      // option not specified: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode; // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n\n    return node;\n  };\n\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions); // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes\n\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        firstTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[0] : null,\n        lastTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : null,\n\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          // NOTE: If tabindex is positive (in order to manipulate the tab order separate\n          //  from the DOM order), this __will not work__ because the list of focusableNodes,\n          //  while it contains tabbable nodes, does not sort its nodes in any order other\n          //  than DOM order, because it can't: Where would you place focusable (but not\n          //  tabbable) nodes in that order? They have no order, because they aren't tabbale...\n          // Support for positive tabindex is already broken and hard to manage (possibly\n          //  not supportable, TBD), so this isn't going to make things worse than they\n          //  already are, and at least makes things better for the majority of cases where\n          //  tabindex is either 0/unset or negative.\n          // FYI, positive tabindex issue: https://github.com/focus-trap/focus-trap/issues/375\n          var nodeIdx = focusableNodes.findIndex(function (n) {\n            return n === node;\n          });\n\n          if (nodeIdx < 0) {\n            return undefined;\n          }\n\n          if (forward) {\n            return focusableNodes.slice(nodeIdx + 1).find(function (n) {\n              return isTabbable(n, config.tabbableOptions);\n            });\n          }\n\n          return focusableNodes.slice(0, nodeIdx).reverse().find(function (n) {\n            return isTabbable(n, config.tabbableOptions);\n          });\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    }); // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n  };\n\n  var tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n\n    if (node === doc.activeElement) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  }; // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n\n\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n\n    if (findContainerIndex(target) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // if, on deactivation, we should return focus to the node originally-focused\n        //  when the trap was activated (or the configured `setReturnFocus` node),\n        //  then assume it's also OK to return focus to the outside node that was\n        //  just clicked, causing deactivation, as long as that node is focusable;\n        //  if it isn't focusable, then return focus to the original node focused\n        //  on activation (or the configured `setReturnFocus` node)\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked, whether it's focusable or not; by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node)\n        returnFocus: config.returnFocusOnDeactivate && !isFocusable$1(target, config.tabbableOptions)\n      });\n      return;\n    } // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    } // otherwise, prevent the click\n\n\n    e.preventDefault();\n  }; // In case focus escapes the trap for some strange reason, pull it back in.\n\n\n  var checkFocusIn = function checkFocusIn(e) {\n    var target = getActualTarget(e);\n    var targetContained = findContainerIndex(target) >= 0; // In Firefox when you Tab out of an iframe the Document is briefly focused.\n\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  }; // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n\n\n  var checkTab = function checkTab(e) {\n    var target = getActualTarget(e);\n    updateTabbableNodes();\n    var destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back in to...\n        if (e.shiftKey) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (e.shiftKey) {\n        // REVERSE\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref2) {\n          var firstTabbableNode = _ref2.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable$1(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        }\n      } else {\n        // FORWARD\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var lastTabbableNode = _ref3.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable$1(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = _destinationGroup.firstTabbableNode;\n        }\n      }\n    } else {\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    if (destinationNode) {\n      e.preventDefault();\n      tryFocus(destinationNode);\n    } // else, let the browser take care of [shift+]tab and move the focus\n\n  };\n\n  var checkKey = function checkKey(e) {\n    if (isEscapeEvent(e) && valueOrHandler(config.escapeDeactivates, e) !== false) {\n      e.preventDefault();\n      trap.deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  };\n\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n\n    if (findContainerIndex(target) >= 0) {\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }; //\n  // EVENT LISTENERS\n  //\n\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    } // There can be only one listening focus trap at a time\n\n\n    activeFocusTraps.activateTrap(trap); // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  }; //\n  // TRAP DEFINITION\n  //\n\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n\n    get paused() {\n      return state.paused;\n    },\n\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n\n      if (onActivate) {\n        onActivate();\n      }\n\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n\n        addListeners();\n\n        if (onPostActivate) {\n          onPostActivate();\n        }\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      activeFocusTraps.deactivateTrap(trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n\n      if (onDeactivate) {\n        onDeactivate();\n      }\n\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n\n          if (onPostDeactivate) {\n            onPostDeactivate();\n          }\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = true;\n      removeListeners();\n      return this;\n    },\n    unpause: function unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      return this;\n    }\n  }; // initialize container elements\n\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nvar focusTrap_esm = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createFocusTrap: createFocusTrap$1\n});\n\nvar require$$3 = /*@__PURE__*/getAugmentedNamespace(focusTrap_esm);\n\nvar require$$4 = /*@__PURE__*/getAugmentedNamespace(index_esm);\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar React = React$1;\n\nvar ReactDOM = ReactDOM$1;\n\nvar PropTypes = PropTypes$1;\n\nvar _require = require$$3,\n    createFocusTrap = _require.createFocusTrap;\n\nvar _require2 = require$$4,\n    isFocusable = _require2.isFocusable; // TODO: These issues are related to older React features which we'll likely need\n//  to fix in order to move the code forward to the next major version of React.\n//  @see https://github.com/davidtheclark/focus-trap-react/issues/77\n\n/* eslint-disable react/no-find-dom-node */\n\n\nvar FocusTrap$1 = /*#__PURE__*/function (_React$Component) {\n  _inherits(FocusTrap, _React$Component);\n\n  var _super = _createSuper(FocusTrap);\n\n  function FocusTrap(props) {\n    var _this;\n\n    _classCallCheck(this, FocusTrap);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getNodeForOption\", function (optionName) {\n      var _this$internalOptions;\n\n      // use internal options first, falling back to original options\n      var optionValue = (_this$internalOptions = this.internalOptions[optionName]) !== null && _this$internalOptions !== void 0 ? _this$internalOptions : this.originalOptions[optionName];\n\n      if (typeof optionValue === 'function') {\n        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          params[_key - 1] = arguments[_key];\n        }\n\n        optionValue = optionValue.apply(void 0, params);\n      }\n\n      if (optionValue === true) {\n        optionValue = undefined; // use default value\n      }\n\n      if (!optionValue) {\n        if (optionValue === undefined || optionValue === false) {\n          return optionValue;\n        } // else, empty string (invalid), null (invalid), 0 (invalid)\n\n\n        throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n      }\n\n      var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n      if (typeof optionValue === 'string') {\n        var _this$getDocument;\n\n        node = (_this$getDocument = this.getDocument()) === null || _this$getDocument === void 0 ? void 0 : _this$getDocument.querySelector(optionValue); // resolve to node, or null if fails\n\n        if (!node) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n      }\n\n      return node;\n    });\n\n    _this.handleDeactivate = _this.handleDeactivate.bind(_assertThisInitialized(_this));\n    _this.handlePostDeactivate = _this.handlePostDeactivate.bind(_assertThisInitialized(_this));\n    _this.handleClickOutsideDeactivates = _this.handleClickOutsideDeactivates.bind(_assertThisInitialized(_this)); // focus-trap options used internally when creating the trap\n\n    _this.internalOptions = {\n      // We need to hijack the returnFocusOnDeactivate option,\n      // because React can move focus into the element before we arrived at\n      // this lifecycle hook (e.g. with autoFocus inputs). So the component\n      // captures the previouslyFocusedElement in componentWillMount,\n      // then (optionally) returns focus to it in componentWillUnmount.\n      returnFocusOnDeactivate: false,\n      // the rest of these are also related to deactivation of the trap, and we\n      //  need to use them and control them as well\n      checkCanReturnFocus: null,\n      onDeactivate: _this.handleDeactivate,\n      onPostDeactivate: _this.handlePostDeactivate,\n      // we need to special-case this setting as well so that we can know if we should\n      //  NOT return focus if the trap gets auto-deactivated as the result of an\n      //  outside click (otherwise, we'll always think we should return focus because\n      //  of how we manage that flag internally here)\n      clickOutsideDeactivates: _this.handleClickOutsideDeactivates\n    }; // original options provided by the consumer\n\n    _this.originalOptions = {\n      // because of the above `internalOptions`, we maintain our own flag for\n      //  this option, and default it to `true` because that's focus-trap's default\n      returnFocusOnDeactivate: true,\n      // because of the above `internalOptions`, we keep these separate since\n      //  they're part of the deactivation process which we configure (internally) to\n      //  be shared between focus-trap and focus-trap-react\n      onDeactivate: null,\n      onPostDeactivate: null,\n      checkCanReturnFocus: null,\n      // the user's setting, defaulted to false since focus-trap defaults this to false\n      clickOutsideDeactivates: false\n    };\n    var focusTrapOptions = props.focusTrapOptions;\n\n    for (var optionName in focusTrapOptions) {\n      if (!Object.prototype.hasOwnProperty.call(focusTrapOptions, optionName)) {\n        continue;\n      }\n\n      if (optionName === 'returnFocusOnDeactivate' || optionName === 'onDeactivate' || optionName === 'onPostDeactivate' || optionName === 'checkCanReturnFocus' || optionName === 'clickOutsideDeactivates') {\n        _this.originalOptions[optionName] = focusTrapOptions[optionName];\n        continue; // exclude from internalOptions\n      }\n\n      _this.internalOptions[optionName] = focusTrapOptions[optionName];\n    } // if set, `{ target: Node, allowDeactivation: boolean }` where `target` is the outside\n    //  node that was clicked, and `allowDeactivation` is the result of the consumer's\n    //  option (stored in `this.originalOptions.clickOutsideDeactivates`, which may be a\n    //  function) whether to allow or deny auto-deactivation on click on this outside node\n\n\n    _this.outsideClick = null; // elements from which to create the focus trap on mount; if a child is used\n    //  instead of the `containerElements` prop, we'll get the child's related\n    //  element when the trap renders and then is declared 'mounted'\n\n    _this.focusTrapElements = props.containerElements || []; // now we remember what the currently focused element is, not relying on focus-trap\n\n    _this.updatePreviousElement();\n\n    return _this;\n  }\n  /**\n   * Gets the configured document.\n   * @returns {Document|undefined} Configured document, falling back to the main\n   *  document, if it exists. During SSR, `undefined` is returned since the\n   *  document doesn't exist.\n   */\n\n\n  _createClass(FocusTrap, [{\n    key: \"getDocument\",\n    value: function getDocument() {\n      // SSR: careful to check if `document` exists before accessing it as a variable\n      return this.props.focusTrapOptions.document || (typeof document !== 'undefined' ? document : undefined);\n    }\n    /**\n     * Gets the node for the given option, which is expected to be an option that\n     *  can be either a DOM node, a string that is a selector to get a node, `false`\n     *  (if a node is explicitly NOT given), or a function that returns any of these\n     *  values.\n     * @param {string} optionName\n     * @returns {undefined | false | HTMLElement | SVGElement} Returns\n     *  `undefined` if the option is not specified; `false` if the option\n     *  resolved to `false` (node explicitly not given); otherwise, the resolved\n     *  DOM node.\n     * @throws {Error} If the option is set, not `false`, and is not, or does not\n     *  resolve to a node.\n     */\n\n  }, {\n    key: \"getReturnFocusNode\",\n    value: function getReturnFocusNode() {\n      var node = this.getNodeForOption('setReturnFocus', this.previouslyFocusedElement);\n      return node ? node : node === false ? false : this.previouslyFocusedElement;\n    }\n    /** Update the previously focused element with the currently focused element. */\n\n  }, {\n    key: \"updatePreviousElement\",\n    value: function updatePreviousElement() {\n      var currentDocument = this.getDocument();\n\n      if (currentDocument) {\n        this.previouslyFocusedElement = currentDocument.activeElement;\n      }\n    }\n  }, {\n    key: \"deactivateTrap\",\n    value: function deactivateTrap() {\n      // NOTE: it's possible the focus trap has already been deactivated without our knowing it,\n      //  especially if the user set the `clickOutsideDeactivates: true` option on the trap,\n      //  and the mouse was clicked on some element outside the trap; at that point, focus-trap\n      //  will initiate its auto-deactivation process, which will call our own\n      //  handleDeactivate(), which will call into this method\n      if (!this.focusTrap || !this.focusTrap.active) {\n        return;\n      }\n\n      this.focusTrap.deactivate({\n        // NOTE: we never let the trap return the focus since we do that ourselves\n        returnFocus: false,\n        // we'll call this in our own post deactivate handler so make sure the trap doesn't\n        //  do it prematurely\n        checkCanReturnFocus: null,\n        // let it call the user's original deactivate handler, if any, instead of\n        //  our own which calls back into this function\n        onDeactivate: this.originalOptions.onDeactivate // NOTE: for post deactivate, don't specify anything so that it calls the\n        //  onPostDeactivate handler specified on `this.internalOptions`\n        //  which will always be our own `handlePostDeactivate()` handler, which\n        //  will finish things off by calling the user's provided onPostDeactivate\n        //  handler, if any, at the right time\n        // onPostDeactivate: NOTHING\n\n      });\n    }\n  }, {\n    key: \"handleClickOutsideDeactivates\",\n    value: function handleClickOutsideDeactivates(event) {\n      // use consumer's option (or call their handler) as the permission or denial\n      var allowDeactivation = typeof this.originalOptions.clickOutsideDeactivates === 'function' ? this.originalOptions.clickOutsideDeactivates.call(null, event) // call out of context\n      : this.originalOptions.clickOutsideDeactivates; // boolean\n\n      if (allowDeactivation) {\n        // capture the outside target that was clicked so we can use it in the deactivation\n        //  process since the consumer allowed it to cause auto-deactivation\n        this.outsideClick = {\n          target: event.target,\n          allowDeactivation: allowDeactivation\n        };\n      }\n\n      return allowDeactivation;\n    }\n  }, {\n    key: \"handleDeactivate\",\n    value: function handleDeactivate() {\n      if (this.originalOptions.onDeactivate) {\n        this.originalOptions.onDeactivate.call(null); // call user's handler out of context\n      }\n\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"handlePostDeactivate\",\n    value: function handlePostDeactivate() {\n      var _this2 = this;\n\n      var finishDeactivation = function finishDeactivation() {\n        var returnFocusNode = _this2.getReturnFocusNode();\n\n        var canReturnFocus = !!( // did the consumer allow it?\n        _this2.originalOptions.returnFocusOnDeactivate && // can we actually focus the node?\n        returnFocusNode !== null && returnFocusNode !== void 0 && returnFocusNode.focus && ( // was there an outside click that allowed deactivation?\n        !_this2.outsideClick || // did the consumer allow deactivation when the outside node was clicked?\n        _this2.outsideClick.allowDeactivation && // is the outside node NOT focusable (implying that it did NOT receive focus\n        //  as a result of the click-through) -- in which case do NOT restore focus\n        //  to `returnFocusNode` because focus should remain on the outside node\n        !isFocusable(_this2.outsideClick.target, _this2.internalOptions.tabbableOptions)) // if no, the restore focus to `returnFocusNode` at this point\n        );\n        var _this2$internalOption = _this2.internalOptions.preventScroll,\n            preventScroll = _this2$internalOption === void 0 ? false : _this2$internalOption;\n\n        if (canReturnFocus) {\n          // return focus to the element that had focus when the trap was activated\n          returnFocusNode.focus({\n            preventScroll: preventScroll\n          });\n        }\n\n        if (_this2.originalOptions.onPostDeactivate) {\n          _this2.originalOptions.onPostDeactivate.call(null); // don't call it in context of \"this\"\n\n        }\n\n        _this2.outsideClick = null; // reset: no longer needed\n      };\n\n      if (this.originalOptions.checkCanReturnFocus) {\n        this.originalOptions.checkCanReturnFocus.call(null, this.getReturnFocusNode()) // call out of context\n        .then(finishDeactivation, finishDeactivation);\n      } else {\n        finishDeactivation();\n      }\n    }\n  }, {\n    key: \"setupFocusTrap\",\n    value: function setupFocusTrap() {\n      if (!this.focusTrap) {\n        var focusTrapElementDOMNodes = this.focusTrapElements.map( // NOTE: `findDOMNode()` does not support CSS selectors; it'll just return\n        //  a new text node with the text wrapped in it instead of treating the\n        //  string as a selector and resolving it to a node in the DOM\n        ReactDOM.findDOMNode);\n        var nodesExist = focusTrapElementDOMNodes.some(Boolean);\n\n        if (nodesExist) {\n          // eslint-disable-next-line react/prop-types -- _createFocusTrap is an internal prop\n          this.focusTrap = this.props._createFocusTrap(focusTrapElementDOMNodes, this.internalOptions);\n\n          if (this.props.active) {\n            this.focusTrap.activate();\n          }\n\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.setupFocusTrap();\n      } // else, wait for later activation in case the `focusTrapOptions` will be updated\n      //  again before the trap is activated (e.g. if waiting to know what the document\n      //  object will be, so the Trap must be rendered, but the consumer is waiting to\n      //  activate until they have obtained the document from a ref)\n      //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.focusTrap) {\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrap.updateContainerElements(this.props.containerElements);\n        }\n\n        var hasActivated = !prevProps.active && this.props.active;\n        var hasDeactivated = prevProps.active && !this.props.active;\n        var hasPaused = !prevProps.paused && this.props.paused;\n        var hasUnpaused = prevProps.paused && !this.props.paused;\n\n        if (hasActivated) {\n          this.updatePreviousElement();\n          this.focusTrap.activate();\n        }\n\n        if (hasDeactivated) {\n          this.deactivateTrap();\n          return; // un/pause does nothing on an inactive trap\n        }\n\n        if (hasPaused) {\n          this.focusTrap.pause();\n        }\n\n        if (hasUnpaused) {\n          this.focusTrap.unpause();\n        }\n      } else {\n        // NOTE: if we're in `componentDidUpdate` and we don't have a trap yet,\n        //  it either means it shouldn't be active, or it should be but none of\n        //  of given `containerElements` were present in the DOM the last time\n        //  we tried to create the trap\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrapElements = this.props.containerElements;\n        } // don't create the trap unless it should be active in case the consumer\n        //  is still updating `focusTrapOptions`\n        //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n\n\n        if (this.props.active) {\n          this.updatePreviousElement();\n          this.setupFocusTrap();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var child = this.props.children ? React.Children.only(this.props.children) : undefined;\n\n      if (child) {\n        if (child.type && child.type === React.Fragment) {\n          throw new Error('A focus-trap cannot use a Fragment as its child container. Try replacing it with a <div> element.');\n        }\n\n        var composedRefCallback = function composedRefCallback(element) {\n          var containerElements = _this3.props.containerElements;\n\n          if (child) {\n            if (typeof child.ref === 'function') {\n              child.ref(element);\n            } else if (child.ref) {\n              child.ref.current = element;\n            }\n          }\n\n          _this3.focusTrapElements = containerElements ? containerElements : [element];\n        };\n\n        var childWithRef = React.cloneElement(child, {\n          ref: composedRefCallback\n        });\n        return childWithRef;\n      }\n\n      return null;\n    }\n  }]);\n\n  return FocusTrap;\n}(React.Component); // support server-side rendering where `Element` will not be defined\n\n\nvar ElementType = typeof Element === 'undefined' ? Function : Element;\nFocusTrap$1.propTypes = {\n  active: PropTypes.bool,\n  paused: PropTypes.bool,\n  focusTrapOptions: PropTypes.shape({\n    document: PropTypes.object,\n    onActivate: PropTypes.func,\n    onPostActivate: PropTypes.func,\n    checkCanFocusTrap: PropTypes.func,\n    onDeactivate: PropTypes.func,\n    onPostDeactivate: PropTypes.func,\n    checkCanReturnFocus: PropTypes.func,\n    initialFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    fallbackFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, // NOTE: does not support `false` as value (or return value from function)\n    PropTypes.func]),\n    escapeDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    clickOutsideDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    returnFocusOnDeactivate: PropTypes.bool,\n    setReturnFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    allowOutsideClick: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    preventScroll: PropTypes.bool,\n    tabbableOptions: PropTypes.shape({\n      displayCheck: PropTypes.oneOf(['full', 'non-zero-area', 'none']),\n      getShadowRoot: PropTypes.oneOfType([PropTypes.bool, PropTypes.func])\n    })\n  }),\n  containerElements: PropTypes.arrayOf(PropTypes.instanceOf(ElementType)),\n  children: PropTypes.oneOfType([PropTypes.element, // React element\n  PropTypes.instanceOf(ElementType) // DOM element\n  ]) // NOTE: _createFocusTrap is internal, for testing purposes only, so we don't\n  //  specify it here. It's expected to be set to the function returned from\n  //  require('focus-trap'), or one with a compatible interface.\n\n};\nFocusTrap$1.defaultProps = {\n  active: true,\n  paused: false,\n  focusTrapOptions: {},\n  _createFocusTrap: createFocusTrap\n};\nvar focusTrapReact = FocusTrap$1;\n\n// not using this one bc it has issues with Storybook snapshot tests\n// import FocusLock from 'react-focus-lock';\n\n/**\nComponent to trap focus, just a wrapper for focus-trap-react\nUnstable, because we're still figuring out all the use cases\n*/\nfunction FocusTrap({\n  children,\n  ...otherProps\n}) {\n  return /*#__PURE__*/React$1.createElement(focusTrapReact, otherProps, children);\n}\nFocusTrap.propTypes = {\n  /**\n   * override the element that receives initial focus.\n   * Make sure the fallback element can be focused programmatically\n   * */\n  initialFocus: PropTypes$1.any\n};\nFocusTrap.defaultProps = {\n  initialFocus: false\n};\nFocusTrap.defaultProps = {\n  initialFocus: false\n};\n\n/**\n * Conditionally wraps a component in an instance of <FocusTrap>\n * Here for convenience, since it's used in multiple places\n */\nfunction ConditionalFocusTrap({\n  focusTrap,\n  children,\n  ...otherProps\n}) {\n  return focusTrap ? /*#__PURE__*/React$1.createElement(FocusTrap, otherProps, children) : children;\n}\nConditionalFocusTrap.propTypes = {\n  /** whether to wrap children in `FocusTrap` component */\n  focusTrap: PropTypes$1.bool\n};\nConditionalFocusTrap.defaultProps = {\n  focusTrap: false\n};\n\nexport { ConditionalFocusTrap as C };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}