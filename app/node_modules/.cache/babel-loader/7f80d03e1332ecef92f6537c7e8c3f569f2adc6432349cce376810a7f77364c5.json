{"ast":null,"code":"import { useState, useRef, useEffect, useCallback } from 'react';\n\n/**\nDropdown Hooks, like the file name says\nHandles management of open/close state\nAdding/removing CSS classes to body/html\n*/\n\nfunction useDropdownState(params = {}) {\n  const {\n    open: initialOpen,\n    onToggle\n  } = params;\n\n  // state for open/close state\n  const [open, setOpen] = useState(initialOpen);\n  // ref for dropdown\n  const componentRef = useRef(null);\n  useEffect(() => {\n    setOpen(initialOpen);\n  }, [initialOpen]); // reset state if open prop changes\n\n  const onClickOutside = useCallback(e => {\n    var _componentRef$current;\n    if (open && !(componentRef != null && (_componentRef$current = componentRef.current) != null && _componentRef$current.contains(e.target))) {\n      if (typeof onToggle === 'function') onToggle(false);\n      setOpen(false);\n    }\n  }, [setOpen, onToggle, open]);\n  useEffect(() => {\n    window.addEventListener('pointerdown', onClickOutside);\n    return () => window.removeEventListener('pointerdown', onClickOutside);\n  }, [onClickOutside]); // listener for when user clicks outside dropdown\n\n  function toggleDropdown() {\n    if (typeof onToggle === 'function') onToggle(!open);\n    setOpen(!open);\n  }\n  function openDropdown() {\n    onToggle(open);\n    setOpen(true);\n  }\n  function closeDropdown() {\n    onToggle(false);\n    setOpen(false);\n  }\n  return {\n    open,\n    setOpen,\n    componentRef,\n    openDropdown,\n    closeDropdown,\n    toggleDropdown\n  };\n}\nexport { useDropdownState as default };","map":{"version":3,"names":["useState","useRef","useEffect","useCallback","useDropdownState","params","open","initialOpen","onToggle","setOpen","componentRef","onClickOutside","e","_componentRef$current","current","contains","target","window","addEventListener","removeEventListener","toggleDropdown","openDropdown","closeDropdown","default"],"sources":["/Users/mike/node_modules/@screentone/core/es/useDropdownState.js"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\n\n/**\nDropdown Hooks, like the file name says\nHandles management of open/close state\nAdding/removing CSS classes to body/html\n*/\n\nfunction useDropdownState(params = {}) {\n  const {\n    open: initialOpen,\n    onToggle\n  } = params;\n\n  // state for open/close state\n  const [open, setOpen] = useState(initialOpen);\n  // ref for dropdown\n  const componentRef = useRef(null);\n  useEffect(() => {\n    setOpen(initialOpen);\n  }, [initialOpen]); // reset state if open prop changes\n\n  const onClickOutside = useCallback(e => {\n    var _componentRef$current;\n    if (open && !(componentRef != null && (_componentRef$current = componentRef.current) != null && _componentRef$current.contains(e.target))) {\n      if (typeof onToggle === 'function') onToggle(false);\n      setOpen(false);\n    }\n  }, [setOpen, onToggle, open]);\n  useEffect(() => {\n    window.addEventListener('pointerdown', onClickOutside);\n    return () => window.removeEventListener('pointerdown', onClickOutside);\n  }, [onClickOutside]); // listener for when user clicks outside dropdown\n\n  function toggleDropdown() {\n    if (typeof onToggle === 'function') onToggle(!open);\n    setOpen(!open);\n  }\n  function openDropdown() {\n    onToggle(open);\n    setOpen(true);\n  }\n  function closeDropdown() {\n    onToggle(false);\n    setOpen(false);\n  }\n  return {\n    open,\n    setOpen,\n    componentRef,\n    openDropdown,\n    closeDropdown,\n    toggleDropdown\n  };\n}\n\nexport { useDropdownState as default };\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;;AAEhE;AACA;AACA;AACA;AACA;;AAEA,SAASC,gBAAgBA,CAACC,MAAM,GAAG,CAAC,CAAC,EAAE;EACrC,MAAM;IACJC,IAAI,EAAEC,WAAW;IACjBC;EACF,CAAC,GAAGH,MAAM;;EAEV;EACA,MAAM,CAACC,IAAI,EAAEG,OAAO,CAAC,GAAGT,QAAQ,CAACO,WAAW,CAAC;EAC7C;EACA,MAAMG,YAAY,GAAGT,MAAM,CAAC,IAAI,CAAC;EACjCC,SAAS,CAAC,MAAM;IACdO,OAAO,CAACF,WAAW,CAAC;EACtB,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB,MAAMI,cAAc,GAAGR,WAAW,CAACS,CAAC,IAAI;IACtC,IAAIC,qBAAqB;IACzB,IAAIP,IAAI,IAAI,EAAEI,YAAY,IAAI,IAAI,IAAI,CAACG,qBAAqB,GAAGH,YAAY,CAACI,OAAO,KAAK,IAAI,IAAID,qBAAqB,CAACE,QAAQ,CAACH,CAAC,CAACI,MAAM,CAAC,CAAC,EAAE;MACzI,IAAI,OAAOR,QAAQ,KAAK,UAAU,EAAEA,QAAQ,CAAC,KAAK,CAAC;MACnDC,OAAO,CAAC,KAAK,CAAC;IAChB;EACF,CAAC,EAAE,CAACA,OAAO,EAAED,QAAQ,EAAEF,IAAI,CAAC,CAAC;EAC7BJ,SAAS,CAAC,MAAM;IACde,MAAM,CAACC,gBAAgB,CAAC,aAAa,EAAEP,cAAc,CAAC;IACtD,OAAO,MAAMM,MAAM,CAACE,mBAAmB,CAAC,aAAa,EAAER,cAAc,CAAC;EACxE,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEtB,SAASS,cAAcA,CAAA,EAAG;IACxB,IAAI,OAAOZ,QAAQ,KAAK,UAAU,EAAEA,QAAQ,CAAC,CAACF,IAAI,CAAC;IACnDG,OAAO,CAAC,CAACH,IAAI,CAAC;EAChB;EACA,SAASe,YAAYA,CAAA,EAAG;IACtBb,QAAQ,CAACF,IAAI,CAAC;IACdG,OAAO,CAAC,IAAI,CAAC;EACf;EACA,SAASa,aAAaA,CAAA,EAAG;IACvBd,QAAQ,CAAC,KAAK,CAAC;IACfC,OAAO,CAAC,KAAK,CAAC;EAChB;EACA,OAAO;IACLH,IAAI;IACJG,OAAO;IACPC,YAAY;IACZW,YAAY;IACZC,aAAa;IACbF;EACF,CAAC;AACH;AAEA,SAAShB,gBAAgB,IAAImB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}