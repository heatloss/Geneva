{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes } from './spacing-59630a80.js';\nimport { T as Typography } from './Typography-7ee33996.js';\nimport { G as Group } from './Group-3717a816.js';\nconst labelProps = {\n  top: {\n    direction: 'column',\n    gap: 'xs',\n    align: 'initial'\n  },\n  bottom: {\n    direction: 'column-reverse',\n    gap: 'xs',\n    align: 'initial'\n  },\n  left: {\n    direction: 'row',\n    gap: 'sm',\n    valign: 'center',\n    align: 'initial',\n    wrap: false\n  },\n  right: {\n    direction: 'row-reverse',\n    gap: 'sm',\n    align: 'end',\n    valign: 'center',\n    wrap: false\n  }\n};\nconst typographyProps = {\n  top: {\n    size: 'sm',\n    weight: 'bold'\n  },\n  bottom: {\n    size: 'sm',\n    weight: 'bold'\n  },\n  left: {\n    size: 'md'\n  },\n  right: {\n    size: 'md'\n  }\n};\nfunction FormLabel({\n  className,\n  children,\n  label,\n  labelPosition,\n  margin,\n  fullWidth,\n  required,\n  wrap,\n  ...otherProps\n}) {\n  let cssClasses = ['st_label', `st_label--${labelPosition}`];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  if (fullWidth) cssClasses.push('st_label--fullWidth');\n  return /*#__PURE__*/(\n    /* eslint-disable-next-line jsx-a11y/label-has-associated-control */\n    React.createElement(Group, _extends({\n      componentEl: \"label\"\n    }, labelProps[labelPosition], {\n      className: cssClasses.join(' ')\n    }, otherProps), \" \", /*#__PURE__*/React.createElement(Typography, _extends({}, typographyProps[labelPosition], {\n      whiteSpace: wrap === false ? 'nowrap' : null\n    }), label, required && /*#__PURE__*/React.createElement(Typography, {\n      color: \"lava\",\n      inline: true\n    }, \" *\")), children)\n  );\n}\nFormLabel.propTypes = {\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** what to display as the label content */\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n  /** position of label relative to input */\n  labelPosition: PropTypes.oneOf(['top', 'left', 'right', 'bottom']),\n  /** margin for label, if any */\n  margin: marginPropTypes,\n  /** whether label should take up all available space */\n  fullWidth: PropTypes.bool,\n  /** whether this is for a required input, will add a visual marker to the label */\n  required: PropTypes.bool,\n  /** whether to allow text to wrap or force to always be on one line */\n  wrap: PropTypes.bool\n};\nFormLabel.defaultProps = {\n  className: null,\n  labelPosition: 'top',\n  margin: null,\n  fullWidth: false,\n  required: false,\n  wrap: false\n};\nexport { FormLabel as F };","map":{"version":3,"names":["_extends","React","PropTypes","a","addClassNames","c","classNamePropTypes","addSpacingClasses","m","marginPropTypes","T","Typography","G","Group","labelProps","top","direction","gap","align","bottom","left","valign","wrap","right","typographyProps","size","weight","FormLabel","className","children","label","labelPosition","margin","fullWidth","required","otherProps","cssClasses","push","createElement","componentEl","join","whiteSpace","color","inline","propTypes","oneOfType","string","node","isRequired","oneOf","bool","defaultProps","F"],"sources":["/Users/mike/node_modules/@screentone/core/es/FormLabel-7985b336.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes } from './spacing-59630a80.js';\nimport { T as Typography } from './Typography-7ee33996.js';\nimport { G as Group } from './Group-3717a816.js';\n\nconst labelProps = {\n  top: {\n    direction: 'column',\n    gap: 'xs',\n    align: 'initial'\n  },\n  bottom: {\n    direction: 'column-reverse',\n    gap: 'xs',\n    align: 'initial'\n  },\n  left: {\n    direction: 'row',\n    gap: 'sm',\n    valign: 'center',\n    align: 'initial',\n    wrap: false\n  },\n  right: {\n    direction: 'row-reverse',\n    gap: 'sm',\n    align: 'end',\n    valign: 'center',\n    wrap: false\n  }\n};\nconst typographyProps = {\n  top: {\n    size: 'sm',\n    weight: 'bold'\n  },\n  bottom: {\n    size: 'sm',\n    weight: 'bold'\n  },\n  left: {\n    size: 'md'\n  },\n  right: {\n    size: 'md'\n  }\n};\nfunction FormLabel({\n  className,\n  children,\n  label,\n  labelPosition,\n  margin,\n  fullWidth,\n  required,\n  wrap,\n  ...otherProps\n}) {\n  let cssClasses = ['st_label', `st_label--${labelPosition}`];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  if (fullWidth) cssClasses.push('st_label--fullWidth');\n  return (\n    /*#__PURE__*/\n    /* eslint-disable-next-line jsx-a11y/label-has-associated-control */\n    React.createElement(Group, _extends({\n      componentEl: \"label\"\n    }, labelProps[labelPosition], {\n      className: cssClasses.join(' ')\n    }, otherProps), \" \", /*#__PURE__*/React.createElement(Typography, _extends({}, typographyProps[labelPosition], {\n      whiteSpace: wrap === false ? 'nowrap' : null\n    }), label, required && /*#__PURE__*/React.createElement(Typography, {\n      color: \"lava\",\n      inline: true\n    }, \" *\")), children)\n  );\n}\nFormLabel.propTypes = {\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** what to display as the label content */\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n  /** position of label relative to input */\n  labelPosition: PropTypes.oneOf(['top', 'left', 'right', 'bottom']),\n  /** margin for label, if any */\n  margin: marginPropTypes,\n  /** whether label should take up all available space */\n  fullWidth: PropTypes.bool,\n  /** whether this is for a required input, will add a visual marker to the label */\n  required: PropTypes.bool,\n  /** whether to allow text to wrap or force to always be on one line */\n  wrap: PropTypes.bool\n};\nFormLabel.defaultProps = {\n  className: null,\n  labelPosition: 'top',\n  margin: null,\n  fullWidth: false,\n  required: false,\n  wrap: false\n};\n\nexport { FormLabel as F };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}