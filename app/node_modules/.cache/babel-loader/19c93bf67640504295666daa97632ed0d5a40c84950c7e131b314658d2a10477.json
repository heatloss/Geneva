{"ast":null,"code":"import { useRef, useState, useCallback, useEffect } from 'react';\nimport { d as disableScroll, e as enableScroll } from './body-583bcd76.js';\n\n/**\nSidebar Hooks, like the file name says\nHandles management of open/close state\nAdding/removing CSS classes to body/html\nand returns CSS classes to put on the page content\nfor cases where the sidebar opening/closing needs to affect\nthe position of the page content\n*/\n\n// return css classes to attach to body element\nconst getContentClasses = ({\n  type: localType,\n  status: localStatus,\n  position: localPosition\n}) => ['st_sidebar__page', `st_sidebar__page--${localType}`, `st_sidebar__page--${localStatus}`, `st_sidebar__page--${localPosition}`];\nfunction useSidebarState({\n  status: initialStatus,\n  type: initialType,\n  position: initialPosition\n} = {}) {\n  const bodyElem = useRef();\n  const htmlElem = useRef();\n  const sidebarRef = useRef();\n  const [status, setStatus] = useState(initialStatus || 'open');\n  const [type, setType] = useState(initialType || 'permanent');\n  const [position, setPosition] = useState(initialPosition || 'left');\n  const [contentClasses, setContentClasses] = useState(getContentClasses({\n    type,\n    status: initialStatus,\n    position: initialPosition\n  }));\n  const afterOpen = useCallback(() => {\n    setStatus('open');\n    setContentClasses(getContentClasses({\n      type,\n      status: 'open',\n      position\n    }));\n    if (sidebarRef.current) {\n      sidebarRef.current.removeEventListener('transitionend', afterOpen);\n    }\n  }, [type, position]);\n  const afterClose = useCallback(() => {\n    setStatus('closed');\n    setContentClasses(getContentClasses({\n      type,\n      status: 'closed',\n      position\n    }));\n    if (sidebarRef.current) {\n      sidebarRef.current.removeEventListener('transitionend', afterClose);\n    }\n  }, [type, position]);\n  const afterCollapse = useCallback(() => {\n    setStatus('collapsed');\n    setContentClasses(getContentClasses({\n      type,\n      status: 'collapsed',\n      position\n    }));\n    if (sidebarRef.current) {\n      sidebarRef.current.removeEventListener('transitionend', afterCollapse);\n    }\n  }, [type, position]);\n  const clearTransitionListeners = useCallback(() => {\n    if (sidebarRef.current) {\n      sidebarRef.current.removeEventListener('transitionend', afterOpen);\n      sidebarRef.current.removeEventListener('transitionend', afterClose);\n      sidebarRef.current.removeEventListener('transitionend', afterCollapse);\n    }\n  }, [sidebarRef, afterClose, afterOpen, afterCollapse]);\n  const openSidebar = useCallback(({\n    immediate = false\n  } = {}) => {\n    if (type === 'push') {\n      if (bodyElem && bodyElem.current) {\n        disableScroll(bodyElem.current);\n      }\n      if (htmlElem && htmlElem.current) {\n        disableScroll(htmlElem.current);\n      }\n    }\n    if (type === 'permanent' || immediate) {\n      afterOpen();\n    } else {\n      setContentClasses(getContentClasses({\n        type,\n        status: 'opening',\n        position\n      }));\n      if (sidebarRef.current) {\n        clearTransitionListeners();\n        sidebarRef.current.addEventListener('transitionend', afterOpen);\n      }\n      setStatus('opening');\n    }\n  }, [setStatus, type, clearTransitionListeners, afterOpen, position]);\n  const closeSidebar = useCallback(({\n    immediate = false\n  } = {}) => {\n    if (type === 'push') {\n      if (bodyElem && bodyElem.current) {\n        enableScroll(bodyElem.current);\n      }\n      if (htmlElem && htmlElem.current) {\n        enableScroll(htmlElem.current);\n      }\n    }\n    if (type === 'permanent' || immediate) {\n      afterClose();\n    } else {\n      setStatus('closing');\n      setContentClasses(getContentClasses({\n        type,\n        status: 'closing',\n        position\n      }));\n      if (sidebarRef.current) {\n        clearTransitionListeners();\n        sidebarRef.current.addEventListener('transitionend', afterClose);\n      }\n    }\n  }, [setStatus, type, clearTransitionListeners, afterClose, position]);\n  const collapseSidebar = useCallback(({\n    immediate = false\n  } = {}) => {\n    if (type === 'push') {\n      if (bodyElem && bodyElem.current) {\n        disableScroll(bodyElem.current);\n      }\n      if (htmlElem && htmlElem.current) {\n        disableScroll(htmlElem.current);\n      }\n    }\n    if (type === 'permanent' || immediate) {\n      afterCollapse();\n    } else {\n      setStatus('collapsing');\n      setContentClasses(getContentClasses({\n        type,\n        status: 'collapsing',\n        position\n      }));\n      if (sidebarRef.current) {\n        clearTransitionListeners();\n        sidebarRef.current.addEventListener('transitionend', afterCollapse);\n      }\n    }\n  }, [setStatus, type, clearTransitionListeners, afterCollapse, position]);\n  useEffect(() => {\n    bodyElem.current = document.body;\n    htmlElem.current = document.documentElement;\n    switch (initialStatus) {\n      case 'closed':\n        closeSidebar({\n          immediate: true\n        });\n        break;\n      case 'collapsed':\n        collapseSidebar({\n          immediate: true\n        });\n        break;\n      default:\n        openSidebar({\n          immediate: true\n        });\n    }\n\n    // when component unmounts, put body/html tags back the way they were\n    // otherwise we can end up with a page \"stuck\" with no scrollbars\n    return function cleanup() {\n      if (bodyElem && bodyElem.current) {\n        enableScroll(bodyElem.current);\n      }\n      if (htmlElem && htmlElem.current) {\n        enableScroll(htmlElem.current);\n      }\n    };\n  }, [initialStatus, openSidebar, closeSidebar, collapseSidebar]);\n  return {\n    status,\n    openSidebar,\n    closeSidebar,\n    collapseSidebar,\n    sidebarRef,\n    contentClasses,\n    type,\n    setType,\n    setPosition,\n    sidebarProps: {\n      status,\n      componentRef: sidebarRef,\n      type\n    },\n    pageProps: {\n      status,\n      type,\n      position\n    },\n    contentProps: {\n      className: contentClasses.join(' ')\n    }\n  };\n}\nexport { useSidebarState as default, getContentClasses };","map":{"version":3,"names":["useRef","useState","useCallback","useEffect","d","disableScroll","e","enableScroll","getContentClasses","type","localType","status","localStatus","position","localPosition","useSidebarState","initialStatus","initialType","initialPosition","bodyElem","htmlElem","sidebarRef","setStatus","setType","setPosition","contentClasses","setContentClasses","afterOpen","current","removeEventListener","afterClose","afterCollapse","clearTransitionListeners","openSidebar","immediate","addEventListener","closeSidebar","collapseSidebar","document","body","documentElement","cleanup","sidebarProps","componentRef","pageProps","contentProps","className","join","default"],"sources":["/Users/mike/node_modules/@screentone/core/es/useSidebarState.js"],"sourcesContent":["import { useRef, useState, useCallback, useEffect } from 'react';\nimport { d as disableScroll, e as enableScroll } from './body-583bcd76.js';\n\n/**\nSidebar Hooks, like the file name says\nHandles management of open/close state\nAdding/removing CSS classes to body/html\nand returns CSS classes to put on the page content\nfor cases where the sidebar opening/closing needs to affect\nthe position of the page content\n*/\n\n// return css classes to attach to body element\nconst getContentClasses = ({\n  type: localType,\n  status: localStatus,\n  position: localPosition\n}) => ['st_sidebar__page', `st_sidebar__page--${localType}`, `st_sidebar__page--${localStatus}`, `st_sidebar__page--${localPosition}`];\nfunction useSidebarState({\n  status: initialStatus,\n  type: initialType,\n  position: initialPosition\n} = {}) {\n  const bodyElem = useRef();\n  const htmlElem = useRef();\n  const sidebarRef = useRef();\n  const [status, setStatus] = useState(initialStatus || 'open');\n  const [type, setType] = useState(initialType || 'permanent');\n  const [position, setPosition] = useState(initialPosition || 'left');\n  const [contentClasses, setContentClasses] = useState(getContentClasses({\n    type,\n    status: initialStatus,\n    position: initialPosition\n  }));\n  const afterOpen = useCallback(() => {\n    setStatus('open');\n    setContentClasses(getContentClasses({\n      type,\n      status: 'open',\n      position\n    }));\n    if (sidebarRef.current) {\n      sidebarRef.current.removeEventListener('transitionend', afterOpen);\n    }\n  }, [type, position]);\n  const afterClose = useCallback(() => {\n    setStatus('closed');\n    setContentClasses(getContentClasses({\n      type,\n      status: 'closed',\n      position\n    }));\n    if (sidebarRef.current) {\n      sidebarRef.current.removeEventListener('transitionend', afterClose);\n    }\n  }, [type, position]);\n  const afterCollapse = useCallback(() => {\n    setStatus('collapsed');\n    setContentClasses(getContentClasses({\n      type,\n      status: 'collapsed',\n      position\n    }));\n    if (sidebarRef.current) {\n      sidebarRef.current.removeEventListener('transitionend', afterCollapse);\n    }\n  }, [type, position]);\n  const clearTransitionListeners = useCallback(() => {\n    if (sidebarRef.current) {\n      sidebarRef.current.removeEventListener('transitionend', afterOpen);\n      sidebarRef.current.removeEventListener('transitionend', afterClose);\n      sidebarRef.current.removeEventListener('transitionend', afterCollapse);\n    }\n  }, [sidebarRef, afterClose, afterOpen, afterCollapse]);\n  const openSidebar = useCallback(({\n    immediate = false\n  } = {}) => {\n    if (type === 'push') {\n      if (bodyElem && bodyElem.current) {\n        disableScroll(bodyElem.current);\n      }\n      if (htmlElem && htmlElem.current) {\n        disableScroll(htmlElem.current);\n      }\n    }\n    if (type === 'permanent' || immediate) {\n      afterOpen();\n    } else {\n      setContentClasses(getContentClasses({\n        type,\n        status: 'opening',\n        position\n      }));\n      if (sidebarRef.current) {\n        clearTransitionListeners();\n        sidebarRef.current.addEventListener('transitionend', afterOpen);\n      }\n      setStatus('opening');\n    }\n  }, [setStatus, type, clearTransitionListeners, afterOpen, position]);\n  const closeSidebar = useCallback(({\n    immediate = false\n  } = {}) => {\n    if (type === 'push') {\n      if (bodyElem && bodyElem.current) {\n        enableScroll(bodyElem.current);\n      }\n      if (htmlElem && htmlElem.current) {\n        enableScroll(htmlElem.current);\n      }\n    }\n    if (type === 'permanent' || immediate) {\n      afterClose();\n    } else {\n      setStatus('closing');\n      setContentClasses(getContentClasses({\n        type,\n        status: 'closing',\n        position\n      }));\n      if (sidebarRef.current) {\n        clearTransitionListeners();\n        sidebarRef.current.addEventListener('transitionend', afterClose);\n      }\n    }\n  }, [setStatus, type, clearTransitionListeners, afterClose, position]);\n  const collapseSidebar = useCallback(({\n    immediate = false\n  } = {}) => {\n    if (type === 'push') {\n      if (bodyElem && bodyElem.current) {\n        disableScroll(bodyElem.current);\n      }\n      if (htmlElem && htmlElem.current) {\n        disableScroll(htmlElem.current);\n      }\n    }\n    if (type === 'permanent' || immediate) {\n      afterCollapse();\n    } else {\n      setStatus('collapsing');\n      setContentClasses(getContentClasses({\n        type,\n        status: 'collapsing',\n        position\n      }));\n      if (sidebarRef.current) {\n        clearTransitionListeners();\n        sidebarRef.current.addEventListener('transitionend', afterCollapse);\n      }\n    }\n  }, [setStatus, type, clearTransitionListeners, afterCollapse, position]);\n  useEffect(() => {\n    bodyElem.current = document.body;\n    htmlElem.current = document.documentElement;\n    switch (initialStatus) {\n      case 'closed':\n        closeSidebar({\n          immediate: true\n        });\n        break;\n      case 'collapsed':\n        collapseSidebar({\n          immediate: true\n        });\n        break;\n      default:\n        openSidebar({\n          immediate: true\n        });\n    }\n\n    // when component unmounts, put body/html tags back the way they were\n    // otherwise we can end up with a page \"stuck\" with no scrollbars\n    return function cleanup() {\n      if (bodyElem && bodyElem.current) {\n        enableScroll(bodyElem.current);\n      }\n      if (htmlElem && htmlElem.current) {\n        enableScroll(htmlElem.current);\n      }\n    };\n  }, [initialStatus, openSidebar, closeSidebar, collapseSidebar]);\n  return {\n    status,\n    openSidebar,\n    closeSidebar,\n    collapseSidebar,\n    sidebarRef,\n    contentClasses,\n    type,\n    setType,\n    setPosition,\n    sidebarProps: {\n      status,\n      componentRef: sidebarRef,\n      type\n    },\n    pageProps: {\n      status,\n      type,\n      position\n    },\n    contentProps: {\n      className: contentClasses.join(' ')\n    }\n  };\n}\n\nexport { useSidebarState as default, getContentClasses };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}