{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { b as breakpoints, M as MediaQuery } from './breakpoints-422e3f7b.js';\nfunction Responsive({\n  xs,\n  sm,\n  md,\n  lg,\n  children\n}) {\n  // don't ever render\n  if (!xs && !sm && !md && !lg) return null;\n\n  // always render\n  if (xs && lg && !sm && !md || xs && lg && sm && md) return children;\n\n  // if there are at least 2 breakpoints, find smallest and largest\n  const smallest = xs && 'xs' || sm && 'sm' || md && 'md' || lg && 'lg';\n  const largest = lg && 'lg' || md && 'md' || sm && 'sm' || xs && 'xs';\n  const mediaQueryProps = {};\n\n  // set minWidth/maxWidth based on which breakpoints were passed in\n  if (smallest && largest && smallest !== largest) {\n    if (breakpoints[smallest] && breakpoints[smallest].min) {\n      mediaQueryProps.minWidth = breakpoints[smallest].min;\n    }\n    if (breakpoints[largest] && breakpoints[largest].max) {\n      mediaQueryProps.maxWidth = breakpoints[largest].max;\n    }\n  } else if (smallest) {\n    if (breakpoints[smallest] && breakpoints[smallest].max) {\n      mediaQueryProps.maxWidth = breakpoints[smallest].max;\n    }\n    if (breakpoints[smallest] && breakpoints[smallest].min) {\n      mediaQueryProps.minWidth = breakpoints[smallest].min;\n    }\n  }\n  return /*#__PURE__*/React.createElement(MediaQuery, mediaQueryProps, children);\n}\nResponsive.defaultProps = {\n  xs: false,\n  sm: false,\n  md: false,\n  lg: false\n};\nResponsive.propTypes = {\n  /** Whether to display in XS breakpoint */\n  xs: PropTypes.bool,\n  /** Whether to display in SM breakpoint */\n  sm: PropTypes.bool,\n  /** Whether to display in MD breakpoint */\n  md: PropTypes.bool,\n  /** Whether to display in LG breakpoint */\n  lg: PropTypes.bool,\n  /** content to render, can be function if we need access to breakpoint  */\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.node]).isRequired\n};\nexport { Responsive as R };","map":{"version":3,"names":["React","PropTypes","b","breakpoints","M","MediaQuery","Responsive","xs","sm","md","lg","children","smallest","largest","mediaQueryProps","min","minWidth","max","maxWidth","createElement","defaultProps","propTypes","bool","oneOfType","func","string","node","isRequired","R"],"sources":["/Users/mike/node_modules/@screentone/core/es/Responsive-e0079dd9.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { b as breakpoints, M as MediaQuery } from './breakpoints-422e3f7b.js';\n\nfunction Responsive({\n  xs,\n  sm,\n  md,\n  lg,\n  children\n}) {\n  // don't ever render\n  if (!xs && !sm && !md && !lg) return null;\n\n  // always render\n  if (xs && lg && !sm && !md || xs && lg && sm && md) return children;\n\n  // if there are at least 2 breakpoints, find smallest and largest\n  const smallest = xs && 'xs' || sm && 'sm' || md && 'md' || lg && 'lg';\n  const largest = lg && 'lg' || md && 'md' || sm && 'sm' || xs && 'xs';\n  const mediaQueryProps = {};\n\n  // set minWidth/maxWidth based on which breakpoints were passed in\n  if (smallest && largest && smallest !== largest) {\n    if (breakpoints[smallest] && breakpoints[smallest].min) {\n      mediaQueryProps.minWidth = breakpoints[smallest].min;\n    }\n    if (breakpoints[largest] && breakpoints[largest].max) {\n      mediaQueryProps.maxWidth = breakpoints[largest].max;\n    }\n  } else if (smallest) {\n    if (breakpoints[smallest] && breakpoints[smallest].max) {\n      mediaQueryProps.maxWidth = breakpoints[smallest].max;\n    }\n    if (breakpoints[smallest] && breakpoints[smallest].min) {\n      mediaQueryProps.minWidth = breakpoints[smallest].min;\n    }\n  }\n  return /*#__PURE__*/React.createElement(MediaQuery, mediaQueryProps, children);\n}\nResponsive.defaultProps = {\n  xs: false,\n  sm: false,\n  md: false,\n  lg: false\n};\nResponsive.propTypes = {\n  /** Whether to display in XS breakpoint */\n  xs: PropTypes.bool,\n  /** Whether to display in SM breakpoint */\n  sm: PropTypes.bool,\n  /** Whether to display in MD breakpoint */\n  md: PropTypes.bool,\n  /** Whether to display in LG breakpoint */\n  lg: PropTypes.bool,\n  /** content to render, can be function if we need access to breakpoint  */\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.node]).isRequired\n};\n\nexport { Responsive as R };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,UAAU,QAAQ,2BAA2B;AAE7E,SAASC,UAAUA,CAAC;EAClBC,EAAE;EACFC,EAAE;EACFC,EAAE;EACFC,EAAE;EACFC;AACF,CAAC,EAAE;EACD;EACA,IAAI,CAACJ,EAAE,IAAI,CAACC,EAAE,IAAI,CAACC,EAAE,IAAI,CAACC,EAAE,EAAE,OAAO,IAAI;;EAEzC;EACA,IAAIH,EAAE,IAAIG,EAAE,IAAI,CAACF,EAAE,IAAI,CAACC,EAAE,IAAIF,EAAE,IAAIG,EAAE,IAAIF,EAAE,IAAIC,EAAE,EAAE,OAAOE,QAAQ;;EAEnE;EACA,MAAMC,QAAQ,GAAGL,EAAE,IAAI,IAAI,IAAIC,EAAE,IAAI,IAAI,IAAIC,EAAE,IAAI,IAAI,IAAIC,EAAE,IAAI,IAAI;EACrE,MAAMG,OAAO,GAAGH,EAAE,IAAI,IAAI,IAAID,EAAE,IAAI,IAAI,IAAID,EAAE,IAAI,IAAI,IAAID,EAAE,IAAI,IAAI;EACpE,MAAMO,eAAe,GAAG,CAAC,CAAC;;EAE1B;EACA,IAAIF,QAAQ,IAAIC,OAAO,IAAID,QAAQ,KAAKC,OAAO,EAAE;IAC/C,IAAIV,WAAW,CAACS,QAAQ,CAAC,IAAIT,WAAW,CAACS,QAAQ,CAAC,CAACG,GAAG,EAAE;MACtDD,eAAe,CAACE,QAAQ,GAAGb,WAAW,CAACS,QAAQ,CAAC,CAACG,GAAG;IACtD;IACA,IAAIZ,WAAW,CAACU,OAAO,CAAC,IAAIV,WAAW,CAACU,OAAO,CAAC,CAACI,GAAG,EAAE;MACpDH,eAAe,CAACI,QAAQ,GAAGf,WAAW,CAACU,OAAO,CAAC,CAACI,GAAG;IACrD;EACF,CAAC,MAAM,IAAIL,QAAQ,EAAE;IACnB,IAAIT,WAAW,CAACS,QAAQ,CAAC,IAAIT,WAAW,CAACS,QAAQ,CAAC,CAACK,GAAG,EAAE;MACtDH,eAAe,CAACI,QAAQ,GAAGf,WAAW,CAACS,QAAQ,CAAC,CAACK,GAAG;IACtD;IACA,IAAId,WAAW,CAACS,QAAQ,CAAC,IAAIT,WAAW,CAACS,QAAQ,CAAC,CAACG,GAAG,EAAE;MACtDD,eAAe,CAACE,QAAQ,GAAGb,WAAW,CAACS,QAAQ,CAAC,CAACG,GAAG;IACtD;EACF;EACA,OAAO,aAAaf,KAAK,CAACmB,aAAa,CAACd,UAAU,EAAES,eAAe,EAAEH,QAAQ,CAAC;AAChF;AACAL,UAAU,CAACc,YAAY,GAAG;EACxBb,EAAE,EAAE,KAAK;EACTC,EAAE,EAAE,KAAK;EACTC,EAAE,EAAE,KAAK;EACTC,EAAE,EAAE;AACN,CAAC;AACDJ,UAAU,CAACe,SAAS,GAAG;EACrB;EACAd,EAAE,EAAEN,SAAS,CAACqB,IAAI;EAClB;EACAd,EAAE,EAAEP,SAAS,CAACqB,IAAI;EAClB;EACAb,EAAE,EAAER,SAAS,CAACqB,IAAI;EAClB;EACAZ,EAAE,EAAET,SAAS,CAACqB,IAAI;EAClB;EACAX,QAAQ,EAAEV,SAAS,CAACsB,SAAS,CAAC,CAACtB,SAAS,CAACuB,IAAI,EAAEvB,SAAS,CAACwB,MAAM,EAAExB,SAAS,CAACyB,IAAI,CAAC,CAAC,CAACC;AACpF,CAAC;AAED,SAASrB,UAAU,IAAIsB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}