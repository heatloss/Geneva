{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { p as props, d as defaults } from './componentEl-eebaee58.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes } from './spacing-59630a80.js';\nimport Icon from './Icon.js';\nimport { B as Button } from './Button-82c175e0.js';\nimport { s as setIcon } from './icons-695fdb0c.js';\n\n/*\nGeneric component for a single toggle item, to be used in the context of Toggle\n*/\nfunction ToggleItem({\n  componentEl,\n  onChange,\n  className,\n  selected,\n  children,\n  disabled,\n  icon,\n  value,\n  ...otherProps\n}) {\n  function localChangeHandler(e) {\n    if (!selected) onChange(value, e);\n  }\n  const cssClasses = ['st_toggleItem'];\n  if (selected) cssClasses.push('st_toggleItem--selected');\n  if (disabled) cssClasses.push('st_toggleItem--disabled');\n  if (className) cssClasses.push(className);\n  const componentProps = {\n    margin: {\n      horizontal: 'xs'\n    }\n  };\n  const iconProps = {};\n  if (selected) {\n    componentProps['aria-selected'] = selected;\n    componentProps.active = true;\n  }\n  if (componentEl === 'button') {\n    componentProps.disabled = disabled;\n  }\n  componentProps.style = {\n    '--st-margin-hor-modifier': '0px'\n  };\n\n  // if this will render as a <button> and there's no explicit button type attribute set\n  if ((componentEl === Button || componentEl === 'button') && !otherProps.type) {\n    componentProps.type = 'button';\n  }\n\n  // conditionally pass margin\n  if (children) iconProps.margin = {\n    right: 'sm'\n  };\n  const toggleIcon = setIcon(Icon, icon, iconProps);\n  return /*#__PURE__*/(\n    // component not complex enough to warrant a React useCallback to silence this error\n    // eslint-disable-next-line react/jsx-no-bind\n    React.createElement(Button, _extends({\n      tertiary: true,\n      componentEl: componentEl,\n      onClick: localChangeHandler,\n      className: cssClasses.join(' ')\n    }, componentProps, otherProps), toggleIcon, children)\n  );\n}\nToggleItem.propTypes = {\n  /** additional CSS classes for outermost element, if any */\n  className: PropTypes.string,\n  /**\n   * callback when tab is clicked, and is not currently selected.\n   * Returns the value and the event by calling `onChange(value, e)`\n   * Used if not defined in parent <Toggle> */\n  onChange: PropTypes.func,\n  /** component or DOM element to use for rendering outermost tag */\n  componentEl: props,\n  /** optional icon. A screentone icon component, e.g. IconStar */\n  icon: PropTypes.any,\n  /** whether tab is currently selected */\n  selected: PropTypes.bool,\n  /** value of tab, useful when tab is clicked */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** whether control is disabled */\n  disabled: PropTypes.bool\n};\n\n// default props\nToggleItem.defaultProps = {\n  className: null,\n  onChange: null,\n  icon: null,\n  componentEl: 'button',\n  selected: false,\n  value: undefined,\n  disabled: false\n};\n\n/*\nGeneric component for Tabs\nAccepts one or more Tab component inside\nDoes not do any state management! See Storybook for examples for state management\n*/\nfunction Toggle({\n  componentEl: Component,\n  className,\n  onChange,\n  children,\n  margin,\n  value,\n  ...otherProps\n}) {\n  let childIndex = 0;\n  const childrenWithProps = React.Children.map(children, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    const childValue = typeof child.props.value === 'undefined' ? childIndex : child.props.value;\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, {\n      selected,\n      onChange,\n      value: childValue\n    });\n  });\n  let cssClasses = ['st_toggle', 'st_border'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), childrenWithProps);\n}\n\n// proptypes definitions\nToggle.propTypes = {\n  /**\n   * event handler when new ToggleItemis selected.\n   * Returns the value and the event by calling `onChange(value, e)`\n   * */\n  onChange: PropTypes.func,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** currently selected Tab, either the index number of the actual value of tab */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\n// default props\nToggle.defaultProps = {\n  onChange: null,\n  className: null,\n  margin: null,\n  componentEl: defaults,\n  value: null\n};\nToggle.Item = ToggleItem;\nexport { Toggle as T };","map":{"version":3,"names":["_extends","PropTypes","React","p","props","d","defaults","a","addClassNames","c","classNamePropTypes","addSpacingClasses","m","marginPropTypes","Icon","B","Button","s","setIcon","ToggleItem","componentEl","onChange","className","selected","children","disabled","icon","value","otherProps","localChangeHandler","e","cssClasses","push","componentProps","margin","horizontal","iconProps","active","style","type","right","toggleIcon","createElement","tertiary","onClick","join","propTypes","string","func","any","bool","oneOfType","number","defaultProps","undefined","Toggle","Component","childIndex","childrenWithProps","Children","map","child","isValidElement","childValue","cloneElement","Item","T"],"sources":["/Users/mike/node_modules/@screentone/core/es/Toggle-aa6a0d6c.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/extends';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { p as props, d as defaults } from './componentEl-eebaee58.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes } from './spacing-59630a80.js';\nimport Icon from './Icon.js';\nimport { B as Button } from './Button-82c175e0.js';\nimport { s as setIcon } from './icons-695fdb0c.js';\n\n/*\nGeneric component for a single toggle item, to be used in the context of Toggle\n*/\nfunction ToggleItem({\n  componentEl,\n  onChange,\n  className,\n  selected,\n  children,\n  disabled,\n  icon,\n  value,\n  ...otherProps\n}) {\n  function localChangeHandler(e) {\n    if (!selected) onChange(value, e);\n  }\n  const cssClasses = ['st_toggleItem'];\n  if (selected) cssClasses.push('st_toggleItem--selected');\n  if (disabled) cssClasses.push('st_toggleItem--disabled');\n  if (className) cssClasses.push(className);\n  const componentProps = {\n    margin: {\n      horizontal: 'xs'\n    }\n  };\n  const iconProps = {};\n  if (selected) {\n    componentProps['aria-selected'] = selected;\n    componentProps.active = true;\n  }\n  if (componentEl === 'button') {\n    componentProps.disabled = disabled;\n  }\n  componentProps.style = {\n    '--st-margin-hor-modifier': '0px'\n  };\n\n  // if this will render as a <button> and there's no explicit button type attribute set\n  if ((componentEl === Button || componentEl === 'button') && !otherProps.type) {\n    componentProps.type = 'button';\n  }\n\n  // conditionally pass margin\n  if (children) iconProps.margin = {\n    right: 'sm'\n  };\n  const toggleIcon = setIcon(Icon, icon, iconProps);\n  return (\n    /*#__PURE__*/\n    // component not complex enough to warrant a React useCallback to silence this error\n    // eslint-disable-next-line react/jsx-no-bind\n    React.createElement(Button, _extends({\n      tertiary: true,\n      componentEl: componentEl,\n      onClick: localChangeHandler,\n      className: cssClasses.join(' ')\n    }, componentProps, otherProps), toggleIcon, children)\n  );\n}\nToggleItem.propTypes = {\n  /** additional CSS classes for outermost element, if any */\n  className: PropTypes.string,\n  /**\n   * callback when tab is clicked, and is not currently selected.\n   * Returns the value and the event by calling `onChange(value, e)`\n   * Used if not defined in parent <Toggle> */\n  onChange: PropTypes.func,\n  /** component or DOM element to use for rendering outermost tag */\n  componentEl: props,\n  /** optional icon. A screentone icon component, e.g. IconStar */\n  icon: PropTypes.any,\n  /** whether tab is currently selected */\n  selected: PropTypes.bool,\n  /** value of tab, useful when tab is clicked */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** whether control is disabled */\n  disabled: PropTypes.bool\n};\n\n// default props\nToggleItem.defaultProps = {\n  className: null,\n  onChange: null,\n  icon: null,\n  componentEl: 'button',\n  selected: false,\n  value: undefined,\n  disabled: false\n};\n\n/*\nGeneric component for Tabs\nAccepts one or more Tab component inside\nDoes not do any state management! See Storybook for examples for state management\n*/\nfunction Toggle({\n  componentEl: Component,\n  className,\n  onChange,\n  children,\n  margin,\n  value,\n  ...otherProps\n}) {\n  let childIndex = 0;\n  const childrenWithProps = React.Children.map(children, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    const childValue = typeof child.props.value === 'undefined' ? childIndex : child.props.value;\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, {\n      selected,\n      onChange,\n      value: childValue\n    });\n  });\n  let cssClasses = ['st_toggle', 'st_border'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), childrenWithProps);\n}\n\n// proptypes definitions\nToggle.propTypes = {\n  /**\n   * event handler when new ToggleItemis selected.\n   * Returns the value and the event by calling `onChange(value, e)`\n   * */\n  onChange: PropTypes.func,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** currently selected Tab, either the index number of the actual value of tab */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\n// default props\nToggle.defaultProps = {\n  onChange: null,\n  className: null,\n  margin: null,\n  componentEl: defaults,\n  value: null\n};\nToggle.Item = ToggleItem;\n\nexport { Toggle as T };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}