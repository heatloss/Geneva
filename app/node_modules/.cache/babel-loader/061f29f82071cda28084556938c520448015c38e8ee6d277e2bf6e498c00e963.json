{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { p as props } from './componentEl-eebaee58.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes, p as paddingPropTypes } from './spacing-59630a80.js';\nimport { s as setIcon } from './icons-695fdb0c.js';\nimport Icon from './Icon.js';\nfunction SideNavSection({\n  componentEl: Component,\n  children,\n  className,\n  label,\n  margin,\n  padding,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidenav__section'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), label && /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"st_sidenav__heading\"\n  }, label), children);\n}\nSideNavSection.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for section, if any */\n  margin: marginPropTypes,\n  /** margin for section, if any */\n  padding: paddingPropTypes,\n  /** optional label for nav section */\n  label: PropTypes.string\n};\nSideNavSection.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: {\n    bottom: 'md'\n  },\n  padding: null,\n  label: null\n};\nSideNavSection.displayName = 'SideNav.Section';\nfunction SideNavItem({\n  componentEl: Component,\n  children,\n  className,\n  active,\n  disabled,\n  icon,\n  wrap,\n  color,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidenav__clickable', `st_sidenav__clickable--color-${color}`];\n  const clickableProps = {};\n  cssClasses = addClassNames(className, cssClasses);\n  if (active) {\n    clickableProps['aria-current'] = 'page';\n    cssClasses.push('st_sidenav__clickable--active');\n  }\n  if (wrap) cssClasses.push('st_sidenav__clickable--wrap');\n  if (disabled) {\n    clickableProps['aria-disabled'] = 'true';\n    cssClasses.push('st_sidenav__clickable--disabled');\n    if (Component === 'button') clickableProps.disabled = true;\n  }\n  const iconProps = {\n    margin: {\n      right: 'sm'\n    },\n    className: 'st_sidenav__icon'\n  };\n  const sideNavIcon = setIcon(Icon, icon, iconProps);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"st_sidenav__item\"\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps, clickableProps), sideNavIcon, children));\n}\nSideNavItem.propTypes = {\n  /** dom element or component to use for clickable element */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** optional icon for token. A screentone icon component, e.g. IconStar */\n  icon: PropTypes.any,\n  /** whether item is active */\n  active: PropTypes.bool,\n  /** whether item is disabled */\n  disabled: PropTypes.bool,\n  /** color of item */\n  color: PropTypes.oneOf(['ink', 'blurple']),\n  /** whether text should wrap if it overflows  */\n  wrap: PropTypes.bool\n};\nSideNavItem.defaultProps = {\n  componentEl: 'a',\n  className: null,\n  icon: null,\n  active: false,\n  disabled: false,\n  color: 'ink',\n  wrap: false\n};\nSideNavItem.displayName = 'SideNav.Item';\n\n/*\noutermost wrapper for grid\n*/\nfunction SideNav({\n  componentEl: Component,\n  className,\n  children,\n  padding,\n  border,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidenav'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    padding,\n    cssClasses\n  });\n  if (border) cssClasses.push('st_sidenav--border');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nSideNav.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** padding for section, if any. Overrides default */\n  padding: paddingPropTypes,\n  /** whether to show a border */\n  border: PropTypes.bool\n};\nSideNav.defaultProps = {\n  componentEl: 'nav',\n  className: null,\n  padding: {\n    vertical: 'sm'\n  },\n  border: true\n};\nSideNav.Section = SideNavSection;\nSideNav.Item = SideNavItem;\nexport { SideNav as S };","map":{"version":3,"names":["_extends","React","PropTypes","p","props","a","addClassNames","c","classNamePropTypes","addSpacingClasses","m","marginPropTypes","paddingPropTypes","s","setIcon","Icon","SideNavSection","componentEl","Component","children","className","label","margin","padding","otherProps","cssClasses","createElement","join","propTypes","string","defaultProps","bottom","displayName","SideNavItem","active","disabled","icon","wrap","color","clickableProps","push","iconProps","right","sideNavIcon","any","bool","oneOf","SideNav","border","vertical","Section","Item","S"],"sources":["/Users/mike/node_modules/@screentone/core/es/SideNav-27c02877.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { p as props } from './componentEl-eebaee58.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes, p as paddingPropTypes } from './spacing-59630a80.js';\nimport { s as setIcon } from './icons-695fdb0c.js';\nimport Icon from './Icon.js';\n\nfunction SideNavSection({\n  componentEl: Component,\n  children,\n  className,\n  label,\n  margin,\n  padding,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidenav__section'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), label && /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"st_sidenav__heading\"\n  }, label), children);\n}\nSideNavSection.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for section, if any */\n  margin: marginPropTypes,\n  /** margin for section, if any */\n  padding: paddingPropTypes,\n  /** optional label for nav section */\n  label: PropTypes.string\n};\nSideNavSection.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: {\n    bottom: 'md'\n  },\n  padding: null,\n  label: null\n};\nSideNavSection.displayName = 'SideNav.Section';\n\nfunction SideNavItem({\n  componentEl: Component,\n  children,\n  className,\n  active,\n  disabled,\n  icon,\n  wrap,\n  color,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidenav__clickable', `st_sidenav__clickable--color-${color}`];\n  const clickableProps = {};\n  cssClasses = addClassNames(className, cssClasses);\n  if (active) {\n    clickableProps['aria-current'] = 'page';\n    cssClasses.push('st_sidenav__clickable--active');\n  }\n  if (wrap) cssClasses.push('st_sidenav__clickable--wrap');\n  if (disabled) {\n    clickableProps['aria-disabled'] = 'true';\n    cssClasses.push('st_sidenav__clickable--disabled');\n    if (Component === 'button') clickableProps.disabled = true;\n  }\n  const iconProps = {\n    margin: {\n      right: 'sm'\n    },\n    className: 'st_sidenav__icon'\n  };\n  const sideNavIcon = setIcon(Icon, icon, iconProps);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"st_sidenav__item\"\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps, clickableProps), sideNavIcon, children));\n}\nSideNavItem.propTypes = {\n  /** dom element or component to use for clickable element */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** optional icon for token. A screentone icon component, e.g. IconStar */\n  icon: PropTypes.any,\n  /** whether item is active */\n  active: PropTypes.bool,\n  /** whether item is disabled */\n  disabled: PropTypes.bool,\n  /** color of item */\n  color: PropTypes.oneOf(['ink', 'blurple']),\n  /** whether text should wrap if it overflows  */\n  wrap: PropTypes.bool\n};\nSideNavItem.defaultProps = {\n  componentEl: 'a',\n  className: null,\n  icon: null,\n  active: false,\n  disabled: false,\n  color: 'ink',\n  wrap: false\n};\nSideNavItem.displayName = 'SideNav.Item';\n\n/*\noutermost wrapper for grid\n*/\nfunction SideNav({\n  componentEl: Component,\n  className,\n  children,\n  padding,\n  border,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidenav'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    padding,\n    cssClasses\n  });\n  if (border) cssClasses.push('st_sidenav--border');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nSideNav.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** padding for section, if any. Overrides default */\n  padding: paddingPropTypes,\n  /** whether to show a border */\n  border: PropTypes.bool\n};\nSideNav.defaultProps = {\n  componentEl: 'nav',\n  className: null,\n  padding: {\n    vertical: 'sm'\n  },\n  border: true\n};\nSideNav.Section = SideNavSection;\nSideNav.Item = SideNavItem;\n\nexport { SideNav as S };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}