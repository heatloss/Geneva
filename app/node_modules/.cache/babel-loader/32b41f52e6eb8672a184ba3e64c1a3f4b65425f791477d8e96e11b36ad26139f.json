{"ast":null,"code":"import PropTypes from 'prop-types';\n\n/*\nutils to handle common logic related to adding spacing between/around components via PropTypes\n*/\nconst sizePropTypes = PropTypes.oneOf(['none', 'xs', 'sm', 'smd', 'md', 'mlg', 'lg', 'xl']);\nfunction generateSpacingPropTypes({\n  denylist = []\n} = {}) {\n  const shape = {\n    all: sizePropTypes,\n    horizontal: sizePropTypes,\n    vertical: sizePropTypes,\n    top: sizePropTypes,\n    right: sizePropTypes,\n    bottom: sizePropTypes,\n    left: sizePropTypes,\n    default: sizePropTypes\n  };\n  denylist.forEach(k => {\n    delete shape[k];\n  });\n  return PropTypes.shape(shape);\n}\nconst marginPropTypes = generateSpacingPropTypes();\nconst verticalMarginPropTypes = generateSpacingPropTypes({\n  denylist: ['all', 'horizontal', 'left', 'right']\n});\nconst paddingPropTypes = generateSpacingPropTypes();\nconst verticalPaddingPropTypes = generateSpacingPropTypes({\n  denylist: ['all', 'horizontal', 'left', 'right']\n});\n\n/**\n * Used when spacing prop includes a \"default\" property\n * Given padding or margin settings\n * adds a default value to any sides where an explicit value was not provided\n *\n * @param {object} settings\n *\n * @returns {object} newSettings\n */\nfunction addDefaultSpacing(settings, value = 'none') {\n  const newSettings = {\n    ...settings\n  };\n  const keys = Object.keys(settings);\n  if (!settings || keys.length === 0) return {\n    all: value\n  };\n  if (keys.includes('all')) return settings;\n  const total = {\n    top: 1,\n    left: 1,\n    right: 1,\n    bottom: 1\n  };\n  keys.forEach(currentValue => {\n    total[currentValue] -= 1;\n    if (currentValue === 'horizontal') {\n      total.left -= 1;\n      total.right -= 1;\n    } else if (currentValue === 'vertical') {\n      total.top -= 1;\n      total.bottom -= 1;\n    }\n  });\n  Object.keys(total).forEach(key => {\n    if (total[key] === 1) {\n      newSettings[key] = value;\n    }\n  });\n  return newSettings;\n}\n\n/**\n * Given the spacing props, returns an array of CSS classes to apply the padding/margin\n * @param {string} prefix The prefix for the CSS class\n * @param {object} settings The margin or padding props\n * @returns {array} array of CSS classes\n */\nfunction getSpacing(prefix, settings) {\n  let finalSettings = {\n    ...settings\n  };\n  if (!finalSettings || !prefix) return null;\n  if (finalSettings.default) {\n    delete finalSettings.default;\n    finalSettings = addDefaultSpacing(finalSettings, settings.default);\n  }\n  const settingsArray = Object.keys(finalSettings);\n  if (settingsArray.length === 0) return null;\n  const sidemap = {\n    top: 'top',\n    left: 'left',\n    right: 'right',\n    bottom: 'bot',\n    horizontal: 'hor',\n    vertical: 'ver'\n  };\n  return settingsArray.map(side => {\n    if (side === 'all') return `${prefix}-${finalSettings[side]}`;\n    return `${prefix}-${sidemap[side]}-${finalSettings[side]}`;\n  });\n}\n\n/*\nGiven margn PropTypes, generates the CSS classes to use\n*/\nfunction getMargin(margin) {\n  return getSpacing('st_m', margin);\n}\nfunction getPadding(padding) {\n  return getSpacing('st_p', padding);\n}\n\n/**\n * Given an object with props from user, returns a new object that removes\n * all properties that are disallowed\n *\n * @param {object} settings the padding/margin props provided to component\n * @param {array} denylist array of strings with name of disallowed props\n */\nfunction sanitizeProps(settings, denylist = []) {\n  const newSettings = {\n    ...settings\n  };\n  Object.keys(settings).forEach(k => {\n    if (denylist.includes(k)) delete newSettings[k];\n  });\n  return newSettings;\n}\n\n/*\ngiven array of original css class arrays\nand margin PropTypes\nreturn new array with margin classes, or the original aray\n*/\nfunction addMarginClasses(margin, cssClasses = [], denylist = []) {\n  if (!margin || Object.keys(margin).length === 0) return cssClasses;\n  return (cssClasses || []).concat(getMargin(sanitizeProps(margin, denylist) || []));\n}\n\n/*\ngiven array of original css class arrays\nand padding PropTypes\nreturn new array with margin classes, or the original aray\n*/\nfunction addPaddingClasses(padding, cssClasses = [], denylist = []) {\n  if (!padding || Object.keys(padding).length === 0) return cssClasses;\n  return (cssClasses || []).concat(getPadding(sanitizeProps(padding, denylist)) || []);\n}\n\n/*\ngiven margin or padding PropTypes\nadd css classnames\nand return new array of css classes\n*/\nfunction addSpacingClasses({\n  padding = {},\n  margin = {},\n  cssClasses = [],\n  denylistPadding = [],\n  denylistMargin = []\n}) {\n  let newClasses = cssClasses;\n  newClasses = addPaddingClasses(padding, newClasses, denylistPadding);\n  newClasses = addMarginClasses(margin, newClasses, denylistMargin);\n  return newClasses;\n}\nvar spacing = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  addDefaultSpacing: addDefaultSpacing,\n  sizePropTypes: sizePropTypes,\n  marginPropTypes: marginPropTypes,\n  paddingPropTypes: paddingPropTypes,\n  getMargin: getMargin,\n  getPadding: getPadding,\n  addMarginClasses: addMarginClasses,\n  addPaddingClasses: addPaddingClasses,\n  verticalMarginPropTypes: verticalMarginPropTypes,\n  verticalPaddingPropTypes: verticalPaddingPropTypes,\n  addSpacingClasses: addSpacingClasses\n});\nexport { addSpacingClasses as a, addMarginClasses as b, sizePropTypes as c, verticalPaddingPropTypes as d, getPadding as g, marginPropTypes as m, paddingPropTypes as p, spacing as s, verticalMarginPropTypes as v };","map":{"version":3,"names":["PropTypes","sizePropTypes","oneOf","generateSpacingPropTypes","denylist","shape","all","horizontal","vertical","top","right","bottom","left","default","forEach","k","marginPropTypes","verticalMarginPropTypes","paddingPropTypes","verticalPaddingPropTypes","addDefaultSpacing","settings","value","newSettings","keys","Object","length","includes","total","currentValue","key","getSpacing","prefix","finalSettings","settingsArray","sidemap","map","side","getMargin","margin","getPadding","padding","sanitizeProps","addMarginClasses","cssClasses","concat","addPaddingClasses","addSpacingClasses","denylistPadding","denylistMargin","newClasses","spacing","freeze","__proto__","a","b","c","d","g","m","p","s","v"],"sources":["/Users/mike/node_modules/@screentone/core/es/spacing-59630a80.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n/*\nutils to handle common logic related to adding spacing between/around components via PropTypes\n*/\nconst sizePropTypes = PropTypes.oneOf(['none', 'xs', 'sm', 'smd', 'md', 'mlg', 'lg', 'xl']);\nfunction generateSpacingPropTypes({\n  denylist = []\n} = {}) {\n  const shape = {\n    all: sizePropTypes,\n    horizontal: sizePropTypes,\n    vertical: sizePropTypes,\n    top: sizePropTypes,\n    right: sizePropTypes,\n    bottom: sizePropTypes,\n    left: sizePropTypes,\n    default: sizePropTypes\n  };\n  denylist.forEach(k => {\n    delete shape[k];\n  });\n  return PropTypes.shape(shape);\n}\nconst marginPropTypes = generateSpacingPropTypes();\nconst verticalMarginPropTypes = generateSpacingPropTypes({\n  denylist: ['all', 'horizontal', 'left', 'right']\n});\nconst paddingPropTypes = generateSpacingPropTypes();\nconst verticalPaddingPropTypes = generateSpacingPropTypes({\n  denylist: ['all', 'horizontal', 'left', 'right']\n});\n\n/**\n * Used when spacing prop includes a \"default\" property\n * Given padding or margin settings\n * adds a default value to any sides where an explicit value was not provided\n *\n * @param {object} settings\n *\n * @returns {object} newSettings\n */\nfunction addDefaultSpacing(settings, value = 'none') {\n  const newSettings = {\n    ...settings\n  };\n  const keys = Object.keys(settings);\n  if (!settings || keys.length === 0) return {\n    all: value\n  };\n  if (keys.includes('all')) return settings;\n  const total = {\n    top: 1,\n    left: 1,\n    right: 1,\n    bottom: 1\n  };\n  keys.forEach(currentValue => {\n    total[currentValue] -= 1;\n    if (currentValue === 'horizontal') {\n      total.left -= 1;\n      total.right -= 1;\n    } else if (currentValue === 'vertical') {\n      total.top -= 1;\n      total.bottom -= 1;\n    }\n  });\n  Object.keys(total).forEach(key => {\n    if (total[key] === 1) {\n      newSettings[key] = value;\n    }\n  });\n  return newSettings;\n}\n\n/**\n * Given the spacing props, returns an array of CSS classes to apply the padding/margin\n * @param {string} prefix The prefix for the CSS class\n * @param {object} settings The margin or padding props\n * @returns {array} array of CSS classes\n */\nfunction getSpacing(prefix, settings) {\n  let finalSettings = {\n    ...settings\n  };\n  if (!finalSettings || !prefix) return null;\n  if (finalSettings.default) {\n    delete finalSettings.default;\n    finalSettings = addDefaultSpacing(finalSettings, settings.default);\n  }\n  const settingsArray = Object.keys(finalSettings);\n  if (settingsArray.length === 0) return null;\n  const sidemap = {\n    top: 'top',\n    left: 'left',\n    right: 'right',\n    bottom: 'bot',\n    horizontal: 'hor',\n    vertical: 'ver'\n  };\n  return settingsArray.map(side => {\n    if (side === 'all') return `${prefix}-${finalSettings[side]}`;\n    return `${prefix}-${sidemap[side]}-${finalSettings[side]}`;\n  });\n}\n\n/*\nGiven margn PropTypes, generates the CSS classes to use\n*/\nfunction getMargin(margin) {\n  return getSpacing('st_m', margin);\n}\nfunction getPadding(padding) {\n  return getSpacing('st_p', padding);\n}\n\n/**\n * Given an object with props from user, returns a new object that removes\n * all properties that are disallowed\n *\n * @param {object} settings the padding/margin props provided to component\n * @param {array} denylist array of strings with name of disallowed props\n */\nfunction sanitizeProps(settings, denylist = []) {\n  const newSettings = {\n    ...settings\n  };\n  Object.keys(settings).forEach(k => {\n    if (denylist.includes(k)) delete newSettings[k];\n  });\n  return newSettings;\n}\n\n/*\ngiven array of original css class arrays\nand margin PropTypes\nreturn new array with margin classes, or the original aray\n*/\nfunction addMarginClasses(margin, cssClasses = [], denylist = []) {\n  if (!margin || Object.keys(margin).length === 0) return cssClasses;\n  return (cssClasses || []).concat(getMargin(sanitizeProps(margin, denylist) || []));\n}\n\n/*\ngiven array of original css class arrays\nand padding PropTypes\nreturn new array with margin classes, or the original aray\n*/\nfunction addPaddingClasses(padding, cssClasses = [], denylist = []) {\n  if (!padding || Object.keys(padding).length === 0) return cssClasses;\n  return (cssClasses || []).concat(getPadding(sanitizeProps(padding, denylist)) || []);\n}\n\n/*\ngiven margin or padding PropTypes\nadd css classnames\nand return new array of css classes\n*/\nfunction addSpacingClasses({\n  padding = {},\n  margin = {},\n  cssClasses = [],\n  denylistPadding = [],\n  denylistMargin = []\n}) {\n  let newClasses = cssClasses;\n  newClasses = addPaddingClasses(padding, newClasses, denylistPadding);\n  newClasses = addMarginClasses(margin, newClasses, denylistMargin);\n  return newClasses;\n}\n\nvar spacing = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  addDefaultSpacing: addDefaultSpacing,\n  sizePropTypes: sizePropTypes,\n  marginPropTypes: marginPropTypes,\n  paddingPropTypes: paddingPropTypes,\n  getMargin: getMargin,\n  getPadding: getPadding,\n  addMarginClasses: addMarginClasses,\n  addPaddingClasses: addPaddingClasses,\n  verticalMarginPropTypes: verticalMarginPropTypes,\n  verticalPaddingPropTypes: verticalPaddingPropTypes,\n  addSpacingClasses: addSpacingClasses\n});\n\nexport { addSpacingClasses as a, addMarginClasses as b, sizePropTypes as c, verticalPaddingPropTypes as d, getPadding as g, marginPropTypes as m, paddingPropTypes as p, spacing as s, verticalMarginPropTypes as v };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}