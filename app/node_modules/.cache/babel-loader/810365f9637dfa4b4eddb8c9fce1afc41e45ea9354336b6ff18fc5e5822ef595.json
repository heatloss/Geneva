{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { p as props } from './componentEl-eebaee58.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes, p as paddingPropTypes } from './spacing-59630a80.js';\nimport IconCaretLeft from './IconCaretLeft.js';\nimport IconCaretRight from './IconCaretRight.js';\nimport { getContentClasses } from './useSidebarState.js';\nimport { g as getZIndex, z as zIndexProps } from './zIndex-5f32f26b.js';\nfunction SidebarSection({\n  componentEl: Component,\n  children,\n  className,\n  margin,\n  padding,\n  scrollable,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidebar__section'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  if (scrollable) {\n    cssClasses.push('st_sidebar__section--scrollable');\n  }\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nSidebarSection.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for section, if any */\n  margin: marginPropTypes,\n  /** margin for section, if any */\n  padding: paddingPropTypes,\n  /** whether this section should show scrollbars if too much content */\n  scrollable: PropTypes.bool\n};\nSidebarSection.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: null,\n  padding: null,\n  scrollable: true\n};\nSidebarSection.displayName = 'Sidebar.Section';\nfunction SidebarFooter({\n  componentEl: Component,\n  children,\n  className,\n  margin,\n  padding,\n  border,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidebar__section', 'st_sidebar__section--sticky-bottom'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  if (border) cssClasses.push('st_sidebar__section--border');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nSidebarFooter.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin, if any */\n  margin: marginPropTypes,\n  /** margin, if any */\n  padding: paddingPropTypes,\n  /** whether footer should have a border on the top */\n  border: PropTypes.bool\n};\nSidebarFooter.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: null,\n  padding: {\n    all: 'none'\n  },\n  border: true\n};\nSidebarFooter.displayName = 'Sidebar.Footer';\nfunction SidebarHeader({\n  componentEl: Component,\n  children,\n  className,\n  margin,\n  padding,\n  border,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidebar__section', 'st_sidebar__section--sticky-top'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  if (border) {\n    cssClasses.push('st_sidebar__section--border');\n  }\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nSidebarHeader.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** padding for component, if any */\n  padding: paddingPropTypes,\n  /** whether header should have a border on the bottom */\n  border: PropTypes.bool\n};\nSidebarHeader.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: null,\n  padding: {\n    all: 'none'\n  },\n  border: true\n};\nSidebarHeader.displayName = 'Sidebar.Header';\nfunction SidebarToggle({\n  componentEl: Component,\n  className,\n  margin,\n  padding,\n  status,\n  onCollapse,\n  onOpen,\n  position,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidebar__toggle', `st_sidebar__toggle--${position}`, `st_sidebar__toggle--${status}`];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  const getIcon = sidebarStatus => {\n    switch (sidebarStatus) {\n      case 'open':\n        if (position === 'left') return IconCaretLeft;\n        return IconCaretRight;\n      default:\n        if (position === 'left') return IconCaretRight;\n        return IconCaretLeft;\n    }\n  };\n  const ToggleIcon = getIcon(status);\n  const handleClick = e => {\n    e.preventDefault();\n    if (status === 'open' || status === 'opening') {\n      onCollapse();\n    } else {\n      onOpen();\n    }\n  };\n  const label = status === 'open' ? 'close sidebar' : 'open sidebar';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cssClasses.join(' ')\n  }, /*#__PURE__*/React.createElement(\"button\", _extends({\n    className: \"st_sidebar__togglebtn\",\n    type: \"button\",\n    \"aria-label\": label,\n    onClick: handleClick\n  }, otherProps), /*#__PURE__*/React.createElement(ToggleIcon, {\n    size: \"mlg\"\n  })));\n}\nSidebarToggle.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** padding for component, if any. Overrides default */\n  padding: paddingPropTypes,\n  /** current status */\n  status: PropTypes.oneOf(['open', 'opening', 'collapsed', 'collapsing', 'closed', 'closing']),\n  /** event handler when collapse button is clicked */\n  onCollapse: PropTypes.func,\n  /** event handler when open button is clicked */\n  onOpen: PropTypes.func,\n  /** position of sidebar */\n  position: PropTypes.oneOf(['left', 'right'])\n};\nSidebarToggle.defaultProps = {\n  componentEl: 'button',\n  className: null,\n  margin: null,\n  padding: {\n    all: 'xs'\n  },\n  status: 'open',\n  onCollapse: () => null,\n  onOpen: () => null,\n  position: 'left'\n};\nSidebarToggle.displayName = 'Sidebar.Toggle';\nfunction SidebarPage({\n  componentEl: Component,\n  children,\n  className,\n  margin,\n  padding,\n  status,\n  type,\n  position,\n  ...otherProps\n}) {\n  let cssClasses = getContentClasses({\n    type,\n    status,\n    position\n  });\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nSidebarPage.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for section, if any */\n  margin: marginPropTypes,\n  /** margin for section, if any */\n  padding: paddingPropTypes,\n  /** whether sidebar is open (if it's being controlled) */\n  status: PropTypes.oneOf(['open', 'closed', 'collapsed', 'opening', 'closing', 'collapsing']),\n  /** type of sidebar */\n  type: PropTypes.oneOf(['permanent', 'slide', 'push', 'overlay']),\n  /** the position of the sidebar */\n  position: PropTypes.oneOf(['left', 'right'])\n};\nSidebarPage.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: null,\n  padding: {\n    all: 'none'\n  },\n  status: 'open',\n  type: 'permanent',\n  position: 'left'\n};\nSidebarPage.displayName = 'Sidebar.Page';\nfunction Sidebar({\n  componentEl: Component,\n  children,\n  className,\n  status,\n  type,\n  componentRef,\n  top,\n  bottom,\n  position,\n  border,\n  width,\n  zIndex,\n  overlayProps,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidebar', `st_sidebar--${position}`];\n  let overlayCssClasses = ['st_sidebar__overlay'];\n  const overlayStyles = [];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses.push(`st_sidebar--${status}`);\n  cssClasses.push(`st_sidebar--${type}`);\n  if (border) cssClasses.push('st_sidebar--border');\n  if (zIndex) {\n    cssClasses = addClassNames(getZIndex(zIndex), cssClasses);\n    overlayCssClasses = addClassNames(getZIndex(zIndex), overlayCssClasses);\n  }\n  const styles = otherProps.style || {};\n  if (top !== null) {\n    styles['--st-module-sidebar-top'] = top;\n    overlayStyles['--st-module-sidebar-top'] = top;\n  }\n  if (bottom !== null) {\n    styles['--st-module-sidebar-bottom'] = bottom;\n    overlayStyles['--st-module-sidebar-bottom'] = bottom;\n  }\n  if (width !== null) {\n    styles['--st-sidebar-width-open'] = width;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, type === 'overlay' && ['opening', 'closing', 'open'].includes(status) && /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: overlayCssClasses.join(' '),\n    style: overlayStyles\n  }, overlayProps)), /*#__PURE__*/React.createElement(Component, _extends({\n    ref: componentRef,\n    style: styles,\n    className: cssClasses.join(' ')\n  }, otherProps), children));\n}\nSidebar.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** ref for sidebar element */\n  componentRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** whether sidebar is open (if it's being controlled) */\n  status: PropTypes.oneOf(['open', 'closed', 'collapsed', 'opening', 'closing', 'collapsing']),\n  /** type of sidebar */\n  type: PropTypes.oneOf(['permanent', 'slide', 'push', 'overlay']),\n  /** css override for top position of sidebar */\n  top: PropTypes.string,\n  /** css override for bottom position of sidebar */\n  bottom: PropTypes.string,\n  /** whether sidebar should have a border on the side */\n  border: PropTypes.bool,\n  /** the position of the sidebar */\n  position: PropTypes.oneOf(['left', 'right']),\n  /** override width of sidebar if needed. Will be set as the CSS value. Must include units */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * z-index for sidebar in overlay mode.\n   * One of `minor`, `mid`, `mad`, `major`, `top` */\n  zIndex: zIndexProps,\n  /** props for overlay, e.g. onClick={closeSidebar} to close sidebar on click */\n  overlayProps: PropTypes.any\n};\nSidebar.defaultProps = {\n  componentEl: 'div',\n  componentRef: null,\n  className: null,\n  status: 'open',\n  type: 'permanent',\n  top: null,\n  bottom: null,\n  border: true,\n  position: 'left',\n  width: null,\n  zIndex: null,\n  overlayProps: {}\n};\nSidebar.Section = SidebarSection;\nSidebar.Footer = SidebarFooter;\nSidebar.Header = SidebarHeader;\nSidebar.Toggle = SidebarToggle;\nSidebar.Page = SidebarPage;\nexport { Sidebar as S };","map":{"version":3,"names":["_extends","React","PropTypes","p","props","a","addClassNames","c","classNamePropTypes","addSpacingClasses","m","marginPropTypes","paddingPropTypes","IconCaretLeft","IconCaretRight","getContentClasses","g","getZIndex","z","zIndexProps","SidebarSection","componentEl","Component","children","className","margin","padding","scrollable","otherProps","cssClasses","push","createElement","join","propTypes","bool","defaultProps","displayName","SidebarFooter","border","all","SidebarHeader","SidebarToggle","status","onCollapse","onOpen","position","getIcon","sidebarStatus","ToggleIcon","handleClick","e","preventDefault","label","type","onClick","size","oneOf","func","SidebarPage","Sidebar","componentRef","top","bottom","width","zIndex","overlayProps","overlayCssClasses","overlayStyles","styles","style","Fragment","includes","ref","oneOfType","shape","current","any","string","number","Section","Footer","Header","Toggle","Page","S"],"sources":["/Users/mike/node_modules/@screentone/core/es/Sidebar-94cd1a4a.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { p as props } from './componentEl-eebaee58.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes, p as paddingPropTypes } from './spacing-59630a80.js';\nimport IconCaretLeft from './IconCaretLeft.js';\nimport IconCaretRight from './IconCaretRight.js';\nimport { getContentClasses } from './useSidebarState.js';\nimport { g as getZIndex, z as zIndexProps } from './zIndex-5f32f26b.js';\n\nfunction SidebarSection({\n  componentEl: Component,\n  children,\n  className,\n  margin,\n  padding,\n  scrollable,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidebar__section'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  if (scrollable) {\n    cssClasses.push('st_sidebar__section--scrollable');\n  }\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nSidebarSection.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for section, if any */\n  margin: marginPropTypes,\n  /** margin for section, if any */\n  padding: paddingPropTypes,\n  /** whether this section should show scrollbars if too much content */\n  scrollable: PropTypes.bool\n};\nSidebarSection.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: null,\n  padding: null,\n  scrollable: true\n};\nSidebarSection.displayName = 'Sidebar.Section';\n\nfunction SidebarFooter({\n  componentEl: Component,\n  children,\n  className,\n  margin,\n  padding,\n  border,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidebar__section', 'st_sidebar__section--sticky-bottom'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  if (border) cssClasses.push('st_sidebar__section--border');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nSidebarFooter.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin, if any */\n  margin: marginPropTypes,\n  /** margin, if any */\n  padding: paddingPropTypes,\n  /** whether footer should have a border on the top */\n  border: PropTypes.bool\n};\nSidebarFooter.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: null,\n  padding: {\n    all: 'none'\n  },\n  border: true\n};\nSidebarFooter.displayName = 'Sidebar.Footer';\n\nfunction SidebarHeader({\n  componentEl: Component,\n  children,\n  className,\n  margin,\n  padding,\n  border,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidebar__section', 'st_sidebar__section--sticky-top'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  if (border) {\n    cssClasses.push('st_sidebar__section--border');\n  }\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nSidebarHeader.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** padding for component, if any */\n  padding: paddingPropTypes,\n  /** whether header should have a border on the bottom */\n  border: PropTypes.bool\n};\nSidebarHeader.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: null,\n  padding: {\n    all: 'none'\n  },\n  border: true\n};\nSidebarHeader.displayName = 'Sidebar.Header';\n\nfunction SidebarToggle({\n  componentEl: Component,\n  className,\n  margin,\n  padding,\n  status,\n  onCollapse,\n  onOpen,\n  position,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidebar__toggle', `st_sidebar__toggle--${position}`, `st_sidebar__toggle--${status}`];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  const getIcon = sidebarStatus => {\n    switch (sidebarStatus) {\n      case 'open':\n        if (position === 'left') return IconCaretLeft;\n        return IconCaretRight;\n      default:\n        if (position === 'left') return IconCaretRight;\n        return IconCaretLeft;\n    }\n  };\n  const ToggleIcon = getIcon(status);\n  const handleClick = e => {\n    e.preventDefault();\n    if (status === 'open' || status === 'opening') {\n      onCollapse();\n    } else {\n      onOpen();\n    }\n  };\n  const label = status === 'open' ? 'close sidebar' : 'open sidebar';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cssClasses.join(' ')\n  }, /*#__PURE__*/React.createElement(\"button\", _extends({\n    className: \"st_sidebar__togglebtn\",\n    type: \"button\",\n    \"aria-label\": label,\n    onClick: handleClick\n  }, otherProps), /*#__PURE__*/React.createElement(ToggleIcon, {\n    size: \"mlg\"\n  })));\n}\nSidebarToggle.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for component, if any */\n  margin: marginPropTypes,\n  /** padding for component, if any. Overrides default */\n  padding: paddingPropTypes,\n  /** current status */\n  status: PropTypes.oneOf(['open', 'opening', 'collapsed', 'collapsing', 'closed', 'closing']),\n  /** event handler when collapse button is clicked */\n  onCollapse: PropTypes.func,\n  /** event handler when open button is clicked */\n  onOpen: PropTypes.func,\n  /** position of sidebar */\n  position: PropTypes.oneOf(['left', 'right'])\n};\nSidebarToggle.defaultProps = {\n  componentEl: 'button',\n  className: null,\n  margin: null,\n  padding: {\n    all: 'xs'\n  },\n  status: 'open',\n  onCollapse: () => null,\n  onOpen: () => null,\n  position: 'left'\n};\nSidebarToggle.displayName = 'Sidebar.Toggle';\n\nfunction SidebarPage({\n  componentEl: Component,\n  children,\n  className,\n  margin,\n  padding,\n  status,\n  type,\n  position,\n  ...otherProps\n}) {\n  let cssClasses = getContentClasses({\n    type,\n    status,\n    position\n  });\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    padding,\n    cssClasses\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: cssClasses.join(' ')\n  }, otherProps), children);\n}\nSidebarPage.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for section, if any */\n  margin: marginPropTypes,\n  /** margin for section, if any */\n  padding: paddingPropTypes,\n  /** whether sidebar is open (if it's being controlled) */\n  status: PropTypes.oneOf(['open', 'closed', 'collapsed', 'opening', 'closing', 'collapsing']),\n  /** type of sidebar */\n  type: PropTypes.oneOf(['permanent', 'slide', 'push', 'overlay']),\n  /** the position of the sidebar */\n  position: PropTypes.oneOf(['left', 'right'])\n};\nSidebarPage.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: null,\n  padding: {\n    all: 'none'\n  },\n  status: 'open',\n  type: 'permanent',\n  position: 'left'\n};\nSidebarPage.displayName = 'Sidebar.Page';\n\nfunction Sidebar({\n  componentEl: Component,\n  children,\n  className,\n  status,\n  type,\n  componentRef,\n  top,\n  bottom,\n  position,\n  border,\n  width,\n  zIndex,\n  overlayProps,\n  ...otherProps\n}) {\n  let cssClasses = ['st_sidebar', `st_sidebar--${position}`];\n  let overlayCssClasses = ['st_sidebar__overlay'];\n  const overlayStyles = [];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses.push(`st_sidebar--${status}`);\n  cssClasses.push(`st_sidebar--${type}`);\n  if (border) cssClasses.push('st_sidebar--border');\n  if (zIndex) {\n    cssClasses = addClassNames(getZIndex(zIndex), cssClasses);\n    overlayCssClasses = addClassNames(getZIndex(zIndex), overlayCssClasses);\n  }\n  const styles = otherProps.style || {};\n  if (top !== null) {\n    styles['--st-module-sidebar-top'] = top;\n    overlayStyles['--st-module-sidebar-top'] = top;\n  }\n  if (bottom !== null) {\n    styles['--st-module-sidebar-bottom'] = bottom;\n    overlayStyles['--st-module-sidebar-bottom'] = bottom;\n  }\n  if (width !== null) {\n    styles['--st-sidebar-width-open'] = width;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, type === 'overlay' && ['opening', 'closing', 'open'].includes(status) && /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: overlayCssClasses.join(' '),\n    style: overlayStyles\n  }, overlayProps)), /*#__PURE__*/React.createElement(Component, _extends({\n    ref: componentRef,\n    style: styles,\n    className: cssClasses.join(' ')\n  }, otherProps), children));\n}\nSidebar.propTypes = {\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** ref for sidebar element */\n  componentRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** whether sidebar is open (if it's being controlled) */\n  status: PropTypes.oneOf(['open', 'closed', 'collapsed', 'opening', 'closing', 'collapsing']),\n  /** type of sidebar */\n  type: PropTypes.oneOf(['permanent', 'slide', 'push', 'overlay']),\n  /** css override for top position of sidebar */\n  top: PropTypes.string,\n  /** css override for bottom position of sidebar */\n  bottom: PropTypes.string,\n  /** whether sidebar should have a border on the side */\n  border: PropTypes.bool,\n  /** the position of the sidebar */\n  position: PropTypes.oneOf(['left', 'right']),\n  /** override width of sidebar if needed. Will be set as the CSS value. Must include units */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * z-index for sidebar in overlay mode.\n   * One of `minor`, `mid`, `mad`, `major`, `top` */\n  zIndex: zIndexProps,\n  /** props for overlay, e.g. onClick={closeSidebar} to close sidebar on click */\n  overlayProps: PropTypes.any\n};\nSidebar.defaultProps = {\n  componentEl: 'div',\n  componentRef: null,\n  className: null,\n  status: 'open',\n  type: 'permanent',\n  top: null,\n  bottom: null,\n  border: true,\n  position: 'left',\n  width: null,\n  zIndex: null,\n  overlayProps: {}\n};\nSidebar.Section = SidebarSection;\nSidebar.Footer = SidebarFooter;\nSidebar.Header = SidebarHeader;\nSidebar.Toggle = SidebarToggle;\nSidebar.Page = SidebarPage;\n\nexport { Sidebar as S };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}