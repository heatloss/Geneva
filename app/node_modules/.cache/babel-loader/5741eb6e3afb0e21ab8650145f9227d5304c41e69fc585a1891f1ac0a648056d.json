{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { p as props } from './componentEl-eebaee58.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes } from './spacing-59630a80.js';\nimport { G as Group } from './Group-3717a816.js';\nimport { T as Typography } from './Typography-7ee33996.js';\n\n/**\nThis is a simple Circular Loader\n*/\nfunction LoaderBar({\n  componentEl,\n  margin,\n  className,\n  percent,\n  displayPercent,\n  text,\n  label,\n  labelId,\n  ...otherProps\n}) {\n  let cssClasses = ['st_loaderbar'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  const ariaProps = {\n    role: 'progressbar',\n    'aria-valuenow': percent,\n    'aria-valuemin': 0,\n    'aria-valuemax': 100\n  };\n  if (label && labelId) ariaProps['aria-labelledby'] = labelId;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, label && labelId && /*#__PURE__*/React.createElement(Typography, {\n    weight: \"bold\",\n    size: \"sm\",\n    id: labelId,\n    margin: {\n      bottom: 'sm'\n    }\n  }, label) || null, /*#__PURE__*/React.createElement(Group, _extends({\n    componentEl: componentEl,\n    gap: \"md\"\n  }, ariaProps, otherProps, {\n    className: cssClasses.join(' ')\n  }), text && /*#__PURE__*/React.createElement(Typography, {\n    size: \"sm\"\n  }, text, \"\\u2026\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"st_loaderbar__bar\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"st_loaderbar__status\",\n    style: {\n      width: `${percent}%`\n    }\n  })), displayPercent && percent && /*#__PURE__*/React.createElement(Typography, {\n    size: \"sm\"\n  }, percent, \"%\") || null));\n}\nLoaderBar.propTypes = {\n  /** whether to display percent done */\n  displayPercent: PropTypes.bool,\n  /** percent done loading */\n  percent: PropTypes.number,\n  /**\n   * Text for \"Loading…\" Use an active verb to describe what the bar is accomplishing.\n   * The \"…\" will automatically be appended */\n  text: PropTypes.string,\n  /** label for progressbar. Must also set `labelId`. */\n  label: PropTypes.string,\n  /** unique id for progressbar label, for accessibility purposes. Used for `label` */\n  labelId: PropTypes.string,\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for component, if any */\n  margin: marginPropTypes\n};\nLoaderBar.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: null,\n  percent: 0,\n  displayPercent: true,\n  text: 'Loading',\n  label: null,\n  labelId: null\n};\nexport { LoaderBar as L };","map":{"version":3,"names":["_extends","React","PropTypes","p","props","a","addClassNames","c","classNamePropTypes","addSpacingClasses","m","marginPropTypes","G","Group","T","Typography","LoaderBar","componentEl","margin","className","percent","displayPercent","text","label","labelId","otherProps","cssClasses","ariaProps","role","createElement","Fragment","weight","size","id","bottom","gap","join","style","width","propTypes","bool","number","string","defaultProps","L"],"sources":["/Users/mike/node_modules/@screentone/core/es/LoaderBar-b527062b.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { p as props } from './componentEl-eebaee58.js';\nimport { a as addClassNames, c as classNamePropTypes } from './classNames-56c6ff01.js';\nimport { a as addSpacingClasses, m as marginPropTypes } from './spacing-59630a80.js';\nimport { G as Group } from './Group-3717a816.js';\nimport { T as Typography } from './Typography-7ee33996.js';\n\n/**\nThis is a simple Circular Loader\n*/\nfunction LoaderBar({\n  componentEl,\n  margin,\n  className,\n  percent,\n  displayPercent,\n  text,\n  label,\n  labelId,\n  ...otherProps\n}) {\n  let cssClasses = ['st_loaderbar'];\n  cssClasses = addClassNames(className, cssClasses);\n  cssClasses = addSpacingClasses({\n    margin,\n    cssClasses\n  });\n  const ariaProps = {\n    role: 'progressbar',\n    'aria-valuenow': percent,\n    'aria-valuemin': 0,\n    'aria-valuemax': 100\n  };\n  if (label && labelId) ariaProps['aria-labelledby'] = labelId;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, label && labelId && /*#__PURE__*/React.createElement(Typography, {\n    weight: \"bold\",\n    size: \"sm\",\n    id: labelId,\n    margin: {\n      bottom: 'sm'\n    }\n  }, label) || null, /*#__PURE__*/React.createElement(Group, _extends({\n    componentEl: componentEl,\n    gap: \"md\"\n  }, ariaProps, otherProps, {\n    className: cssClasses.join(' ')\n  }), text && /*#__PURE__*/React.createElement(Typography, {\n    size: \"sm\"\n  }, text, \"\\u2026\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"st_loaderbar__bar\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"st_loaderbar__status\",\n    style: {\n      width: `${percent}%`\n    }\n  })), displayPercent && percent && /*#__PURE__*/React.createElement(Typography, {\n    size: \"sm\"\n  }, percent, \"%\") || null));\n}\nLoaderBar.propTypes = {\n  /** whether to display percent done */\n  displayPercent: PropTypes.bool,\n  /** percent done loading */\n  percent: PropTypes.number,\n  /**\n   * Text for \"Loading…\" Use an active verb to describe what the bar is accomplishing.\n   * The \"…\" will automatically be appended */\n  text: PropTypes.string,\n  /** label for progressbar. Must also set `labelId`. */\n  label: PropTypes.string,\n  /** unique id for progressbar label, for accessibility purposes. Used for `label` */\n  labelId: PropTypes.string,\n  /** dom element or component to use for outermost wrapper */\n  componentEl: props,\n  /** extra CSS classes, if any */\n  className: classNamePropTypes,\n  /** margin for component, if any */\n  margin: marginPropTypes\n};\nLoaderBar.defaultProps = {\n  componentEl: 'div',\n  className: null,\n  margin: null,\n  percent: 0,\n  displayPercent: true,\n  text: 'Loading',\n  label: null,\n  labelId: null\n};\n\nexport { LoaderBar as L };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}